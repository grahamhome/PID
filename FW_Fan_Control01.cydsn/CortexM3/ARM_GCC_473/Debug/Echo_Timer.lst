ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Echo_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Echo_Timer_initVar
  19              		.bss
  20              		.type	Echo_Timer_initVar, %object
  21              		.size	Echo_Timer_initVar, 1
  22              	Echo_Timer_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Echo_Timer_Init,"ax",%progbits
  25              		.align	2
  26              		.global	Echo_Timer_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	Echo_Timer_Init, %function
  30              	Echo_Timer_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Echo_Timer.c"
   1:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Echo_Timer.c **** * File Name: Echo_Timer.c
   3:.\Generated_Source\PSoC5/Echo_Timer.c **** * Version 2.60
   4:.\Generated_Source\PSoC5/Echo_Timer.c **** *
   5:.\Generated_Source\PSoC5/Echo_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Echo_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Echo_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Echo_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Echo_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Echo_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Echo_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  15:.\Generated_Source\PSoC5/Echo_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  17:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Echo_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Echo_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Echo_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Echo_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  24:.\Generated_Source\PSoC5/Echo_Timer.c **** #include "Echo_Timer.h"
  25:.\Generated_Source\PSoC5/Echo_Timer.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 2


  26:.\Generated_Source\PSoC5/Echo_Timer.c **** uint8 Echo_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  28:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  29:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_Init
  31:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  33:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  36:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  39:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Echo_Timer.c **** *
  42:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Echo_Timer.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if(!Echo_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Echo_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Echo_Timer.c ****             uint8 Echo_Timer_interruptState;
  48:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  50:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (Echo_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= Echo_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  54:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_CONTROL2 &= ((uint8)(~Echo_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  59:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_CONTROL3 &= ((uint8)(~Echo_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  63:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Echo_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 3


  68:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  69:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Echo_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Echo_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  76:.\Generated_Source\PSoC5/Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Echo_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Echo_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  82:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  84:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Echo_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL2 |= Echo_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  90:.\Generated_Source\PSoC5/Echo_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 &= ((uint8)(~Echo_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 |= Echo_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  95:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 &= ((uint8)(~Echo_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 |= Echo_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Echo_Timer.c **** 
  99:.\Generated_Source\PSoC5/Echo_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Echo_Timer.c ****                 Echo_Timer_CONTROL3 |= Echo_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Echo_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 103:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 105:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_RT1 &= ((uint8)(~Echo_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_RT1 |= Echo_Timer_SYNC;
 108:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 109:.\Generated_Source\PSoC5/Echo_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_RT1 &= ((uint8)(~Echo_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_RT1 |= Echo_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 113:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL2 |= Echo_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 117:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_WritePeriod(Echo_Timer_INIT_PERIOD);
  48              		.loc 1 118 0
  49 0006 4FF6FF70 		movw	r0, #65535
  50 000a FFF7FEFF 		bl	Echo_Timer_WritePeriod
 119:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_WriteCounter(Echo_Timer_INIT_PERIOD);
  51              		.loc 1 119 0
  52 000e 4FF6FF70 		movw	r0, #65535
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 4


  53 0012 FFF7FEFF 		bl	Echo_Timer_WriteCounter
 120:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 121:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (Echo_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CAPTURE_COUNT_CTRL |= Echo_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_SetCaptureCount(Echo_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 126:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_SetCaptureMode(Echo_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 131:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Echo_Timer.c ****             #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Echo_Timer.c ****                 if (0u == (Echo_Timer_CONTROL & Echo_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Echo_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Echo_Timer.c ****                     Echo_Timer_SetTriggerMode(Echo_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Echo_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Echo_Timer.c ****             #endif /* (!Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 140:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_interruptState = CyEnterCriticalSection();
  54              		.loc 1 142 0
  55 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  56 001a 0346     		mov	r3, r0
  57 001c FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 144:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_STATUS_AUX_CTRL |= Echo_Timer_STATUS_ACTL_INT_EN_MASK;
  58              		.loc 1 145 0
  59 001e 46F29953 		movw	r3, #26009
  60 0022 C4F20003 		movt	r3, 16384
  61 0026 46F29952 		movw	r2, #26009
  62 002a C4F20002 		movt	r2, 16384
  63 002e 1278     		ldrb	r2, [r2, #0]
  64 0030 D2B2     		uxtb	r2, r2
  65 0032 42F01002 		orr	r2, r2, #16
  66 0036 D2B2     		uxtb	r2, r2
  67 0038 1A70     		strb	r2, [r3, #0]
 146:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 147:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Echo_Timer.c ****         CyExitCriticalSection(Echo_Timer_interruptState);
  68              		.loc 1 148 0
  69 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  70 003c 1846     		mov	r0, r3
  71 003e FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 150:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Echo_Timer.c **** 		
 154:.\Generated_Source\PSoC5/Echo_Timer.c **** 		
 155:.\Generated_Source\PSoC5/Echo_Timer.c ****         #if (Echo_Timer_InterruptOnCaptureCount && !Echo_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Echo_Timer.c ****             Echo_Timer_SetInterruptCount(Echo_Timer_INIT_INT_CAPTURE_COUNT);
  72              		.loc 1 156 0
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 5


  73 0042 4FF00000 		mov	r0, #0
  74 0046 FFF7FEFF 		bl	Echo_Timer_SetInterruptCount
 157:.\Generated_Source\PSoC5/Echo_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 159:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_ClearFIFO();
  75              		.loc 1 159 0
  76 004a FFF7FEFF 		bl	Echo_Timer_ClearFIFO
 160:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 162:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_SetInterruptMode(Echo_Timer_INIT_INTERRUPT_MODE);
  77              		.loc 1 162 0
  78 004e 4FF00200 		mov	r0, #2
  79 0052 FFF7FEFF 		bl	Echo_Timer_SetInterruptMode
 163:.\Generated_Source\PSoC5/Echo_Timer.c **** }
  80              		.loc 1 163 0
  81 0056 07F10807 		add	r7, r7, #8
  82 005a BD46     		mov	sp, r7
  83 005c 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE0:
  86              		.size	Echo_Timer_Init, .-Echo_Timer_Init
  87 005e 00BF     		.section	.text.Echo_Timer_Enable,"ax",%progbits
  88              		.align	2
  89              		.global	Echo_Timer_Enable
  90              		.thumb
  91              		.thumb_func
  92              		.type	Echo_Timer_Enable, %function
  93              	Echo_Timer_Enable:
  94              	.LFB1:
 164:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 165:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 166:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_Enable
 168:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 170:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 173:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 176:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 179:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Echo_Timer.c **** {
  95              		.loc 1 181 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100 0000 80B4     		push	{r7}
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 6


 105              	.LCFI4:
 106              		.cfi_def_cfa_register 7
 182:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (Echo_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_GLOBAL_ENABLE |= Echo_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_GLOBAL_STBY_ENABLE |= Echo_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 188:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED || Echo_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL |= Echo_Timer_CTRL_ENABLE;
 107              		.loc 1 190 0
 108 0004 46F27953 		movw	r3, #25977
 109 0008 C4F20003 		movt	r3, 16384
 110 000c 46F27952 		movw	r2, #25977
 111 0010 C4F20002 		movt	r2, 16384
 112 0014 1278     		ldrb	r2, [r2, #0]
 113 0016 D2B2     		uxtb	r2, r2
 114 0018 62F07F02 		orn	r2, r2, #127
 115 001c D2B2     		uxtb	r2, r2
 116 001e 1A70     		strb	r2, [r3, #0]
 191:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 117              		.loc 1 192 0
 118 0020 BD46     		mov	sp, r7
 119 0022 80BC     		pop	{r7}
 120 0024 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE1:
 123              		.size	Echo_Timer_Enable, .-Echo_Timer_Enable
 124 0026 00BF     		.section	.text.Echo_Timer_Start,"ax",%progbits
 125              		.align	2
 126              		.global	Echo_Timer_Start
 127              		.thumb
 128              		.thumb_func
 129              		.type	Echo_Timer_Start, %function
 130              	Echo_Timer_Start:
 131              	.LFB2:
 193:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 194:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 195:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_Start
 197:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 199:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Echo_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Echo_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 204:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 207:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 210:.\Generated_Source\PSoC5/Echo_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Echo_Timer_initVar: Is modified when this function is called for the
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 7


 212:.\Generated_Source\PSoC5/Echo_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 214:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 132              		.loc 1 216 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              	.LCFI5:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 00AF     		add	r7, sp, #0
 142              	.LCFI6:
 143              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC5/Echo_Timer.c ****     if(Echo_Timer_initVar == 0u)
 144              		.loc 1 217 0
 145 0004 40F20003 		movw	r3, #:lower16:Echo_Timer_initVar
 146 0008 C0F20003 		movt	r3, #:upper16:Echo_Timer_initVar
 147 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 148 000e 002B     		cmp	r3, #0
 149 0010 08D1     		bne	.L4
 218:.\Generated_Source\PSoC5/Echo_Timer.c ****     {
 219:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_Init();
 150              		.loc 1 219 0
 151 0012 FFF7FEFF 		bl	Echo_Timer_Init
 220:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 221:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 152              		.loc 1 221 0
 153 0016 40F20003 		movw	r3, #:lower16:Echo_Timer_initVar
 154 001a C0F20003 		movt	r3, #:upper16:Echo_Timer_initVar
 155 001e 4FF00102 		mov	r2, #1
 156 0022 1A70     		strb	r2, [r3, #0]
 157              	.L4:
 222:.\Generated_Source\PSoC5/Echo_Timer.c ****     }
 223:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 224:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_Enable();
 158              		.loc 1 225 0
 159 0024 FFF7FEFF 		bl	Echo_Timer_Enable
 226:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 160              		.loc 1 226 0
 161 0028 80BD     		pop	{r7, pc}
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	Echo_Timer_Start, .-Echo_Timer_Start
 165 002a 00BF     		.section	.text.Echo_Timer_Stop,"ax",%progbits
 166              		.align	2
 167              		.global	Echo_Timer_Stop
 168              		.thumb
 169              		.thumb_func
 170              		.type	Echo_Timer_Stop, %function
 171              	Echo_Timer_Stop:
 172              	.LFB3:
 227:.\Generated_Source\PSoC5/Echo_Timer.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 8


 228:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 229:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_Stop
 231:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 233:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Echo_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 237:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 240:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 243:.\Generated_Source\PSoC5/Echo_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Echo_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 246:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 173              		.loc 1 248 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 0000 80B4     		push	{r7}
 179              	.LCFI7:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 00AF     		add	r7, sp, #0
 183              	.LCFI8:
 184              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if(!Echo_Timer_UDB_CONTROL_REG_REMOVED || Echo_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= ((uint8)(~Echo_Timer_CTRL_ENABLE));
 185              		.loc 1 251 0
 186 0004 46F27953 		movw	r3, #25977
 187 0008 C4F20003 		movt	r3, 16384
 188 000c 46F27952 		movw	r2, #25977
 189 0010 C4F20002 		movt	r2, 16384
 190 0014 1278     		ldrb	r2, [r2, #0]
 191 0016 D2B2     		uxtb	r2, r2
 192 0018 02F07F02 		and	r2, r2, #127
 193 001c D2B2     		uxtb	r2, r2
 194 001e 1A70     		strb	r2, [r3, #0]
 252:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 254:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (Echo_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_GLOBAL_ENABLE &= ((uint8)(~Echo_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Echo_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 195              		.loc 1 259 0
 196 0020 BD46     		mov	sp, r7
 197 0022 80BC     		pop	{r7}
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 9


 198 0024 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	Echo_Timer_Stop, .-Echo_Timer_Stop
 202 0026 00BF     		.section	.text.Echo_Timer_SetInterruptMode,"ax",%progbits
 203              		.align	2
 204              		.global	Echo_Timer_SetInterruptMode
 205              		.thumb
 206              		.thumb_func
 207              		.type	Echo_Timer_SetInterruptMode, %function
 208              	Echo_Timer_SetInterruptMode:
 209              	.LFB4:
 260:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 261:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 262:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 266:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Echo_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 271:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Echo_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Echo_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 275:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 278:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 210              		.loc 1 280 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI9:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 83B0     		sub	sp, sp, #12
 220              	.LCFI10:
 221              		.cfi_def_cfa_offset 16
 222 0004 00AF     		add	r7, sp, #0
 223              	.LCFI11:
 224              		.cfi_def_cfa_register 7
 225 0006 0346     		mov	r3, r0
 226 0008 FB71     		strb	r3, [r7, #7]
 281:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_STATUS_MASK = interruptMode;
 227              		.loc 1 281 0
 228 000a 46F28953 		movw	r3, #25993
 229 000e C4F20003 		movt	r3, 16384
 230 0012 FA79     		ldrb	r2, [r7, #7]
 231 0014 1A70     		strb	r2, [r3, #0]
 282:.\Generated_Source\PSoC5/Echo_Timer.c **** }
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 10


 232              		.loc 1 282 0
 233 0016 07F10C07 		add	r7, r7, #12
 234 001a BD46     		mov	sp, r7
 235 001c 80BC     		pop	{r7}
 236 001e 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE4:
 239              		.size	Echo_Timer_SetInterruptMode, .-Echo_Timer_SetInterruptMode
 240              		.section	.text.Echo_Timer_SoftwareCapture,"ax",%progbits
 241              		.align	2
 242              		.global	Echo_Timer_SoftwareCapture
 243              		.thumb
 244              		.thumb_func
 245              		.type	Echo_Timer_SoftwareCapture, %function
 246              	Echo_Timer_SoftwareCapture:
 247              	.LFB5:
 283:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 284:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 285:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 289:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 292:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 295:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 298:.\Generated_Source\PSoC5/Echo_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Echo_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 301:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 248              		.loc 1 303 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              	.LCFI12:
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0002 00AF     		add	r7, sp, #0
 258              	.LCFI13:
 259              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Echo_Timer.c ****     (void)Echo_Timer_COUNTER_LSB;
 260              		.loc 1 305 0
 261 0004 46F61023 		movw	r3, #27152
 262 0008 C4F20003 		movt	r3, 16384
 263 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 306:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Capture Data is now in the FIFO */
 307:.\Generated_Source\PSoC5/Echo_Timer.c **** }
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 11


 264              		.loc 1 307 0
 265 000e BD46     		mov	sp, r7
 266 0010 80BC     		pop	{r7}
 267 0012 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	Echo_Timer_SoftwareCapture, .-Echo_Timer_SoftwareCapture
 271              		.section	.text.Echo_Timer_ReadStatusRegister,"ax",%progbits
 272              		.align	2
 273              		.global	Echo_Timer_ReadStatusRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	Echo_Timer_ReadStatusRegister, %function
 277              	Echo_Timer_ReadStatusRegister:
 278              	.LFB6:
 308:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 309:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 310:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadStatusRegister
 312:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 313:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 314:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 315:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Reads the status register and returns it's state. This function should use
 316:.\Generated_Source\PSoC5/Echo_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 317:.\Generated_Source\PSoC5/Echo_Timer.c **** *  be permuteable.
 318:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 319:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 320:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 321:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 322:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 323:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The contents of the status register
 324:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 325:.\Generated_Source\PSoC5/Echo_Timer.c **** * Side Effects:
 326:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Status register bits may be clear on read.
 327:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 328:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC5/Echo_Timer.c **** uint8   Echo_Timer_ReadStatusRegister(void) 
 330:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 279              		.loc 1 330 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              	.LCFI14:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 00AF     		add	r7, sp, #0
 289              	.LCFI15:
 290              		.cfi_def_cfa_register 7
 331:.\Generated_Source\PSoC5/Echo_Timer.c ****     return (Echo_Timer_STATUS);
 291              		.loc 1 331 0
 292 0004 46F26953 		movw	r3, #25961
 293 0008 C4F20003 		movt	r3, 16384
 294 000c 1B78     		ldrb	r3, [r3, #0]
 295 000e DBB2     		uxtb	r3, r3
 332:.\Generated_Source\PSoC5/Echo_Timer.c **** }
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 12


 296              		.loc 1 332 0
 297 0010 1846     		mov	r0, r3
 298 0012 BD46     		mov	sp, r7
 299 0014 80BC     		pop	{r7}
 300 0016 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE6:
 303              		.size	Echo_Timer_ReadStatusRegister, .-Echo_Timer_ReadStatusRegister
 304              		.section	.text.Echo_Timer_ReadControlRegister,"ax",%progbits
 305              		.align	2
 306              		.global	Echo_Timer_ReadControlRegister
 307              		.thumb
 308              		.thumb_func
 309              		.type	Echo_Timer_ReadControlRegister, %function
 310              	Echo_Timer_ReadControlRegister:
 311              	.LFB7:
 333:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 334:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 335:.\Generated_Source\PSoC5/Echo_Timer.c **** #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 336:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 337:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 338:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadControlRegister
 340:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 342:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 343:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Reads the control register and returns it's value.
 344:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 345:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 346:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 347:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 348:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 349:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The contents of the control register
 350:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 351:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/Echo_Timer.c **** uint8 Echo_Timer_ReadControlRegister(void) 
 353:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 312              		.loc 1 353 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI16:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 00AF     		add	r7, sp, #0
 322              	.LCFI17:
 323              		.cfi_def_cfa_register 7
 354:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 355:.\Generated_Source\PSoC5/Echo_Timer.c ****         return ((uint8)Echo_Timer_CONTROL);
 324              		.loc 1 355 0
 325 0004 46F27953 		movw	r3, #25977
 326 0008 C4F20003 		movt	r3, 16384
 327 000c 1B78     		ldrb	r3, [r3, #0]
 328 000e DBB2     		uxtb	r3, r3
 356:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 13


 357:.\Generated_Source\PSoC5/Echo_Timer.c ****         return (0);
 358:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* (!Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 359:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 329              		.loc 1 359 0
 330 0010 1846     		mov	r0, r3
 331 0012 BD46     		mov	sp, r7
 332 0014 80BC     		pop	{r7}
 333 0016 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE7:
 336              		.size	Echo_Timer_ReadControlRegister, .-Echo_Timer_ReadControlRegister
 337              		.section	.text.Echo_Timer_WriteControlRegister,"ax",%progbits
 338              		.align	2
 339              		.global	Echo_Timer_WriteControlRegister
 340              		.thumb
 341              		.thumb_func
 342              		.type	Echo_Timer_WriteControlRegister, %function
 343              	Echo_Timer_WriteControlRegister:
 344              	.LFB8:
 360:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 361:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 362:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 363:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_WriteControlRegister
 364:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 365:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 366:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 367:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Sets the bit-field of the control register.
 368:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 369:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 370:.\Generated_Source\PSoC5/Echo_Timer.c **** *  control: The contents of the control register
 371:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 372:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 373:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 374:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 375:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_WriteControlRegister(uint8 control) 
 376:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 345              		.loc 1 376 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              	.LCFI18:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 7, -4
 354 0002 83B0     		sub	sp, sp, #12
 355              	.LCFI19:
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              	.LCFI20:
 359              		.cfi_def_cfa_register 7
 360 0006 0346     		mov	r3, r0
 361 0008 FB71     		strb	r3, [r7, #7]
 377:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED) 
 378:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL = control;
 362              		.loc 1 378 0
 363 000a 46F27953 		movw	r3, #25977
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 14


 364 000e C4F20003 		movt	r3, 16384
 365 0012 FA79     		ldrb	r2, [r7, #7]
 366 0014 1A70     		strb	r2, [r3, #0]
 379:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
 380:.\Generated_Source\PSoC5/Echo_Timer.c ****         control = 0u;
 381:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* (!Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 382:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 367              		.loc 1 382 0
 368 0016 07F10C07 		add	r7, r7, #12
 369 001a BD46     		mov	sp, r7
 370 001c 80BC     		pop	{r7}
 371 001e 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE8:
 374              		.size	Echo_Timer_WriteControlRegister, .-Echo_Timer_WriteControlRegister
 375              		.section	.text.Echo_Timer_ReadPeriod,"ax",%progbits
 376              		.align	2
 377              		.global	Echo_Timer_ReadPeriod
 378              		.thumb
 379              		.thumb_func
 380              		.type	Echo_Timer_ReadPeriod, %function
 381              	Echo_Timer_ReadPeriod:
 382              	.LFB9:
 383:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 384:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Remove API if control register is unused */
 385:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 386:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 387:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 388:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadPeriod
 389:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 390:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 391:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 392:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function returns the current value of the Period.
 393:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 394:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 395:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 396:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 397:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 398:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The present value of the counter.
 399:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 400:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 401:.\Generated_Source\PSoC5/Echo_Timer.c **** uint16 Echo_Timer_ReadPeriod(void) 
 402:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 383              		.loc 1 402 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              	.LCFI21:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 00AF     		add	r7, sp, #0
 393              	.LCFI22:
 394              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/Echo_Timer.c ****    #if(Echo_Timer_UsingFixedFunction)
 404:.\Generated_Source\PSoC5/Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Echo_Timer_PERIOD_LSB_PTR));
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 15


 405:.\Generated_Source\PSoC5/Echo_Timer.c ****    #else
 406:.\Generated_Source\PSoC5/Echo_Timer.c ****        return (CY_GET_REG16(Echo_Timer_PERIOD_LSB_PTR));
 395              		.loc 1 406 0
 396 0004 46F65023 		movw	r3, #27216
 397 0008 C4F20003 		movt	r3, 16384
 398 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 399 000e 9BB2     		uxth	r3, r3
 407:.\Generated_Source\PSoC5/Echo_Timer.c ****    #endif /* (Echo_Timer_UsingFixedFunction) */
 408:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 400              		.loc 1 408 0
 401 0010 1846     		mov	r0, r3
 402 0012 BD46     		mov	sp, r7
 403 0014 80BC     		pop	{r7}
 404 0016 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	Echo_Timer_ReadPeriod, .-Echo_Timer_ReadPeriod
 408              		.section	.text.Echo_Timer_WritePeriod,"ax",%progbits
 409              		.align	2
 410              		.global	Echo_Timer_WritePeriod
 411              		.thumb
 412              		.thumb_func
 413              		.type	Echo_Timer_WritePeriod, %function
 414              	Echo_Timer_WritePeriod:
 415              	.LFB10:
 409:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 410:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 411:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 412:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_WritePeriod
 413:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 414:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 415:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 416:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function is used to change the period of the counter.  The new period
 417:.\Generated_Source\PSoC5/Echo_Timer.c **** *  will be loaded the next time terminal count is detected.
 418:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 419:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 420:.\Generated_Source\PSoC5/Echo_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 421:.\Generated_Source\PSoC5/Echo_Timer.c **** *          result in the counter remaining at zero.
 422:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 423:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 424:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 425:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 426:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 427:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_WritePeriod(uint16 period) 
 428:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 416              		.loc 1 428 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 8
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              	.LCFI23:
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              	.LCFI24:
 427              		.cfi_def_cfa_offset 16
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 16


 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI25:
 430              		.cfi_def_cfa_register 7
 431 0006 0346     		mov	r3, r0
 432 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 429:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if(Echo_Timer_UsingFixedFunction)
 430:.\Generated_Source\PSoC5/Echo_Timer.c ****         uint16 period_temp = (uint16)period;
 431:.\Generated_Source\PSoC5/Echo_Timer.c ****         CY_SET_REG16(Echo_Timer_PERIOD_LSB_PTR, period_temp);
 432:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
 433:.\Generated_Source\PSoC5/Echo_Timer.c ****         CY_SET_REG16(Echo_Timer_PERIOD_LSB_PTR, period);
 433              		.loc 1 433 0
 434 000a 46F65023 		movw	r3, #27216
 435 000e C4F20003 		movt	r3, 16384
 436 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 437 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 434:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 435:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 438              		.loc 1 435 0
 439 0016 07F10C07 		add	r7, r7, #12
 440 001a BD46     		mov	sp, r7
 441 001c 80BC     		pop	{r7}
 442 001e 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE10:
 445              		.size	Echo_Timer_WritePeriod, .-Echo_Timer_WritePeriod
 446              		.section	.text.Echo_Timer_ReadCapture,"ax",%progbits
 447              		.align	2
 448              		.global	Echo_Timer_ReadCapture
 449              		.thumb
 450              		.thumb_func
 451              		.type	Echo_Timer_ReadCapture, %function
 452              	Echo_Timer_ReadCapture:
 453              	.LFB11:
 436:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 437:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 438:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadCapture
 440:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 441:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 442:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 443:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function returns the last value captured.
 444:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 445:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 446:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 447:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 448:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 449:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Present Capture value.
 450:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 451:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC5/Echo_Timer.c **** uint16 Echo_Timer_ReadCapture(void) 
 453:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 454              		.loc 1 453 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 17


 460              	.LCFI26:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 00AF     		add	r7, sp, #0
 464              	.LCFI27:
 465              		.cfi_def_cfa_register 7
 454:.\Generated_Source\PSoC5/Echo_Timer.c ****    #if(Echo_Timer_UsingFixedFunction)
 455:.\Generated_Source\PSoC5/Echo_Timer.c ****        return ((uint16)CY_GET_REG16(Echo_Timer_CAPTURE_LSB_PTR));
 456:.\Generated_Source\PSoC5/Echo_Timer.c ****    #else
 457:.\Generated_Source\PSoC5/Echo_Timer.c ****        return (CY_GET_REG16(Echo_Timer_CAPTURE_LSB_PTR));
 466              		.loc 1 457 0
 467 0004 46F69023 		movw	r3, #27280
 468 0008 C4F20003 		movt	r3, 16384
 469 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 470 000e 9BB2     		uxth	r3, r3
 458:.\Generated_Source\PSoC5/Echo_Timer.c ****    #endif /* (Echo_Timer_UsingFixedFunction) */
 459:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 471              		.loc 1 459 0
 472 0010 1846     		mov	r0, r3
 473 0012 BD46     		mov	sp, r7
 474 0014 80BC     		pop	{r7}
 475 0016 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE11:
 478              		.size	Echo_Timer_ReadCapture, .-Echo_Timer_ReadCapture
 479              		.section	.text.Echo_Timer_WriteCounter,"ax",%progbits
 480              		.align	2
 481              		.global	Echo_Timer_WriteCounter
 482              		.thumb
 483              		.thumb_func
 484              		.type	Echo_Timer_WriteCounter, %function
 485              	Echo_Timer_WriteCounter:
 486              	.LFB12:
 460:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 461:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 462:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 463:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_WriteCounter
 464:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 465:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 466:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 467:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This funtion is used to set the counter to a specific value
 468:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 469:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 470:.\Generated_Source\PSoC5/Echo_Timer.c **** *  counter:  New counter value.
 471:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 472:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 473:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 474:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 475:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_WriteCounter(uint16 counter) 
 477:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 487              		.loc 1 477 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 8
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 18


 493              	.LCFI28:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 83B0     		sub	sp, sp, #12
 497              	.LCFI29:
 498              		.cfi_def_cfa_offset 16
 499 0004 00AF     		add	r7, sp, #0
 500              	.LCFI30:
 501              		.cfi_def_cfa_register 7
 502 0006 0346     		mov	r3, r0
 503 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 478:.\Generated_Source\PSoC5/Echo_Timer.c ****    #if(Echo_Timer_UsingFixedFunction)
 479:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 480:.\Generated_Source\PSoC5/Echo_Timer.c ****          * allow this register to be written
 481:.\Generated_Source\PSoC5/Echo_Timer.c ****          */
 482:.\Generated_Source\PSoC5/Echo_Timer.c ****         CY_SET_REG16(Echo_Timer_COUNTER_LSB_PTR, (uint16)counter);
 483:.\Generated_Source\PSoC5/Echo_Timer.c ****         
 484:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
 485:.\Generated_Source\PSoC5/Echo_Timer.c ****         CY_SET_REG16(Echo_Timer_COUNTER_LSB_PTR, counter);
 504              		.loc 1 485 0
 505 000a 46F61023 		movw	r3, #27152
 506 000e C4F20003 		movt	r3, 16384
 507 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 508 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 486:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 487:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 509              		.loc 1 487 0
 510 0016 07F10C07 		add	r7, r7, #12
 511 001a BD46     		mov	sp, r7
 512 001c 80BC     		pop	{r7}
 513 001e 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE12:
 516              		.size	Echo_Timer_WriteCounter, .-Echo_Timer_WriteCounter
 517              		.section	.text.Echo_Timer_ReadCounter,"ax",%progbits
 518              		.align	2
 519              		.global	Echo_Timer_ReadCounter
 520              		.thumb
 521              		.thumb_func
 522              		.type	Echo_Timer_ReadCounter, %function
 523              	Echo_Timer_ReadCounter:
 524              	.LFB13:
 488:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 489:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 490:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadCounter
 492:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 494:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 495:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function returns the current counter value.
 496:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 497:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 498:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 499:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 500:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 501:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Present compare value.
 502:.\Generated_Source\PSoC5/Echo_Timer.c **** *
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 19


 503:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC5/Echo_Timer.c **** uint16 Echo_Timer_ReadCounter(void) 
 505:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 525              		.loc 1 505 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              	.LCFI31:
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 00AF     		add	r7, sp, #0
 535              	.LCFI32:
 536              		.cfi_def_cfa_register 7
 506:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Force capture by reading Accumulator */
 507:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 508:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 509:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if(Echo_Timer_UsingFixedFunction)
 510:.\Generated_Source\PSoC5/Echo_Timer.c ****         (void)CY_GET_REG16(Echo_Timer_COUNTER_LSB_PTR);
 511:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
 512:.\Generated_Source\PSoC5/Echo_Timer.c ****         (void)CY_GET_REG8(Echo_Timer_COUNTER_LSB_PTR_8BIT);
 537              		.loc 1 512 0
 538 0004 46F20853 		movw	r3, #25864
 539 0008 C4F20003 		movt	r3, 16384
 540 000c 1B78     		ldrb	r3, [r3, #0]
 513:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif/* (Echo_Timer_UsingFixedFunction) */
 514:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 515:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 516:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if(Echo_Timer_UsingFixedFunction)
 517:.\Generated_Source\PSoC5/Echo_Timer.c ****         return ((uint16)CY_GET_REG16(Echo_Timer_CAPTURE_LSB_PTR));
 518:.\Generated_Source\PSoC5/Echo_Timer.c ****     #else
 519:.\Generated_Source\PSoC5/Echo_Timer.c ****         return (CY_GET_REG16(Echo_Timer_CAPTURE_LSB_PTR));
 541              		.loc 1 519 0
 542 000e 46F69023 		movw	r3, #27280
 543 0012 C4F20003 		movt	r3, 16384
 544 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 545 0018 9BB2     		uxth	r3, r3
 520:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* (Echo_Timer_UsingFixedFunction) */
 521:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 546              		.loc 1 521 0
 547 001a 1846     		mov	r0, r3
 548 001c BD46     		mov	sp, r7
 549 001e 80BC     		pop	{r7}
 550 0020 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE13:
 553              		.size	Echo_Timer_ReadCounter, .-Echo_Timer_ReadCounter
 554 0022 00BF     		.section	.text.Echo_Timer_SetInterruptCount,"ax",%progbits
 555              		.align	2
 556              		.global	Echo_Timer_SetInterruptCount
 557              		.thumb
 558              		.thumb_func
 559              		.type	Echo_Timer_SetInterruptCount, %function
 560              	Echo_Timer_SetInterruptCount:
 561              	.LFB14:
 522:.\Generated_Source\PSoC5/Echo_Timer.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 20


 523:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 524:.\Generated_Source\PSoC5/Echo_Timer.c **** #if(!Echo_Timer_UsingFixedFunction) /* UDB Specific Functions */
 525:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 526:.\Generated_Source\PSoC5/Echo_Timer.c ****     
 527:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC5/Echo_Timer.c ****  * The functions below this point are only available using the UDB
 529:.\Generated_Source\PSoC5/Echo_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 530:.\Generated_Source\PSoC5/Echo_Timer.c ****  ******************************************************************************/
 531:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 532:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 533:.\Generated_Source\PSoC5/Echo_Timer.c **** #if (Echo_Timer_SoftwareCaptureMode)
 534:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 535:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 536:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 537:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SetCaptureMode
 538:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 539:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 540:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 541:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 542:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 543:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 544:.\Generated_Source\PSoC5/Echo_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 545:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The parameter values are defined using the
 546:.\Generated_Source\PSoC5/Echo_Timer.c **** *  #define Echo_Timer__B_TIMER__CM_NONE 0
 547:.\Generated_Source\PSoC5/Echo_Timer.c **** #define Echo_Timer__B_TIMER__CM_RISINGEDGE 1
 548:.\Generated_Source\PSoC5/Echo_Timer.c **** #define Echo_Timer__B_TIMER__CM_FALLINGEDGE 2
 549:.\Generated_Source\PSoC5/Echo_Timer.c **** #define Echo_Timer__B_TIMER__CM_EITHEREDGE 3
 550:.\Generated_Source\PSoC5/Echo_Timer.c **** #define Echo_Timer__B_TIMER__CM_SOFTWARE 4
 551:.\Generated_Source\PSoC5/Echo_Timer.c ****  identifiers
 552:.\Generated_Source\PSoC5/Echo_Timer.c **** *  The following are the possible values of the parameter
 553:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Echo_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 554:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Echo_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 555:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Echo_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 556:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Echo_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 557:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 558:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 559:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 560:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 561:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 562:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SetCaptureMode(uint8 captureMode) 
 563:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 564:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 565:.\Generated_Source\PSoC5/Echo_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Echo_Timer_CTRL_CAP_MODE_SHIFT));
 566:.\Generated_Source\PSoC5/Echo_Timer.c ****     captureMode &= (Echo_Timer_CTRL_CAP_MODE_MASK);
 567:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 568:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED)
 569:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear the Current Setting */
 570:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= ((uint8)(~Echo_Timer_CTRL_CAP_MODE_MASK));
 571:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 572:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Write The New Setting */
 573:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL |= captureMode;
 574:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* (!Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 575:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 576:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 577:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 578:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 579:.\Generated_Source\PSoC5/Echo_Timer.c **** #if (Echo_Timer_SoftwareTriggerMode)
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 21


 580:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 581:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 582:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 583:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SetTriggerMode
 584:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 585:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 586:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 587:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function sets the trigger input mode
 588:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 589:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 590:.\Generated_Source\PSoC5/Echo_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 591:.\Generated_Source\PSoC5/Echo_Timer.c ****     #define Echo_Timer__B_TIMER__TM_NONE 0x00u
 592:.\Generated_Source\PSoC5/Echo_Timer.c ****     #define Echo_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 593:.\Generated_Source\PSoC5/Echo_Timer.c ****     #define Echo_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 594:.\Generated_Source\PSoC5/Echo_Timer.c ****     #define Echo_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 595:.\Generated_Source\PSoC5/Echo_Timer.c ****     #define Echo_Timer__B_TIMER__TM_SOFTWARE 0x10u
 596:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 597:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 598:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 599:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 600:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 601:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SetTriggerMode(uint8 triggerMode) 
 602:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 603:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 604:.\Generated_Source\PSoC5/Echo_Timer.c ****     triggerMode &= Echo_Timer_CTRL_TRIG_MODE_MASK;
 605:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 606:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 607:.\Generated_Source\PSoC5/Echo_Timer.c ****     
 608:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear the Current Setting */
 609:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= ((uint8)(~Echo_Timer_CTRL_TRIG_MODE_MASK));
 610:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 611:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Write The New Setting */
 612:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL |= (triggerMode | Echo_Timer__B_TIMER__TM_SOFTWARE);
 613:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 614:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 615:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 616:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 617:.\Generated_Source\PSoC5/Echo_Timer.c **** #if (Echo_Timer_EnableTriggerMode)
 618:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 619:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 620:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 621:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_EnableTrigger
 622:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 623:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 624:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 625:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 626:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 627:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 628:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 629:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 630:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 631:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 632:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 633:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 634:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_EnableTrigger(void) 
 635:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 636:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 22


 637:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL |= Echo_Timer_CTRL_TRIG_EN;
 638:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 639:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 640:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 641:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 642:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 643:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_DisableTrigger
 644:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 645:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 646:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 647:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 648:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 649:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 650:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 651:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 652:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 653:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 654:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 655:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 656:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_DisableTrigger(void) 
 657:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 658:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 659:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= ((uint8)(~Echo_Timer_CTRL_TRIG_EN));
 660:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* Remove code section if control register is not used */
 661:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 662:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 663:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 664:.\Generated_Source\PSoC5/Echo_Timer.c **** #if(Echo_Timer_InterruptOnCaptureCount)
 665:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 666:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 667:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SetInterruptCount
 669:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 670:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 671:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 672:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 673:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 674:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 675:.\Generated_Source\PSoC5/Echo_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 676:.\Generated_Source\PSoC5/Echo_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 677:.\Generated_Source\PSoC5/Echo_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 678:.\Generated_Source\PSoC5/Echo_Timer.c **** *                   to delay by the same number of captures.
 679:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 680:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 681:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 682:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 683:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 684:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SetInterruptCount(uint8 interruptCount) 
 685:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 562              		.loc 1 685 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 8
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              	.LCFI33:
 569              		.cfi_def_cfa_offset 4
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 23


 570              		.cfi_offset 7, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              	.LCFI34:
 573              		.cfi_def_cfa_offset 16
 574 0004 00AF     		add	r7, sp, #0
 575              	.LCFI35:
 576              		.cfi_def_cfa_register 7
 577 0006 0346     		mov	r3, r0
 578 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/Echo_Timer.c ****     /* This must only set to two bits of the control register associated */
 687:.\Generated_Source\PSoC5/Echo_Timer.c ****     interruptCount &= Echo_Timer_CTRL_INTCNT_MASK;
 579              		.loc 1 687 0
 580 000a FB79     		ldrb	r3, [r7, #7]
 581 000c 03F00303 		and	r3, r3, #3
 582 0010 FB71     		strb	r3, [r7, #7]
 688:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 689:.\Generated_Source\PSoC5/Echo_Timer.c ****     #if (!Echo_Timer_UDB_CONTROL_REG_REMOVED)
 690:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Clear the Current Setting */
 691:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL &= ((uint8)(~Echo_Timer_CTRL_INTCNT_MASK));
 583              		.loc 1 691 0
 584 0012 46F27953 		movw	r3, #25977
 585 0016 C4F20003 		movt	r3, 16384
 586 001a 46F27952 		movw	r2, #25977
 587 001e C4F20002 		movt	r2, 16384
 588 0022 1278     		ldrb	r2, [r2, #0]
 589 0024 D2B2     		uxtb	r2, r2
 590 0026 22F00302 		bic	r2, r2, #3
 591 002a D2B2     		uxtb	r2, r2
 592 002c 1A70     		strb	r2, [r3, #0]
 692:.\Generated_Source\PSoC5/Echo_Timer.c ****         /* Write The New Setting */
 693:.\Generated_Source\PSoC5/Echo_Timer.c ****         Echo_Timer_CONTROL |= interruptCount;
 593              		.loc 1 693 0
 594 002e 46F27953 		movw	r3, #25977
 595 0032 C4F20003 		movt	r3, 16384
 596 0036 46F27952 		movw	r2, #25977
 597 003a C4F20002 		movt	r2, 16384
 598 003e 1278     		ldrb	r2, [r2, #0]
 599 0040 D1B2     		uxtb	r1, r2
 600 0042 FA79     		ldrb	r2, [r7, #7]
 601 0044 0A43     		orrs	r2, r2, r1
 602 0046 D2B2     		uxtb	r2, r2
 603 0048 1A70     		strb	r2, [r3, #0]
 694:.\Generated_Source\PSoC5/Echo_Timer.c ****     #endif /* (!Echo_Timer_UDB_CONTROL_REG_REMOVED) */
 695:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 604              		.loc 1 695 0
 605 004a 07F10C07 		add	r7, r7, #12
 606 004e BD46     		mov	sp, r7
 607 0050 80BC     		pop	{r7}
 608 0052 7047     		bx	lr
 609              		.cfi_endproc
 610              	.LFE14:
 611              		.size	Echo_Timer_SetInterruptCount, .-Echo_Timer_SetInterruptCount
 612              		.section	.text.Echo_Timer_ClearFIFO,"ax",%progbits
 613              		.align	2
 614              		.global	Echo_Timer_ClearFIFO
 615              		.thumb
 616              		.thumb_func
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 24


 617              		.type	Echo_Timer_ClearFIFO, %function
 618              	Echo_Timer_ClearFIFO:
 619              	.LFB15:
 696:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Echo_Timer_InterruptOnCaptureCount */
 697:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 698:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 699:.\Generated_Source\PSoC5/Echo_Timer.c **** #if (Echo_Timer_UsingHWCaptureCounter)
 700:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 701:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 702:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_SetCaptureCount
 704:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 706:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 707:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function sets the capture count
 708:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 709:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 710:.\Generated_Source\PSoC5/Echo_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 711:.\Generated_Source\PSoC5/Echo_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 712:.\Generated_Source\PSoC5/Echo_Timer.c **** *                captures.
 713:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 714:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 715:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 716:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 717:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 718:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_SetCaptureCount(uint8 captureCount) 
 719:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 720:.\Generated_Source\PSoC5/Echo_Timer.c ****     Echo_Timer_CAP_COUNT = captureCount;
 721:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 722:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 723:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 724:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 725:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ReadCaptureCount
 726:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 727:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 728:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
 729:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function reads the capture count setting
 730:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 731:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 732:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 733:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 734:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 735:.\Generated_Source\PSoC5/Echo_Timer.c **** *  Returns the Capture Count Setting
 736:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 737:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 738:.\Generated_Source\PSoC5/Echo_Timer.c **** uint8 Echo_Timer_ReadCaptureCount(void) 
 739:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 740:.\Generated_Source\PSoC5/Echo_Timer.c ****     return ((uint8)Echo_Timer_CAP_COUNT);
 741:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 742:.\Generated_Source\PSoC5/Echo_Timer.c **** #endif /* Echo_Timer_UsingHWCaptureCounter */
 743:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 744:.\Generated_Source\PSoC5/Echo_Timer.c **** 
 745:.\Generated_Source\PSoC5/Echo_Timer.c **** /*******************************************************************************
 746:.\Generated_Source\PSoC5/Echo_Timer.c **** * Function Name: Echo_Timer_ClearFIFO
 747:.\Generated_Source\PSoC5/Echo_Timer.c **** ********************************************************************************
 748:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 749:.\Generated_Source\PSoC5/Echo_Timer.c **** * Summary:
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 25


 750:.\Generated_Source\PSoC5/Echo_Timer.c **** *  This function clears all capture data from the capture FIFO
 751:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 752:.\Generated_Source\PSoC5/Echo_Timer.c **** * Parameters:
 753:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 754:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 755:.\Generated_Source\PSoC5/Echo_Timer.c **** * Return:
 756:.\Generated_Source\PSoC5/Echo_Timer.c **** *  void
 757:.\Generated_Source\PSoC5/Echo_Timer.c **** *
 758:.\Generated_Source\PSoC5/Echo_Timer.c **** *******************************************************************************/
 759:.\Generated_Source\PSoC5/Echo_Timer.c **** void Echo_Timer_ClearFIFO(void) 
 760:.\Generated_Source\PSoC5/Echo_Timer.c **** {
 620              		.loc 1 760 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624 0000 80B5     		push	{r7, lr}
 625              	.LCFI36:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 00AF     		add	r7, sp, #0
 630              	.LCFI37:
 631              		.cfi_def_cfa_register 7
 761:.\Generated_Source\PSoC5/Echo_Timer.c ****     while(0u != (Echo_Timer_ReadStatusRegister() & Echo_Timer_STATUS_FIFONEMP))
 632              		.loc 1 761 0
 633 0004 01E0     		b	.L23
 634              	.L24:
 762:.\Generated_Source\PSoC5/Echo_Timer.c ****     {
 763:.\Generated_Source\PSoC5/Echo_Timer.c ****         (void)Echo_Timer_ReadCapture();
 635              		.loc 1 763 0
 636 0006 FFF7FEFF 		bl	Echo_Timer_ReadCapture
 637              	.L23:
 761:.\Generated_Source\PSoC5/Echo_Timer.c ****     while(0u != (Echo_Timer_ReadStatusRegister() & Echo_Timer_STATUS_FIFONEMP))
 638              		.loc 1 761 0 discriminator 1
 639 000a FFF7FEFF 		bl	Echo_Timer_ReadStatusRegister
 640 000e 0346     		mov	r3, r0
 641 0010 03F00803 		and	r3, r3, #8
 642 0014 002B     		cmp	r3, #0
 643 0016 F6D1     		bne	.L24
 764:.\Generated_Source\PSoC5/Echo_Timer.c ****     }
 765:.\Generated_Source\PSoC5/Echo_Timer.c **** }
 644              		.loc 1 765 0
 645 0018 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE15:
 648              		.size	Echo_Timer_ClearFIFO, .-Echo_Timer_ClearFIFO
 649 001a 00BF     		.text
 650              	.Letext0:
 651              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 652              		.section	.debug_info,"",%progbits
 653              	.Ldebug_info0:
 654 0000 C7020000 		.4byte	0x2c7
 655 0004 0200     		.2byte	0x2
 656 0006 00000000 		.4byte	.Ldebug_abbrev0
 657 000a 04       		.byte	0x4
 658 000b 01       		.uleb128 0x1
 659 000c 65020000 		.4byte	.LASF38
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 26


 660 0010 01       		.byte	0x1
 661 0011 82010000 		.4byte	.LASF39
 662 0015 0F020000 		.4byte	.LASF40
 663 0019 00000000 		.4byte	.Ldebug_ranges0+0
 664 001d 00000000 		.4byte	0
 665 0021 00000000 		.4byte	0
 666 0025 00000000 		.4byte	.Ldebug_line0
 667 0029 02       		.uleb128 0x2
 668 002a 01       		.byte	0x1
 669 002b 06       		.byte	0x6
 670 002c 1F030000 		.4byte	.LASF0
 671 0030 02       		.uleb128 0x2
 672 0031 01       		.byte	0x1
 673 0032 08       		.byte	0x8
 674 0033 BC000000 		.4byte	.LASF1
 675 0037 02       		.uleb128 0x2
 676 0038 02       		.byte	0x2
 677 0039 05       		.byte	0x5
 678 003a 55020000 		.4byte	.LASF2
 679 003e 02       		.uleb128 0x2
 680 003f 02       		.byte	0x2
 681 0040 07       		.byte	0x7
 682 0041 46000000 		.4byte	.LASF3
 683 0045 02       		.uleb128 0x2
 684 0046 04       		.byte	0x4
 685 0047 05       		.byte	0x5
 686 0048 E4020000 		.4byte	.LASF4
 687 004c 02       		.uleb128 0x2
 688 004d 04       		.byte	0x4
 689 004e 07       		.byte	0x7
 690 004f CF000000 		.4byte	.LASF5
 691 0053 02       		.uleb128 0x2
 692 0054 08       		.byte	0x8
 693 0055 05       		.byte	0x5
 694 0056 01020000 		.4byte	.LASF6
 695 005a 02       		.uleb128 0x2
 696 005b 08       		.byte	0x8
 697 005c 07       		.byte	0x7
 698 005d CA010000 		.4byte	.LASF7
 699 0061 03       		.uleb128 0x3
 700 0062 04       		.byte	0x4
 701 0063 05       		.byte	0x5
 702 0064 696E7400 		.ascii	"int\000"
 703 0068 02       		.uleb128 0x2
 704 0069 04       		.byte	0x4
 705 006a 07       		.byte	0x7
 706 006b A8010000 		.4byte	.LASF8
 707 006f 04       		.uleb128 0x4
 708 0070 5F020000 		.4byte	.LASF9
 709 0074 02       		.byte	0x2
 710 0075 5B       		.byte	0x5b
 711 0076 30000000 		.4byte	0x30
 712 007a 04       		.uleb128 0x4
 713 007b 7B010000 		.4byte	.LASF10
 714 007f 02       		.byte	0x2
 715 0080 5C       		.byte	0x5c
 716 0081 3E000000 		.4byte	0x3e
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 27


 717 0085 02       		.uleb128 0x2
 718 0086 04       		.byte	0x4
 719 0087 04       		.byte	0x4
 720 0088 AE000000 		.4byte	.LASF11
 721 008c 02       		.uleb128 0x2
 722 008d 08       		.byte	0x8
 723 008e 04       		.byte	0x4
 724 008f 05010000 		.4byte	.LASF12
 725 0093 02       		.uleb128 0x2
 726 0094 01       		.byte	0x1
 727 0095 08       		.byte	0x8
 728 0096 ED020000 		.4byte	.LASF13
 729 009a 04       		.uleb128 0x4
 730 009b CA000000 		.4byte	.LASF14
 731 009f 02       		.byte	0x2
 732 00a0 F0       		.byte	0xf0
 733 00a1 A5000000 		.4byte	0xa5
 734 00a5 05       		.uleb128 0x5
 735 00a6 6F000000 		.4byte	0x6f
 736 00aa 04       		.uleb128 0x4
 737 00ab 00000000 		.4byte	.LASF15
 738 00af 02       		.byte	0x2
 739 00b0 F1       		.byte	0xf1
 740 00b1 B5000000 		.4byte	0xb5
 741 00b5 05       		.uleb128 0x5
 742 00b6 7A000000 		.4byte	0x7a
 743 00ba 02       		.uleb128 0x2
 744 00bb 04       		.byte	0x4
 745 00bc 07       		.byte	0x7
 746 00bd F8010000 		.4byte	.LASF16
 747 00c1 06       		.uleb128 0x6
 748 00c2 01       		.byte	0x1
 749 00c3 2B030000 		.4byte	.LASF20
 750 00c7 01       		.byte	0x1
 751 00c8 2B       		.byte	0x2b
 752 00c9 01       		.byte	0x1
 753 00ca 00000000 		.4byte	.LFB0
 754 00ce 5E000000 		.4byte	.LFE0
 755 00d2 00000000 		.4byte	.LLST0
 756 00d6 01       		.byte	0x1
 757 00d7 EA000000 		.4byte	0xea
 758 00db 07       		.uleb128 0x7
 759 00dc F2020000 		.4byte	.LASF41
 760 00e0 01       		.byte	0x1
 761 00e1 2F       		.byte	0x2f
 762 00e2 6F000000 		.4byte	0x6f
 763 00e6 02       		.byte	0x2
 764 00e7 91       		.byte	0x91
 765 00e8 77       		.sleb128 -9
 766 00e9 00       		.byte	0
 767 00ea 08       		.uleb128 0x8
 768 00eb 01       		.byte	0x1
 769 00ec 70000000 		.4byte	.LASF17
 770 00f0 01       		.byte	0x1
 771 00f1 B4       		.byte	0xb4
 772 00f2 01       		.byte	0x1
 773 00f3 00000000 		.4byte	.LFB1
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 28


 774 00f7 26000000 		.4byte	.LFE1
 775 00fb 38000000 		.4byte	.LLST1
 776 00ff 01       		.byte	0x1
 777 0100 09       		.uleb128 0x9
 778 0101 01       		.byte	0x1
 779 0102 1E000000 		.4byte	.LASF18
 780 0106 01       		.byte	0x1
 781 0107 D7       		.byte	0xd7
 782 0108 01       		.byte	0x1
 783 0109 00000000 		.4byte	.LFB2
 784 010d 2A000000 		.4byte	.LFE2
 785 0111 64000000 		.4byte	.LLST2
 786 0115 01       		.byte	0x1
 787 0116 08       		.uleb128 0x8
 788 0117 01       		.byte	0x1
 789 0118 36000000 		.4byte	.LASF19
 790 011c 01       		.byte	0x1
 791 011d F7       		.byte	0xf7
 792 011e 01       		.byte	0x1
 793 011f 00000000 		.4byte	.LFB3
 794 0123 26000000 		.4byte	.LFE3
 795 0127 90000000 		.4byte	.LLST3
 796 012b 01       		.byte	0x1
 797 012c 0A       		.uleb128 0xa
 798 012d 01       		.byte	0x1
 799 012e E1000000 		.4byte	.LASF21
 800 0132 01       		.byte	0x1
 801 0133 1701     		.2byte	0x117
 802 0135 01       		.byte	0x1
 803 0136 00000000 		.4byte	.LFB4
 804 013a 20000000 		.4byte	.LFE4
 805 013e BC000000 		.4byte	.LLST4
 806 0142 01       		.byte	0x1
 807 0143 57010000 		.4byte	0x157
 808 0147 0B       		.uleb128 0xb
 809 0148 47020000 		.4byte	.LASF26
 810 014c 01       		.byte	0x1
 811 014d 1701     		.2byte	0x117
 812 014f 6F000000 		.4byte	0x6f
 813 0153 02       		.byte	0x2
 814 0154 91       		.byte	0x91
 815 0155 77       		.sleb128 -9
 816 0156 00       		.byte	0
 817 0157 0C       		.uleb128 0xc
 818 0158 01       		.byte	0x1
 819 0159 41010000 		.4byte	.LASF22
 820 015d 01       		.byte	0x1
 821 015e 2E01     		.2byte	0x12e
 822 0160 01       		.byte	0x1
 823 0161 00000000 		.4byte	.LFB5
 824 0165 14000000 		.4byte	.LFE5
 825 0169 F4000000 		.4byte	.LLST5
 826 016d 01       		.byte	0x1
 827 016e 0D       		.uleb128 0xd
 828 016f 01       		.byte	0x1
 829 0170 23010000 		.4byte	.LASF23
 830 0174 01       		.byte	0x1
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 29


 831 0175 4901     		.2byte	0x149
 832 0177 01       		.byte	0x1
 833 0178 6F000000 		.4byte	0x6f
 834 017c 00000000 		.4byte	.LFB6
 835 0180 18000000 		.4byte	.LFE6
 836 0184 20010000 		.4byte	.LLST6
 837 0188 01       		.byte	0x1
 838 0189 0D       		.uleb128 0xd
 839 018a 01       		.byte	0x1
 840 018b 5C010000 		.4byte	.LASF24
 841 018f 01       		.byte	0x1
 842 0190 6001     		.2byte	0x160
 843 0192 01       		.byte	0x1
 844 0193 6F000000 		.4byte	0x6f
 845 0197 00000000 		.4byte	.LFB7
 846 019b 18000000 		.4byte	.LFE7
 847 019f 4C010000 		.4byte	.LLST7
 848 01a3 01       		.byte	0x1
 849 01a4 0A       		.uleb128 0xa
 850 01a5 01       		.byte	0x1
 851 01a6 AE020000 		.4byte	.LASF25
 852 01aa 01       		.byte	0x1
 853 01ab 7701     		.2byte	0x177
 854 01ad 01       		.byte	0x1
 855 01ae 00000000 		.4byte	.LFB8
 856 01b2 20000000 		.4byte	.LFE8
 857 01b6 78010000 		.4byte	.LLST8
 858 01ba 01       		.byte	0x1
 859 01bb CF010000 		.4byte	0x1cf
 860 01bf 0B       		.uleb128 0xb
 861 01c0 FD000000 		.4byte	.LASF27
 862 01c4 01       		.byte	0x1
 863 01c5 7701     		.2byte	0x177
 864 01c7 6F000000 		.4byte	0x6f
 865 01cb 02       		.byte	0x2
 866 01cc 91       		.byte	0x91
 867 01cd 77       		.sleb128 -9
 868 01ce 00       		.byte	0
 869 01cf 0D       		.uleb128 0xd
 870 01d0 01       		.byte	0x1
 871 01d1 CE020000 		.4byte	.LASF28
 872 01d5 01       		.byte	0x1
 873 01d6 9101     		.2byte	0x191
 874 01d8 01       		.byte	0x1
 875 01d9 7A000000 		.4byte	0x7a
 876 01dd 00000000 		.4byte	.LFB9
 877 01e1 18000000 		.4byte	.LFE9
 878 01e5 B0010000 		.4byte	.LLST9
 879 01e9 01       		.byte	0x1
 880 01ea 0A       		.uleb128 0xa
 881 01eb 01       		.byte	0x1
 882 01ec E1010000 		.4byte	.LASF29
 883 01f0 01       		.byte	0x1
 884 01f1 AB01     		.2byte	0x1ab
 885 01f3 01       		.byte	0x1
 886 01f4 00000000 		.4byte	.LFB10
 887 01f8 20000000 		.4byte	.LFE10
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 30


 888 01fc DC010000 		.4byte	.LLST10
 889 0200 01       		.byte	0x1
 890 0201 15020000 		.4byte	0x215
 891 0205 0B       		.uleb128 0xb
 892 0206 2F000000 		.4byte	.LASF30
 893 020a 01       		.byte	0x1
 894 020b AB01     		.2byte	0x1ab
 895 020d 7A000000 		.4byte	0x7a
 896 0211 02       		.byte	0x2
 897 0212 91       		.byte	0x91
 898 0213 76       		.sleb128 -10
 899 0214 00       		.byte	0
 900 0215 0D       		.uleb128 0xd
 901 0216 01       		.byte	0x1
 902 0217 59000000 		.4byte	.LASF31
 903 021b 01       		.byte	0x1
 904 021c C401     		.2byte	0x1c4
 905 021e 01       		.byte	0x1
 906 021f 7A000000 		.4byte	0x7a
 907 0223 00000000 		.4byte	.LFB11
 908 0227 18000000 		.4byte	.LFE11
 909 022b 14020000 		.4byte	.LLST11
 910 022f 01       		.byte	0x1
 911 0230 0A       		.uleb128 0xa
 912 0231 01       		.byte	0x1
 913 0232 06000000 		.4byte	.LASF32
 914 0236 01       		.byte	0x1
 915 0237 DC01     		.2byte	0x1dc
 916 0239 01       		.byte	0x1
 917 023a 00000000 		.4byte	.LFB12
 918 023e 20000000 		.4byte	.LFE12
 919 0242 40020000 		.4byte	.LLST12
 920 0246 01       		.byte	0x1
 921 0247 5B020000 		.4byte	0x25b
 922 024b 0B       		.uleb128 0xb
 923 024c B4000000 		.4byte	.LASF33
 924 0250 01       		.byte	0x1
 925 0251 DC01     		.2byte	0x1dc
 926 0253 7A000000 		.4byte	0x7a
 927 0257 02       		.byte	0x2
 928 0258 91       		.byte	0x91
 929 0259 76       		.sleb128 -10
 930 025a 00       		.byte	0
 931 025b 0D       		.uleb128 0xd
 932 025c 01       		.byte	0x1
 933 025d 0C010000 		.4byte	.LASF34
 934 0261 01       		.byte	0x1
 935 0262 F801     		.2byte	0x1f8
 936 0264 01       		.byte	0x1
 937 0265 7A000000 		.4byte	0x7a
 938 0269 00000000 		.4byte	.LFB13
 939 026d 22000000 		.4byte	.LFE13
 940 0271 78020000 		.4byte	.LLST13
 941 0275 01       		.byte	0x1
 942 0276 0A       		.uleb128 0xa
 943 0277 01       		.byte	0x1
 944 0278 82000000 		.4byte	.LASF35
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 31


 945 027c 01       		.byte	0x1
 946 027d AC02     		.2byte	0x2ac
 947 027f 01       		.byte	0x1
 948 0280 00000000 		.4byte	.LFB14
 949 0284 54000000 		.4byte	.LFE14
 950 0288 A4020000 		.4byte	.LLST14
 951 028c 01       		.byte	0x1
 952 028d A1020000 		.4byte	0x2a1
 953 0291 0B       		.uleb128 0xb
 954 0292 9F000000 		.4byte	.LASF36
 955 0296 01       		.byte	0x1
 956 0297 AC02     		.2byte	0x2ac
 957 0299 6F000000 		.4byte	0x6f
 958 029d 02       		.byte	0x2
 959 029e 91       		.byte	0x91
 960 029f 77       		.sleb128 -9
 961 02a0 00       		.byte	0
 962 02a1 0E       		.uleb128 0xe
 963 02a2 01       		.byte	0x1
 964 02a3 B5010000 		.4byte	.LASF37
 965 02a7 01       		.byte	0x1
 966 02a8 F702     		.2byte	0x2f7
 967 02aa 01       		.byte	0x1
 968 02ab 00000000 		.4byte	.LFB15
 969 02af 1A000000 		.4byte	.LFE15
 970 02b3 DC020000 		.4byte	.LLST15
 971 02b7 01       		.byte	0x1
 972 02b8 0F       		.uleb128 0xf
 973 02b9 0C030000 		.4byte	.LASF42
 974 02bd 01       		.byte	0x1
 975 02be 1A       		.byte	0x1a
 976 02bf 6F000000 		.4byte	0x6f
 977 02c3 01       		.byte	0x1
 978 02c4 05       		.byte	0x5
 979 02c5 03       		.byte	0x3
 980 02c6 00000000 		.4byte	Echo_Timer_initVar
 981 02ca 00       		.byte	0
 982              		.section	.debug_abbrev,"",%progbits
 983              	.Ldebug_abbrev0:
 984 0000 01       		.uleb128 0x1
 985 0001 11       		.uleb128 0x11
 986 0002 01       		.byte	0x1
 987 0003 25       		.uleb128 0x25
 988 0004 0E       		.uleb128 0xe
 989 0005 13       		.uleb128 0x13
 990 0006 0B       		.uleb128 0xb
 991 0007 03       		.uleb128 0x3
 992 0008 0E       		.uleb128 0xe
 993 0009 1B       		.uleb128 0x1b
 994 000a 0E       		.uleb128 0xe
 995 000b 55       		.uleb128 0x55
 996 000c 06       		.uleb128 0x6
 997 000d 11       		.uleb128 0x11
 998 000e 01       		.uleb128 0x1
 999 000f 52       		.uleb128 0x52
 1000 0010 01       		.uleb128 0x1
 1001 0011 10       		.uleb128 0x10
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 32


 1002 0012 06       		.uleb128 0x6
 1003 0013 00       		.byte	0
 1004 0014 00       		.byte	0
 1005 0015 02       		.uleb128 0x2
 1006 0016 24       		.uleb128 0x24
 1007 0017 00       		.byte	0
 1008 0018 0B       		.uleb128 0xb
 1009 0019 0B       		.uleb128 0xb
 1010 001a 3E       		.uleb128 0x3e
 1011 001b 0B       		.uleb128 0xb
 1012 001c 03       		.uleb128 0x3
 1013 001d 0E       		.uleb128 0xe
 1014 001e 00       		.byte	0
 1015 001f 00       		.byte	0
 1016 0020 03       		.uleb128 0x3
 1017 0021 24       		.uleb128 0x24
 1018 0022 00       		.byte	0
 1019 0023 0B       		.uleb128 0xb
 1020 0024 0B       		.uleb128 0xb
 1021 0025 3E       		.uleb128 0x3e
 1022 0026 0B       		.uleb128 0xb
 1023 0027 03       		.uleb128 0x3
 1024 0028 08       		.uleb128 0x8
 1025 0029 00       		.byte	0
 1026 002a 00       		.byte	0
 1027 002b 04       		.uleb128 0x4
 1028 002c 16       		.uleb128 0x16
 1029 002d 00       		.byte	0
 1030 002e 03       		.uleb128 0x3
 1031 002f 0E       		.uleb128 0xe
 1032 0030 3A       		.uleb128 0x3a
 1033 0031 0B       		.uleb128 0xb
 1034 0032 3B       		.uleb128 0x3b
 1035 0033 0B       		.uleb128 0xb
 1036 0034 49       		.uleb128 0x49
 1037 0035 13       		.uleb128 0x13
 1038 0036 00       		.byte	0
 1039 0037 00       		.byte	0
 1040 0038 05       		.uleb128 0x5
 1041 0039 35       		.uleb128 0x35
 1042 003a 00       		.byte	0
 1043 003b 49       		.uleb128 0x49
 1044 003c 13       		.uleb128 0x13
 1045 003d 00       		.byte	0
 1046 003e 00       		.byte	0
 1047 003f 06       		.uleb128 0x6
 1048 0040 2E       		.uleb128 0x2e
 1049 0041 01       		.byte	0x1
 1050 0042 3F       		.uleb128 0x3f
 1051 0043 0C       		.uleb128 0xc
 1052 0044 03       		.uleb128 0x3
 1053 0045 0E       		.uleb128 0xe
 1054 0046 3A       		.uleb128 0x3a
 1055 0047 0B       		.uleb128 0xb
 1056 0048 3B       		.uleb128 0x3b
 1057 0049 0B       		.uleb128 0xb
 1058 004a 27       		.uleb128 0x27
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 33


 1059 004b 0C       		.uleb128 0xc
 1060 004c 11       		.uleb128 0x11
 1061 004d 01       		.uleb128 0x1
 1062 004e 12       		.uleb128 0x12
 1063 004f 01       		.uleb128 0x1
 1064 0050 40       		.uleb128 0x40
 1065 0051 06       		.uleb128 0x6
 1066 0052 9642     		.uleb128 0x2116
 1067 0054 0C       		.uleb128 0xc
 1068 0055 01       		.uleb128 0x1
 1069 0056 13       		.uleb128 0x13
 1070 0057 00       		.byte	0
 1071 0058 00       		.byte	0
 1072 0059 07       		.uleb128 0x7
 1073 005a 34       		.uleb128 0x34
 1074 005b 00       		.byte	0
 1075 005c 03       		.uleb128 0x3
 1076 005d 0E       		.uleb128 0xe
 1077 005e 3A       		.uleb128 0x3a
 1078 005f 0B       		.uleb128 0xb
 1079 0060 3B       		.uleb128 0x3b
 1080 0061 0B       		.uleb128 0xb
 1081 0062 49       		.uleb128 0x49
 1082 0063 13       		.uleb128 0x13
 1083 0064 02       		.uleb128 0x2
 1084 0065 0A       		.uleb128 0xa
 1085 0066 00       		.byte	0
 1086 0067 00       		.byte	0
 1087 0068 08       		.uleb128 0x8
 1088 0069 2E       		.uleb128 0x2e
 1089 006a 00       		.byte	0
 1090 006b 3F       		.uleb128 0x3f
 1091 006c 0C       		.uleb128 0xc
 1092 006d 03       		.uleb128 0x3
 1093 006e 0E       		.uleb128 0xe
 1094 006f 3A       		.uleb128 0x3a
 1095 0070 0B       		.uleb128 0xb
 1096 0071 3B       		.uleb128 0x3b
 1097 0072 0B       		.uleb128 0xb
 1098 0073 27       		.uleb128 0x27
 1099 0074 0C       		.uleb128 0xc
 1100 0075 11       		.uleb128 0x11
 1101 0076 01       		.uleb128 0x1
 1102 0077 12       		.uleb128 0x12
 1103 0078 01       		.uleb128 0x1
 1104 0079 40       		.uleb128 0x40
 1105 007a 06       		.uleb128 0x6
 1106 007b 9742     		.uleb128 0x2117
 1107 007d 0C       		.uleb128 0xc
 1108 007e 00       		.byte	0
 1109 007f 00       		.byte	0
 1110 0080 09       		.uleb128 0x9
 1111 0081 2E       		.uleb128 0x2e
 1112 0082 00       		.byte	0
 1113 0083 3F       		.uleb128 0x3f
 1114 0084 0C       		.uleb128 0xc
 1115 0085 03       		.uleb128 0x3
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 34


 1116 0086 0E       		.uleb128 0xe
 1117 0087 3A       		.uleb128 0x3a
 1118 0088 0B       		.uleb128 0xb
 1119 0089 3B       		.uleb128 0x3b
 1120 008a 0B       		.uleb128 0xb
 1121 008b 27       		.uleb128 0x27
 1122 008c 0C       		.uleb128 0xc
 1123 008d 11       		.uleb128 0x11
 1124 008e 01       		.uleb128 0x1
 1125 008f 12       		.uleb128 0x12
 1126 0090 01       		.uleb128 0x1
 1127 0091 40       		.uleb128 0x40
 1128 0092 06       		.uleb128 0x6
 1129 0093 9642     		.uleb128 0x2116
 1130 0095 0C       		.uleb128 0xc
 1131 0096 00       		.byte	0
 1132 0097 00       		.byte	0
 1133 0098 0A       		.uleb128 0xa
 1134 0099 2E       		.uleb128 0x2e
 1135 009a 01       		.byte	0x1
 1136 009b 3F       		.uleb128 0x3f
 1137 009c 0C       		.uleb128 0xc
 1138 009d 03       		.uleb128 0x3
 1139 009e 0E       		.uleb128 0xe
 1140 009f 3A       		.uleb128 0x3a
 1141 00a0 0B       		.uleb128 0xb
 1142 00a1 3B       		.uleb128 0x3b
 1143 00a2 05       		.uleb128 0x5
 1144 00a3 27       		.uleb128 0x27
 1145 00a4 0C       		.uleb128 0xc
 1146 00a5 11       		.uleb128 0x11
 1147 00a6 01       		.uleb128 0x1
 1148 00a7 12       		.uleb128 0x12
 1149 00a8 01       		.uleb128 0x1
 1150 00a9 40       		.uleb128 0x40
 1151 00aa 06       		.uleb128 0x6
 1152 00ab 9742     		.uleb128 0x2117
 1153 00ad 0C       		.uleb128 0xc
 1154 00ae 01       		.uleb128 0x1
 1155 00af 13       		.uleb128 0x13
 1156 00b0 00       		.byte	0
 1157 00b1 00       		.byte	0
 1158 00b2 0B       		.uleb128 0xb
 1159 00b3 05       		.uleb128 0x5
 1160 00b4 00       		.byte	0
 1161 00b5 03       		.uleb128 0x3
 1162 00b6 0E       		.uleb128 0xe
 1163 00b7 3A       		.uleb128 0x3a
 1164 00b8 0B       		.uleb128 0xb
 1165 00b9 3B       		.uleb128 0x3b
 1166 00ba 05       		.uleb128 0x5
 1167 00bb 49       		.uleb128 0x49
 1168 00bc 13       		.uleb128 0x13
 1169 00bd 02       		.uleb128 0x2
 1170 00be 0A       		.uleb128 0xa
 1171 00bf 00       		.byte	0
 1172 00c0 00       		.byte	0
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 35


 1173 00c1 0C       		.uleb128 0xc
 1174 00c2 2E       		.uleb128 0x2e
 1175 00c3 00       		.byte	0
 1176 00c4 3F       		.uleb128 0x3f
 1177 00c5 0C       		.uleb128 0xc
 1178 00c6 03       		.uleb128 0x3
 1179 00c7 0E       		.uleb128 0xe
 1180 00c8 3A       		.uleb128 0x3a
 1181 00c9 0B       		.uleb128 0xb
 1182 00ca 3B       		.uleb128 0x3b
 1183 00cb 05       		.uleb128 0x5
 1184 00cc 27       		.uleb128 0x27
 1185 00cd 0C       		.uleb128 0xc
 1186 00ce 11       		.uleb128 0x11
 1187 00cf 01       		.uleb128 0x1
 1188 00d0 12       		.uleb128 0x12
 1189 00d1 01       		.uleb128 0x1
 1190 00d2 40       		.uleb128 0x40
 1191 00d3 06       		.uleb128 0x6
 1192 00d4 9742     		.uleb128 0x2117
 1193 00d6 0C       		.uleb128 0xc
 1194 00d7 00       		.byte	0
 1195 00d8 00       		.byte	0
 1196 00d9 0D       		.uleb128 0xd
 1197 00da 2E       		.uleb128 0x2e
 1198 00db 00       		.byte	0
 1199 00dc 3F       		.uleb128 0x3f
 1200 00dd 0C       		.uleb128 0xc
 1201 00de 03       		.uleb128 0x3
 1202 00df 0E       		.uleb128 0xe
 1203 00e0 3A       		.uleb128 0x3a
 1204 00e1 0B       		.uleb128 0xb
 1205 00e2 3B       		.uleb128 0x3b
 1206 00e3 05       		.uleb128 0x5
 1207 00e4 27       		.uleb128 0x27
 1208 00e5 0C       		.uleb128 0xc
 1209 00e6 49       		.uleb128 0x49
 1210 00e7 13       		.uleb128 0x13
 1211 00e8 11       		.uleb128 0x11
 1212 00e9 01       		.uleb128 0x1
 1213 00ea 12       		.uleb128 0x12
 1214 00eb 01       		.uleb128 0x1
 1215 00ec 40       		.uleb128 0x40
 1216 00ed 06       		.uleb128 0x6
 1217 00ee 9742     		.uleb128 0x2117
 1218 00f0 0C       		.uleb128 0xc
 1219 00f1 00       		.byte	0
 1220 00f2 00       		.byte	0
 1221 00f3 0E       		.uleb128 0xe
 1222 00f4 2E       		.uleb128 0x2e
 1223 00f5 00       		.byte	0
 1224 00f6 3F       		.uleb128 0x3f
 1225 00f7 0C       		.uleb128 0xc
 1226 00f8 03       		.uleb128 0x3
 1227 00f9 0E       		.uleb128 0xe
 1228 00fa 3A       		.uleb128 0x3a
 1229 00fb 0B       		.uleb128 0xb
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 36


 1230 00fc 3B       		.uleb128 0x3b
 1231 00fd 05       		.uleb128 0x5
 1232 00fe 27       		.uleb128 0x27
 1233 00ff 0C       		.uleb128 0xc
 1234 0100 11       		.uleb128 0x11
 1235 0101 01       		.uleb128 0x1
 1236 0102 12       		.uleb128 0x12
 1237 0103 01       		.uleb128 0x1
 1238 0104 40       		.uleb128 0x40
 1239 0105 06       		.uleb128 0x6
 1240 0106 9642     		.uleb128 0x2116
 1241 0108 0C       		.uleb128 0xc
 1242 0109 00       		.byte	0
 1243 010a 00       		.byte	0
 1244 010b 0F       		.uleb128 0xf
 1245 010c 34       		.uleb128 0x34
 1246 010d 00       		.byte	0
 1247 010e 03       		.uleb128 0x3
 1248 010f 0E       		.uleb128 0xe
 1249 0110 3A       		.uleb128 0x3a
 1250 0111 0B       		.uleb128 0xb
 1251 0112 3B       		.uleb128 0x3b
 1252 0113 0B       		.uleb128 0xb
 1253 0114 49       		.uleb128 0x49
 1254 0115 13       		.uleb128 0x13
 1255 0116 3F       		.uleb128 0x3f
 1256 0117 0C       		.uleb128 0xc
 1257 0118 02       		.uleb128 0x2
 1258 0119 0A       		.uleb128 0xa
 1259 011a 00       		.byte	0
 1260 011b 00       		.byte	0
 1261 011c 00       		.byte	0
 1262              		.section	.debug_loc,"",%progbits
 1263              	.Ldebug_loc0:
 1264              	.LLST0:
 1265 0000 00000000 		.4byte	.LFB0
 1266 0004 02000000 		.4byte	.LCFI0
 1267 0008 0200     		.2byte	0x2
 1268 000a 7D       		.byte	0x7d
 1269 000b 00       		.sleb128 0
 1270 000c 02000000 		.4byte	.LCFI0
 1271 0010 04000000 		.4byte	.LCFI1
 1272 0014 0200     		.2byte	0x2
 1273 0016 7D       		.byte	0x7d
 1274 0017 08       		.sleb128 8
 1275 0018 04000000 		.4byte	.LCFI1
 1276 001c 06000000 		.4byte	.LCFI2
 1277 0020 0200     		.2byte	0x2
 1278 0022 7D       		.byte	0x7d
 1279 0023 10       		.sleb128 16
 1280 0024 06000000 		.4byte	.LCFI2
 1281 0028 5E000000 		.4byte	.LFE0
 1282 002c 0200     		.2byte	0x2
 1283 002e 77       		.byte	0x77
 1284 002f 10       		.sleb128 16
 1285 0030 00000000 		.4byte	0
 1286 0034 00000000 		.4byte	0
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 37


 1287              	.LLST1:
 1288 0038 00000000 		.4byte	.LFB1
 1289 003c 02000000 		.4byte	.LCFI3
 1290 0040 0200     		.2byte	0x2
 1291 0042 7D       		.byte	0x7d
 1292 0043 00       		.sleb128 0
 1293 0044 02000000 		.4byte	.LCFI3
 1294 0048 04000000 		.4byte	.LCFI4
 1295 004c 0200     		.2byte	0x2
 1296 004e 7D       		.byte	0x7d
 1297 004f 04       		.sleb128 4
 1298 0050 04000000 		.4byte	.LCFI4
 1299 0054 26000000 		.4byte	.LFE1
 1300 0058 0200     		.2byte	0x2
 1301 005a 77       		.byte	0x77
 1302 005b 04       		.sleb128 4
 1303 005c 00000000 		.4byte	0
 1304 0060 00000000 		.4byte	0
 1305              	.LLST2:
 1306 0064 00000000 		.4byte	.LFB2
 1307 0068 02000000 		.4byte	.LCFI5
 1308 006c 0200     		.2byte	0x2
 1309 006e 7D       		.byte	0x7d
 1310 006f 00       		.sleb128 0
 1311 0070 02000000 		.4byte	.LCFI5
 1312 0074 04000000 		.4byte	.LCFI6
 1313 0078 0200     		.2byte	0x2
 1314 007a 7D       		.byte	0x7d
 1315 007b 08       		.sleb128 8
 1316 007c 04000000 		.4byte	.LCFI6
 1317 0080 2A000000 		.4byte	.LFE2
 1318 0084 0200     		.2byte	0x2
 1319 0086 77       		.byte	0x77
 1320 0087 08       		.sleb128 8
 1321 0088 00000000 		.4byte	0
 1322 008c 00000000 		.4byte	0
 1323              	.LLST3:
 1324 0090 00000000 		.4byte	.LFB3
 1325 0094 02000000 		.4byte	.LCFI7
 1326 0098 0200     		.2byte	0x2
 1327 009a 7D       		.byte	0x7d
 1328 009b 00       		.sleb128 0
 1329 009c 02000000 		.4byte	.LCFI7
 1330 00a0 04000000 		.4byte	.LCFI8
 1331 00a4 0200     		.2byte	0x2
 1332 00a6 7D       		.byte	0x7d
 1333 00a7 04       		.sleb128 4
 1334 00a8 04000000 		.4byte	.LCFI8
 1335 00ac 26000000 		.4byte	.LFE3
 1336 00b0 0200     		.2byte	0x2
 1337 00b2 77       		.byte	0x77
 1338 00b3 04       		.sleb128 4
 1339 00b4 00000000 		.4byte	0
 1340 00b8 00000000 		.4byte	0
 1341              	.LLST4:
 1342 00bc 00000000 		.4byte	.LFB4
 1343 00c0 02000000 		.4byte	.LCFI9
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 38


 1344 00c4 0200     		.2byte	0x2
 1345 00c6 7D       		.byte	0x7d
 1346 00c7 00       		.sleb128 0
 1347 00c8 02000000 		.4byte	.LCFI9
 1348 00cc 04000000 		.4byte	.LCFI10
 1349 00d0 0200     		.2byte	0x2
 1350 00d2 7D       		.byte	0x7d
 1351 00d3 04       		.sleb128 4
 1352 00d4 04000000 		.4byte	.LCFI10
 1353 00d8 06000000 		.4byte	.LCFI11
 1354 00dc 0200     		.2byte	0x2
 1355 00de 7D       		.byte	0x7d
 1356 00df 10       		.sleb128 16
 1357 00e0 06000000 		.4byte	.LCFI11
 1358 00e4 20000000 		.4byte	.LFE4
 1359 00e8 0200     		.2byte	0x2
 1360 00ea 77       		.byte	0x77
 1361 00eb 10       		.sleb128 16
 1362 00ec 00000000 		.4byte	0
 1363 00f0 00000000 		.4byte	0
 1364              	.LLST5:
 1365 00f4 00000000 		.4byte	.LFB5
 1366 00f8 02000000 		.4byte	.LCFI12
 1367 00fc 0200     		.2byte	0x2
 1368 00fe 7D       		.byte	0x7d
 1369 00ff 00       		.sleb128 0
 1370 0100 02000000 		.4byte	.LCFI12
 1371 0104 04000000 		.4byte	.LCFI13
 1372 0108 0200     		.2byte	0x2
 1373 010a 7D       		.byte	0x7d
 1374 010b 04       		.sleb128 4
 1375 010c 04000000 		.4byte	.LCFI13
 1376 0110 14000000 		.4byte	.LFE5
 1377 0114 0200     		.2byte	0x2
 1378 0116 77       		.byte	0x77
 1379 0117 04       		.sleb128 4
 1380 0118 00000000 		.4byte	0
 1381 011c 00000000 		.4byte	0
 1382              	.LLST6:
 1383 0120 00000000 		.4byte	.LFB6
 1384 0124 02000000 		.4byte	.LCFI14
 1385 0128 0200     		.2byte	0x2
 1386 012a 7D       		.byte	0x7d
 1387 012b 00       		.sleb128 0
 1388 012c 02000000 		.4byte	.LCFI14
 1389 0130 04000000 		.4byte	.LCFI15
 1390 0134 0200     		.2byte	0x2
 1391 0136 7D       		.byte	0x7d
 1392 0137 04       		.sleb128 4
 1393 0138 04000000 		.4byte	.LCFI15
 1394 013c 18000000 		.4byte	.LFE6
 1395 0140 0200     		.2byte	0x2
 1396 0142 77       		.byte	0x77
 1397 0143 04       		.sleb128 4
 1398 0144 00000000 		.4byte	0
 1399 0148 00000000 		.4byte	0
 1400              	.LLST7:
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 39


 1401 014c 00000000 		.4byte	.LFB7
 1402 0150 02000000 		.4byte	.LCFI16
 1403 0154 0200     		.2byte	0x2
 1404 0156 7D       		.byte	0x7d
 1405 0157 00       		.sleb128 0
 1406 0158 02000000 		.4byte	.LCFI16
 1407 015c 04000000 		.4byte	.LCFI17
 1408 0160 0200     		.2byte	0x2
 1409 0162 7D       		.byte	0x7d
 1410 0163 04       		.sleb128 4
 1411 0164 04000000 		.4byte	.LCFI17
 1412 0168 18000000 		.4byte	.LFE7
 1413 016c 0200     		.2byte	0x2
 1414 016e 77       		.byte	0x77
 1415 016f 04       		.sleb128 4
 1416 0170 00000000 		.4byte	0
 1417 0174 00000000 		.4byte	0
 1418              	.LLST8:
 1419 0178 00000000 		.4byte	.LFB8
 1420 017c 02000000 		.4byte	.LCFI18
 1421 0180 0200     		.2byte	0x2
 1422 0182 7D       		.byte	0x7d
 1423 0183 00       		.sleb128 0
 1424 0184 02000000 		.4byte	.LCFI18
 1425 0188 04000000 		.4byte	.LCFI19
 1426 018c 0200     		.2byte	0x2
 1427 018e 7D       		.byte	0x7d
 1428 018f 04       		.sleb128 4
 1429 0190 04000000 		.4byte	.LCFI19
 1430 0194 06000000 		.4byte	.LCFI20
 1431 0198 0200     		.2byte	0x2
 1432 019a 7D       		.byte	0x7d
 1433 019b 10       		.sleb128 16
 1434 019c 06000000 		.4byte	.LCFI20
 1435 01a0 20000000 		.4byte	.LFE8
 1436 01a4 0200     		.2byte	0x2
 1437 01a6 77       		.byte	0x77
 1438 01a7 10       		.sleb128 16
 1439 01a8 00000000 		.4byte	0
 1440 01ac 00000000 		.4byte	0
 1441              	.LLST9:
 1442 01b0 00000000 		.4byte	.LFB9
 1443 01b4 02000000 		.4byte	.LCFI21
 1444 01b8 0200     		.2byte	0x2
 1445 01ba 7D       		.byte	0x7d
 1446 01bb 00       		.sleb128 0
 1447 01bc 02000000 		.4byte	.LCFI21
 1448 01c0 04000000 		.4byte	.LCFI22
 1449 01c4 0200     		.2byte	0x2
 1450 01c6 7D       		.byte	0x7d
 1451 01c7 04       		.sleb128 4
 1452 01c8 04000000 		.4byte	.LCFI22
 1453 01cc 18000000 		.4byte	.LFE9
 1454 01d0 0200     		.2byte	0x2
 1455 01d2 77       		.byte	0x77
 1456 01d3 04       		.sleb128 4
 1457 01d4 00000000 		.4byte	0
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 40


 1458 01d8 00000000 		.4byte	0
 1459              	.LLST10:
 1460 01dc 00000000 		.4byte	.LFB10
 1461 01e0 02000000 		.4byte	.LCFI23
 1462 01e4 0200     		.2byte	0x2
 1463 01e6 7D       		.byte	0x7d
 1464 01e7 00       		.sleb128 0
 1465 01e8 02000000 		.4byte	.LCFI23
 1466 01ec 04000000 		.4byte	.LCFI24
 1467 01f0 0200     		.2byte	0x2
 1468 01f2 7D       		.byte	0x7d
 1469 01f3 04       		.sleb128 4
 1470 01f4 04000000 		.4byte	.LCFI24
 1471 01f8 06000000 		.4byte	.LCFI25
 1472 01fc 0200     		.2byte	0x2
 1473 01fe 7D       		.byte	0x7d
 1474 01ff 10       		.sleb128 16
 1475 0200 06000000 		.4byte	.LCFI25
 1476 0204 20000000 		.4byte	.LFE10
 1477 0208 0200     		.2byte	0x2
 1478 020a 77       		.byte	0x77
 1479 020b 10       		.sleb128 16
 1480 020c 00000000 		.4byte	0
 1481 0210 00000000 		.4byte	0
 1482              	.LLST11:
 1483 0214 00000000 		.4byte	.LFB11
 1484 0218 02000000 		.4byte	.LCFI26
 1485 021c 0200     		.2byte	0x2
 1486 021e 7D       		.byte	0x7d
 1487 021f 00       		.sleb128 0
 1488 0220 02000000 		.4byte	.LCFI26
 1489 0224 04000000 		.4byte	.LCFI27
 1490 0228 0200     		.2byte	0x2
 1491 022a 7D       		.byte	0x7d
 1492 022b 04       		.sleb128 4
 1493 022c 04000000 		.4byte	.LCFI27
 1494 0230 18000000 		.4byte	.LFE11
 1495 0234 0200     		.2byte	0x2
 1496 0236 77       		.byte	0x77
 1497 0237 04       		.sleb128 4
 1498 0238 00000000 		.4byte	0
 1499 023c 00000000 		.4byte	0
 1500              	.LLST12:
 1501 0240 00000000 		.4byte	.LFB12
 1502 0244 02000000 		.4byte	.LCFI28
 1503 0248 0200     		.2byte	0x2
 1504 024a 7D       		.byte	0x7d
 1505 024b 00       		.sleb128 0
 1506 024c 02000000 		.4byte	.LCFI28
 1507 0250 04000000 		.4byte	.LCFI29
 1508 0254 0200     		.2byte	0x2
 1509 0256 7D       		.byte	0x7d
 1510 0257 04       		.sleb128 4
 1511 0258 04000000 		.4byte	.LCFI29
 1512 025c 06000000 		.4byte	.LCFI30
 1513 0260 0200     		.2byte	0x2
 1514 0262 7D       		.byte	0x7d
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 41


 1515 0263 10       		.sleb128 16
 1516 0264 06000000 		.4byte	.LCFI30
 1517 0268 20000000 		.4byte	.LFE12
 1518 026c 0200     		.2byte	0x2
 1519 026e 77       		.byte	0x77
 1520 026f 10       		.sleb128 16
 1521 0270 00000000 		.4byte	0
 1522 0274 00000000 		.4byte	0
 1523              	.LLST13:
 1524 0278 00000000 		.4byte	.LFB13
 1525 027c 02000000 		.4byte	.LCFI31
 1526 0280 0200     		.2byte	0x2
 1527 0282 7D       		.byte	0x7d
 1528 0283 00       		.sleb128 0
 1529 0284 02000000 		.4byte	.LCFI31
 1530 0288 04000000 		.4byte	.LCFI32
 1531 028c 0200     		.2byte	0x2
 1532 028e 7D       		.byte	0x7d
 1533 028f 04       		.sleb128 4
 1534 0290 04000000 		.4byte	.LCFI32
 1535 0294 22000000 		.4byte	.LFE13
 1536 0298 0200     		.2byte	0x2
 1537 029a 77       		.byte	0x77
 1538 029b 04       		.sleb128 4
 1539 029c 00000000 		.4byte	0
 1540 02a0 00000000 		.4byte	0
 1541              	.LLST14:
 1542 02a4 00000000 		.4byte	.LFB14
 1543 02a8 02000000 		.4byte	.LCFI33
 1544 02ac 0200     		.2byte	0x2
 1545 02ae 7D       		.byte	0x7d
 1546 02af 00       		.sleb128 0
 1547 02b0 02000000 		.4byte	.LCFI33
 1548 02b4 04000000 		.4byte	.LCFI34
 1549 02b8 0200     		.2byte	0x2
 1550 02ba 7D       		.byte	0x7d
 1551 02bb 04       		.sleb128 4
 1552 02bc 04000000 		.4byte	.LCFI34
 1553 02c0 06000000 		.4byte	.LCFI35
 1554 02c4 0200     		.2byte	0x2
 1555 02c6 7D       		.byte	0x7d
 1556 02c7 10       		.sleb128 16
 1557 02c8 06000000 		.4byte	.LCFI35
 1558 02cc 54000000 		.4byte	.LFE14
 1559 02d0 0200     		.2byte	0x2
 1560 02d2 77       		.byte	0x77
 1561 02d3 10       		.sleb128 16
 1562 02d4 00000000 		.4byte	0
 1563 02d8 00000000 		.4byte	0
 1564              	.LLST15:
 1565 02dc 00000000 		.4byte	.LFB15
 1566 02e0 02000000 		.4byte	.LCFI36
 1567 02e4 0200     		.2byte	0x2
 1568 02e6 7D       		.byte	0x7d
 1569 02e7 00       		.sleb128 0
 1570 02e8 02000000 		.4byte	.LCFI36
 1571 02ec 04000000 		.4byte	.LCFI37
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 42


 1572 02f0 0200     		.2byte	0x2
 1573 02f2 7D       		.byte	0x7d
 1574 02f3 08       		.sleb128 8
 1575 02f4 04000000 		.4byte	.LCFI37
 1576 02f8 1A000000 		.4byte	.LFE15
 1577 02fc 0200     		.2byte	0x2
 1578 02fe 77       		.byte	0x77
 1579 02ff 08       		.sleb128 8
 1580 0300 00000000 		.4byte	0
 1581 0304 00000000 		.4byte	0
 1582              		.section	.debug_aranges,"",%progbits
 1583 0000 94000000 		.4byte	0x94
 1584 0004 0200     		.2byte	0x2
 1585 0006 00000000 		.4byte	.Ldebug_info0
 1586 000a 04       		.byte	0x4
 1587 000b 00       		.byte	0
 1588 000c 0000     		.2byte	0
 1589 000e 0000     		.2byte	0
 1590 0010 00000000 		.4byte	.LFB0
 1591 0014 5E000000 		.4byte	.LFE0-.LFB0
 1592 0018 00000000 		.4byte	.LFB1
 1593 001c 26000000 		.4byte	.LFE1-.LFB1
 1594 0020 00000000 		.4byte	.LFB2
 1595 0024 2A000000 		.4byte	.LFE2-.LFB2
 1596 0028 00000000 		.4byte	.LFB3
 1597 002c 26000000 		.4byte	.LFE3-.LFB3
 1598 0030 00000000 		.4byte	.LFB4
 1599 0034 20000000 		.4byte	.LFE4-.LFB4
 1600 0038 00000000 		.4byte	.LFB5
 1601 003c 14000000 		.4byte	.LFE5-.LFB5
 1602 0040 00000000 		.4byte	.LFB6
 1603 0044 18000000 		.4byte	.LFE6-.LFB6
 1604 0048 00000000 		.4byte	.LFB7
 1605 004c 18000000 		.4byte	.LFE7-.LFB7
 1606 0050 00000000 		.4byte	.LFB8
 1607 0054 20000000 		.4byte	.LFE8-.LFB8
 1608 0058 00000000 		.4byte	.LFB9
 1609 005c 18000000 		.4byte	.LFE9-.LFB9
 1610 0060 00000000 		.4byte	.LFB10
 1611 0064 20000000 		.4byte	.LFE10-.LFB10
 1612 0068 00000000 		.4byte	.LFB11
 1613 006c 18000000 		.4byte	.LFE11-.LFB11
 1614 0070 00000000 		.4byte	.LFB12
 1615 0074 20000000 		.4byte	.LFE12-.LFB12
 1616 0078 00000000 		.4byte	.LFB13
 1617 007c 22000000 		.4byte	.LFE13-.LFB13
 1618 0080 00000000 		.4byte	.LFB14
 1619 0084 54000000 		.4byte	.LFE14-.LFB14
 1620 0088 00000000 		.4byte	.LFB15
 1621 008c 1A000000 		.4byte	.LFE15-.LFB15
 1622 0090 00000000 		.4byte	0
 1623 0094 00000000 		.4byte	0
 1624              		.section	.debug_ranges,"",%progbits
 1625              	.Ldebug_ranges0:
 1626 0000 00000000 		.4byte	.LFB0
 1627 0004 5E000000 		.4byte	.LFE0
 1628 0008 00000000 		.4byte	.LFB1
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 43


 1629 000c 26000000 		.4byte	.LFE1
 1630 0010 00000000 		.4byte	.LFB2
 1631 0014 2A000000 		.4byte	.LFE2
 1632 0018 00000000 		.4byte	.LFB3
 1633 001c 26000000 		.4byte	.LFE3
 1634 0020 00000000 		.4byte	.LFB4
 1635 0024 20000000 		.4byte	.LFE4
 1636 0028 00000000 		.4byte	.LFB5
 1637 002c 14000000 		.4byte	.LFE5
 1638 0030 00000000 		.4byte	.LFB6
 1639 0034 18000000 		.4byte	.LFE6
 1640 0038 00000000 		.4byte	.LFB7
 1641 003c 18000000 		.4byte	.LFE7
 1642 0040 00000000 		.4byte	.LFB8
 1643 0044 20000000 		.4byte	.LFE8
 1644 0048 00000000 		.4byte	.LFB9
 1645 004c 18000000 		.4byte	.LFE9
 1646 0050 00000000 		.4byte	.LFB10
 1647 0054 20000000 		.4byte	.LFE10
 1648 0058 00000000 		.4byte	.LFB11
 1649 005c 18000000 		.4byte	.LFE11
 1650 0060 00000000 		.4byte	.LFB12
 1651 0064 20000000 		.4byte	.LFE12
 1652 0068 00000000 		.4byte	.LFB13
 1653 006c 22000000 		.4byte	.LFE13
 1654 0070 00000000 		.4byte	.LFB14
 1655 0074 54000000 		.4byte	.LFE14
 1656 0078 00000000 		.4byte	.LFB15
 1657 007c 1A000000 		.4byte	.LFE15
 1658 0080 00000000 		.4byte	0
 1659 0084 00000000 		.4byte	0
 1660              		.section	.debug_line,"",%progbits
 1661              	.Ldebug_line0:
 1662 0000 88010000 		.section	.debug_str,"MS",%progbits,1
 1662      02004900 
 1662      00000201 
 1662      FB0E0D00 
 1662      01010101 
 1663              	.LASF15:
 1664 0000 72656731 		.ascii	"reg16\000"
 1664      3600
 1665              	.LASF32:
 1666 0006 4563686F 		.ascii	"Echo_Timer_WriteCounter\000"
 1666      5F54696D 
 1666      65725F57 
 1666      72697465 
 1666      436F756E 
 1667              	.LASF18:
 1668 001e 4563686F 		.ascii	"Echo_Timer_Start\000"
 1668      5F54696D 
 1668      65725F53 
 1668      74617274 
 1668      00
 1669              	.LASF30:
 1670 002f 70657269 		.ascii	"period\000"
 1670      6F6400
 1671              	.LASF19:
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 44


 1672 0036 4563686F 		.ascii	"Echo_Timer_Stop\000"
 1672      5F54696D 
 1672      65725F53 
 1672      746F7000 
 1673              	.LASF3:
 1674 0046 73686F72 		.ascii	"short unsigned int\000"
 1674      7420756E 
 1674      7369676E 
 1674      65642069 
 1674      6E7400
 1675              	.LASF31:
 1676 0059 4563686F 		.ascii	"Echo_Timer_ReadCapture\000"
 1676      5F54696D 
 1676      65725F52 
 1676      65616443 
 1676      61707475 
 1677              	.LASF17:
 1678 0070 4563686F 		.ascii	"Echo_Timer_Enable\000"
 1678      5F54696D 
 1678      65725F45 
 1678      6E61626C 
 1678      6500
 1679              	.LASF35:
 1680 0082 4563686F 		.ascii	"Echo_Timer_SetInterruptCount\000"
 1680      5F54696D 
 1680      65725F53 
 1680      6574496E 
 1680      74657272 
 1681              	.LASF36:
 1682 009f 696E7465 		.ascii	"interruptCount\000"
 1682      72727570 
 1682      74436F75 
 1682      6E7400
 1683              	.LASF11:
 1684 00ae 666C6F61 		.ascii	"float\000"
 1684      7400
 1685              	.LASF33:
 1686 00b4 636F756E 		.ascii	"counter\000"
 1686      74657200 
 1687              	.LASF1:
 1688 00bc 756E7369 		.ascii	"unsigned char\000"
 1688      676E6564 
 1688      20636861 
 1688      7200
 1689              	.LASF14:
 1690 00ca 72656738 		.ascii	"reg8\000"
 1690      00
 1691              	.LASF5:
 1692 00cf 6C6F6E67 		.ascii	"long unsigned int\000"
 1692      20756E73 
 1692      69676E65 
 1692      6420696E 
 1692      7400
 1693              	.LASF21:
 1694 00e1 4563686F 		.ascii	"Echo_Timer_SetInterruptMode\000"
 1694      5F54696D 
 1694      65725F53 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 45


 1694      6574496E 
 1694      74657272 
 1695              	.LASF27:
 1696 00fd 636F6E74 		.ascii	"control\000"
 1696      726F6C00 
 1697              	.LASF12:
 1698 0105 646F7562 		.ascii	"double\000"
 1698      6C6500
 1699              	.LASF34:
 1700 010c 4563686F 		.ascii	"Echo_Timer_ReadCounter\000"
 1700      5F54696D 
 1700      65725F52 
 1700      65616443 
 1700      6F756E74 
 1701              	.LASF23:
 1702 0123 4563686F 		.ascii	"Echo_Timer_ReadStatusRegister\000"
 1702      5F54696D 
 1702      65725F52 
 1702      65616453 
 1702      74617475 
 1703              	.LASF22:
 1704 0141 4563686F 		.ascii	"Echo_Timer_SoftwareCapture\000"
 1704      5F54696D 
 1704      65725F53 
 1704      6F667477 
 1704      61726543 
 1705              	.LASF24:
 1706 015c 4563686F 		.ascii	"Echo_Timer_ReadControlRegister\000"
 1706      5F54696D 
 1706      65725F52 
 1706      65616443 
 1706      6F6E7472 
 1707              	.LASF10:
 1708 017b 75696E74 		.ascii	"uint16\000"
 1708      313600
 1709              	.LASF39:
 1710 0182 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Echo_Timer.c\000"
 1710      6E657261 
 1710      7465645F 
 1710      536F7572 
 1710      63655C50 
 1711              	.LASF8:
 1712 01a8 756E7369 		.ascii	"unsigned int\000"
 1712      676E6564 
 1712      20696E74 
 1712      00
 1713              	.LASF37:
 1714 01b5 4563686F 		.ascii	"Echo_Timer_ClearFIFO\000"
 1714      5F54696D 
 1714      65725F43 
 1714      6C656172 
 1714      4649464F 
 1715              	.LASF7:
 1716 01ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 1716      206C6F6E 
 1716      6720756E 
 1716      7369676E 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 46


 1716      65642069 
 1717              	.LASF29:
 1718 01e1 4563686F 		.ascii	"Echo_Timer_WritePeriod\000"
 1718      5F54696D 
 1718      65725F57 
 1718      72697465 
 1718      50657269 
 1719              	.LASF16:
 1720 01f8 73697A65 		.ascii	"sizetype\000"
 1720      74797065 
 1720      00
 1721              	.LASF6:
 1722 0201 6C6F6E67 		.ascii	"long long int\000"
 1722      206C6F6E 
 1722      6720696E 
 1722      7400
 1723              	.LASF40:
 1724 020f 443A5C55 		.ascii	"D:\\Users\\BertoTech\\Documents\\PID\\FW_Fan_Contro"
 1724      73657273 
 1724      5C426572 
 1724      746F5465 
 1724      63685C44 
 1725 023d 6C30312E 		.ascii	"l01.cydsn\000"
 1725      63796473 
 1725      6E00
 1726              	.LASF26:
 1727 0247 696E7465 		.ascii	"interruptMode\000"
 1727      72727570 
 1727      744D6F64 
 1727      6500
 1728              	.LASF2:
 1729 0255 73686F72 		.ascii	"short int\000"
 1729      7420696E 
 1729      7400
 1730              	.LASF9:
 1731 025f 75696E74 		.ascii	"uint8\000"
 1731      3800
 1732              	.LASF38:
 1733 0265 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1733      4320342E 
 1733      372E3320 
 1733      32303133 
 1733      30333132 
 1734 0298 616E6368 		.ascii	"anch revision 196615]\000"
 1734      20726576 
 1734      6973696F 
 1734      6E203139 
 1734      36363135 
 1735              	.LASF25:
 1736 02ae 4563686F 		.ascii	"Echo_Timer_WriteControlRegister\000"
 1736      5F54696D 
 1736      65725F57 
 1736      72697465 
 1736      436F6E74 
 1737              	.LASF28:
 1738 02ce 4563686F 		.ascii	"Echo_Timer_ReadPeriod\000"
 1738      5F54696D 
ARM GAS  D:\Users\BertoTech\TEMP\ccihxnoz.s 			page 47


 1738      65725F52 
 1738      65616450 
 1738      6572696F 
 1739              	.LASF4:
 1740 02e4 6C6F6E67 		.ascii	"long int\000"
 1740      20696E74 
 1740      00
 1741              	.LASF13:
 1742 02ed 63686172 		.ascii	"char\000"
 1742      00
 1743              	.LASF41:
 1744 02f2 4563686F 		.ascii	"Echo_Timer_interruptState\000"
 1744      5F54696D 
 1744      65725F69 
 1744      6E746572 
 1744      72757074 
 1745              	.LASF42:
 1746 030c 4563686F 		.ascii	"Echo_Timer_initVar\000"
 1746      5F54696D 
 1746      65725F69 
 1746      6E697456 
 1746      617200
 1747              	.LASF0:
 1748 031f 7369676E 		.ascii	"signed char\000"
 1748      65642063 
 1748      68617200 
 1749              	.LASF20:
 1750 032b 4563686F 		.ascii	"Echo_Timer_Init\000"
 1750      5F54696D 
 1750      65725F49 
 1750      6E697400 
 1751              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
