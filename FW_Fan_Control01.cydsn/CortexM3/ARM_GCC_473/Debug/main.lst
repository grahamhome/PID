ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global _printf_float
  19              		.thumb
  20              		.comm	InterruptCnt,1,1
  21              		.global	echo
  22              		.bss
  23              		.align	2
  24              		.type	echo, %object
  25              		.size	echo, 4
  26              	echo:
  27 0000 00000000 		.space	4
  28              		.global	min
  29              		.data
  30              		.align	2
  31              		.type	min, %object
  32              		.size	min, 4
  33              	min:
  34 0000 FFFFFFFF 		.word	-1
  35              		.global	max
  36              		.bss
  37              		.align	2
  38              		.type	max, %object
  39              		.size	max, 4
  40              	max:
  41 0004 00000000 		.space	4
  42              		.section	.text.start_echo_IRR_Interrupt,"ax",%progbits
  43              		.align	2
  44              		.global	start_echo_IRR_Interrupt
  45              		.thumb
  46              		.thumb_func
  47              		.type	start_echo_IRR_Interrupt, %function
  48              	start_echo_IRR_Interrupt:
  49              	.LFB56:
  50              		.file 1 ".\\main.c"
   1:.\main.c      **** /*********************************************************************************
   2:.\main.c      **** * Project Name:      Firmware Fan Control 
   3:.\main.c      **** * Version:           1.20
   4:.\main.c      **** *
   5:.\main.c      **** * Device Used:       PSoC 3 CY8C3866AXI-040 or PSoC 5 CY8C5588AXI-060ES1
   6:.\main.c      **** * Software Used:     PSoC Creator v2.1
   7:.\main.c      **** * Compiler Used:     Keil(C51), ARM GNU CC
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 2


   8:.\main.c      **** * Related Hardware:  CY8CKIT-001 PSoC DVK
   9:.\main.c      **** *********************************************************************************
  10:.\main.c      **** * Theory of Operation:
  11:.\main.c      **** *
  12:.\main.c      **** *  The Fan Controller is configured into the firmware (CPU) fan control mode
  13:.\main.c      **** *  The speed control algorithm is implemented in the firmware
  14:.\main.c      **** *  The firmware synchornizes to hardware using the end-of-cycle (eoc) pulse
  15:.\main.c      **** *  2 Fans are supported (individual PWMs - no banks)
  16:.\main.c      **** *
  17:.\main.c      **** *  1st line of LCD displays Desired Speed and Actual Speed and PWM Duty Cycle of Fan 1
  18:.\main.c      **** *  2nd line of LCD displays Actual Speed and PWM Duty Cycle of Fan 2
  19:.\main.c      **** *  SW1 decreases desired speed in RPM
  20:.\main.c      **** *  SW2 increases desired speed in RPM
  21:.\main.c      **** *
  22:.\main.c      **** ********************************************************************************
  23:.\main.c      **** * Copyright 2013, Cypress Semiconductor Corporation. All rights reserved.
  24:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  25:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  26:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  27:.\main.c      **** * accompanying the software package from which you obtained this software.
  28:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  29:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  30:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:.\main.c      **** *******************************************************************************/
  32:.\main.c      **** 
  33:.\main.c      **** #define LCD_MAX_ECHO (LCD_Position(0u, 8u))
  34:.\main.c      **** #define LCD_MIN_ECHO (LCD_Position(0u, 0u))
  35:.\main.c      **** #define LCD_MIN_DUTY (LCD_Position(1u, 8u))
  36:.\main.c      **** #define LCD_MAX_DUTY (LCD_Position(1u, 0u))
  37:.\main.c      **** 
  38:.\main.c      **** #include <device.h>
  39:.\main.c      **** #include <stdio.h>
  40:.\main.c      **** 
  41:.\main.c      **** #if defined (__GNUC__)
  42:.\main.c      ****     /* Add an explicit reference to the floating point printf library */
  43:.\main.c      ****     /* to allow the usage of floating point conversion specifiers. */
  44:.\main.c      ****     /* This is not linked in by default with the newlib-nano library. */
  45:.\main.c      ****     asm (".global _printf_float");
  46:.\main.c      **** #endif
  47:.\main.c      **** 
  48:.\main.c      **** 
  49:.\main.c      **** /* PWM duty cycle controls - units are hundredths of a percent */
  50:.\main.c      **** #define MIN_DUTY            (50u)
  51:.\main.c      **** #define MAX_DUTY            (9950u)
  52:.\main.c      **** #define DUTY_STEP_COARSE    (100u)
  53:.\main.c      **** #define DUTY_STEP_FINE      (2u)
  54:.\main.c      **** 
  55:.\main.c      **** /* Speed controls - units are RPM */
  56:.\main.c      **** #define MIN_RPM             (2500u)
  57:.\main.c      **** #define MAX_RPM             (9500u)
  58:.\main.c      **** #define INIT_RPM            (4500u)
  59:.\main.c      **** #define RPM_STEP            (500u)
  60:.\main.c      **** #define RPM_DELTA_LARGE     (500u)
  61:.\main.c      **** #define RPM_TOLERANCE       (100u)
  62:.\main.c      **** 
  63:.\main.c      **** #define FAN                 (1u)
  64:.\main.c      **** 
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 3


  65:.\main.c      **** #include <device.h>
  66:.\main.c      **** #include <end_echo_IRR.h>
  67:.\main.c      **** #include <Echo_Timer.h>
  68:.\main.c      **** #include <start_echo_IRR.h>
  69:.\main.c      **** #include <stdio.h>
  70:.\main.c      **** #include <time.h>
  71:.\main.c      **** 
  72:.\main.c      **** 
  73:.\main.c      **** #define max_32b_int 4294967295u
  74:.\main.c      **** 
  75:.\main.c      **** 
  76:.\main.c      **** uint8 InterruptCnt;
  77:.\main.c      **** uint32 echo=0;
  78:.\main.c      **** uint32 min = max_32b_int; 
  79:.\main.c      **** uint32 max = 0;
  80:.\main.c      **** 
  81:.\main.c      **** CY_ISR(start_echo_IRR_Interrupt)
  82:.\main.c      **** {
  51              		.loc 1 82 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55 0000 80B5     		push	{r7, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
  83:.\main.c      ****     start_echo_IRR_ClearPending(); 
  63              		.loc 1 83 0
  64 0004 FFF7FEFF 		bl	start_echo_IRR_ClearPending
  84:.\main.c      ****     
  85:.\main.c      ****     Echo_Timer_Stop();
  65              		.loc 1 85 0
  66 0008 FFF7FEFF 		bl	Echo_Timer_Stop
  86:.\main.c      ****     Echo_Timer_Init();
  67              		.loc 1 86 0
  68 000c FFF7FEFF 		bl	Echo_Timer_Init
  87:.\main.c      ****     Echo_Timer_Start();
  69              		.loc 1 87 0
  70 0010 FFF7FEFF 		bl	Echo_Timer_Start
  88:.\main.c      **** }
  71              		.loc 1 88 0
  72 0014 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE56:
  75              		.size	start_echo_IRR_Interrupt, .-start_echo_IRR_Interrupt
  76 0016 00BF     		.section	.text.end_echo_IRR_Interrupt,"ax",%progbits
  77              		.align	2
  78              		.global	end_echo_IRR_Interrupt
  79              		.thumb
  80              		.thumb_func
  81              		.type	end_echo_IRR_Interrupt, %function
  82              	end_echo_IRR_Interrupt:
  83              	.LFB57:
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 4


  89:.\main.c      **** 
  90:.\main.c      **** 
  91:.\main.c      **** CY_ISR(end_echo_IRR_Interrupt)
  92:.\main.c      **** {
  84              		.loc 1 92 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI3:
  95              		.cfi_def_cfa_register 7
  93:.\main.c      **** 
  94:.\main.c      ****     end_echo_IRR_ClearPending();    
  96              		.loc 1 94 0
  97 0004 FFF7FEFF 		bl	end_echo_IRR_ClearPending
  95:.\main.c      ****     echo = Echo_Timer_ReadCounter();
  98              		.loc 1 95 0
  99 0008 FFF7FEFF 		bl	Echo_Timer_ReadCounter
 100 000c 0246     		mov	r2, r0
 101 000e 40F20003 		movw	r3, #:lower16:echo
 102 0012 C0F20003 		movt	r3, #:upper16:echo
 103 0016 1A60     		str	r2, [r3, #0]
  96:.\main.c      ****     
  97:.\main.c      ****     Echo_Timer_Stop();
 104              		.loc 1 97 0
 105 0018 FFF7FEFF 		bl	Echo_Timer_Stop
  98:.\main.c      **** }
 106              		.loc 1 98 0
 107 001c 80BD     		pop	{r7, pc}
 108              		.cfi_endproc
 109              	.LFE57:
 110              		.size	end_echo_IRR_Interrupt, .-end_echo_IRR_Interrupt
 111 001e 00BF     		.section	.text.main,"ax",%progbits
 112              		.align	2
 113              		.global	main
 114              		.thumb
 115              		.thumb_func
 116              		.type	main, %function
 117              	main:
 118              	.LFB58:
  99:.\main.c      **** 
 100:.\main.c      **** void main()
 101:.\main.c      **** {
 119              		.loc 1 101 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 24
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              	.LCFI4:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 5


 128 0002 86B0     		sub	sp, sp, #24
 129              	.LCFI5:
 130              		.cfi_def_cfa_offset 32
 131 0004 00AF     		add	r7, sp, #0
 132              	.LCFI6:
 133              		.cfi_def_cfa_register 7
 102:.\main.c      ****     
 103:.\main.c      ****     /* Enable the global interrupt */
 104:.\main.c      ****     CyGlobalIntEnable;
 134              		.loc 1 104 0
 135              	@ 104 ".\main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 105:.\main.c      ****     
 106:.\main.c      ****     /* 1 - Enable the Interrupt component connected to Timer interrupt */
 107:.\main.c      ****     /* 2 - Start the components */
 108:.\main.c      **** 
 109:.\main.c      ****     Trigger_Timer_Start();
 138              		.loc 1 109 0
 139              		.thumb
 140 0008 FFF7FEFF 		bl	Trigger_Timer_Start
 110:.\main.c      ****     
 111:.\main.c      ****     start_echo_IRR_StartEx(start_echo_IRR_Interrupt);
 141              		.loc 1 111 0
 142 000c 40F20000 		movw	r0, #:lower16:start_echo_IRR_Interrupt
 143 0010 C0F20000 		movt	r0, #:upper16:start_echo_IRR_Interrupt
 144 0014 FFF7FEFF 		bl	start_echo_IRR_StartEx
 112:.\main.c      ****     start_echo_IRR_Start();
 145              		.loc 1 112 0
 146 0018 FFF7FEFF 		bl	start_echo_IRR_Start
 113:.\main.c      ****     
 114:.\main.c      ****     end_echo_IRR_StartEx(end_echo_IRR_Interrupt);
 147              		.loc 1 114 0
 148 001c 40F20000 		movw	r0, #:lower16:end_echo_IRR_Interrupt
 149 0020 C0F20000 		movt	r0, #:upper16:end_echo_IRR_Interrupt
 150 0024 FFF7FEFF 		bl	end_echo_IRR_StartEx
 115:.\main.c      ****     end_echo_IRR_Start();
 151              		.loc 1 115 0
 152 0028 FFF7FEFF 		bl	end_echo_IRR_Start
 116:.\main.c      ****     
 117:.\main.c      ****     //Echo_Timer_ISR_StartEx(Echo_Timer_ISR_Interrupt);
 118:.\main.c      ****     //Echo_Timer_ISR_Start();
 119:.\main.c      ****     
 120:.\main.c      ****     /* Display TMR-16 on LCD */
 121:.\main.c      ****     /*LCD_Start();
 122:.\main.c      ****     LCD_Position(0u, 0u);
 123:.\main.c      ****     LCD_PrintString("TMR-16"); */
 124:.\main.c      ****     
 125:.\main.c      ****     uint16  desiredSpeed = INIT_RPM;
 153              		.loc 1 125 0
 154 002c 41F29413 		movw	r3, #4500
 155 0030 7B82     		strh	r3, [r7, #18]	@ movhi
 126:.\main.c      ****     uint16  dutyCycle;
 127:.\main.c      ****     char    displayString[6];
 128:.\main.c      ****     
 129:.\main.c      ****     
 130:.\main.c      ****     
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 6


 131:.\main.c      ****     /* Globally Enable Interrupts to the CPU Core */
 132:.\main.c      ****     CyGlobalIntEnable;
 156              		.loc 1 132 0
 157              	@ 132 ".\main.c" 1
 158 0032 62B6     		CPSIE   i
 159              	@ 0 "" 2
 133:.\main.c      ****     FanController_Start();
 160              		.loc 1 133 0
 161              		.thumb
 162 0034 FFF7FEFF 		bl	FanController_Start
 134:.\main.c      ****     FanController_SetDesiredSpeed(FAN, desiredSpeed);
 163              		.loc 1 134 0
 164 0038 7B8A     		ldrh	r3, [r7, #18]
 165 003a 4FF00100 		mov	r0, #1
 166 003e 1946     		mov	r1, r3
 167 0040 FFF7FEFF 		bl	FanController_SetDesiredSpeed
 135:.\main.c      ****     dutyCycle = FanController_GetDutyCycle(FAN);
 168              		.loc 1 135 0
 169 0044 4FF00100 		mov	r0, #1
 170 0048 FFF7FEFF 		bl	FanController_GetDutyCycle
 171 004c 0346     		mov	r3, r0
 172 004e 3B82     		strh	r3, [r7, #16]	@ movhi
 136:.\main.c      ****     
 137:.\main.c      ****     /*LCD_Start();
 138:.\main.c      ****     LCD_Position(0u, 0u);
 139:.\main.c      ****     LCD_PrintDecUint16(desiredSpeed);*/
 140:.\main.c      ****     
 141:.\main.c      ****     ADC_DelSig_1_Start();
 173              		.loc 1 141 0
 174 0050 FFF7FEFF 		bl	ADC_DelSig_1_Start
 142:.\main.c      **** 
 143:.\main.c      ****     /* Start the ADC conversion */
 144:.\main.c      ****     ADC_DelSig_1_StartConvert();
 175              		.loc 1 144 0
 176 0054 FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 145:.\main.c      ****     
 146:.\main.c      ****     
 147:.\main.c      ****     // Determine minimum and maximum fan speed and min & max. distance readings
 148:.\main.c      ****     //FanController_SetDesiredSpeed(FAN, desiredSpeed);
 149:.\main.c      ****     uint16 currentDuty = MIN_DUTY;
 177              		.loc 1 149 0
 178 0058 4FF03203 		mov	r3, #50
 179 005c FB82     		strh	r3, [r7, #22]	@ movhi
 150:.\main.c      ****     FanController_SetDesiredSpeed(FAN, MAX_RPM);
 180              		.loc 1 150 0
 181 005e 4FF00100 		mov	r0, #1
 182 0062 42F21C51 		movw	r1, #9500
 183 0066 FFF7FEFF 		bl	FanController_SetDesiredSpeed
 151:.\main.c      ****     FanController_SetDutyCycle(FAN, currentDuty);
 184              		.loc 1 151 0
 185 006a FB8A     		ldrh	r3, [r7, #22]
 186 006c 4FF00100 		mov	r0, #1
 187 0070 1946     		mov	r1, r3
 188 0072 FFF7FEFF 		bl	FanController_SetDutyCycle
 152:.\main.c      ****     uint16 min_duty = 0;
 189              		.loc 1 152 0
 190 0076 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 7


 191 007a FB81     		strh	r3, [r7, #14]	@ movhi
 153:.\main.c      ****     uint16 max_duty = 0;
 192              		.loc 1 153 0
 193 007c 4FF00003 		mov	r3, #0
 194 0080 BB81     		strh	r3, [r7, #12]	@ movhi
 154:.\main.c      ****     uint8 min_record_counter = 0;
 195              		.loc 1 154 0
 196 0082 4FF00003 		mov	r3, #0
 197 0086 7B75     		strb	r3, [r7, #21]
 198              	.L8:
 155:.\main.c      ****     while (1u) {
 156:.\main.c      ****         
 157:.\main.c      ****         /* Display position */
 158:.\main.c      ****         //LCD_Position(0u, 0u);
 159:.\main.c      ****         //LCD_PrintInt16(echo/2u);
 160:.\main.c      ****         
 161:.\main.c      ****         // Check if max rpm should be updated 
 162:.\main.c      ****         if (echo>max){
 199              		.loc 1 162 0
 200 0088 40F20003 		movw	r3, #:lower16:echo
 201 008c C0F20003 		movt	r3, #:upper16:echo
 202 0090 1A68     		ldr	r2, [r3, #0]
 203 0092 40F20003 		movw	r3, #:lower16:max
 204 0096 C0F20003 		movt	r3, #:upper16:max
 205 009a 1B68     		ldr	r3, [r3, #0]
 206 009c 9A42     		cmp	r2, r3
 207 009e 26D9     		bls	.L4
 163:.\main.c      ****             max = echo;
 208              		.loc 1 163 0
 209 00a0 40F20003 		movw	r3, #:lower16:echo
 210 00a4 C0F20003 		movt	r3, #:upper16:echo
 211 00a8 1A68     		ldr	r2, [r3, #0]
 212 00aa 40F20003 		movw	r3, #:lower16:max
 213 00ae C0F20003 		movt	r3, #:upper16:max
 214 00b2 1A60     		str	r2, [r3, #0]
 164:.\main.c      ****             min_duty = currentDuty;
 215              		.loc 1 164 0
 216 00b4 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 217 00b6 FB81     		strh	r3, [r7, #14]	@ movhi
 165:.\main.c      ****             LCD_MAX_ECHO;
 218              		.loc 1 165 0
 219 00b8 4FF00000 		mov	r0, #0
 220 00bc 4FF00801 		mov	r1, #8
 221 00c0 FFF7FEFF 		bl	LCD_Position
 166:.\main.c      ****             LCD_PrintInt16(max/2u);
 222              		.loc 1 166 0
 223 00c4 40F20003 		movw	r3, #:lower16:max
 224 00c8 C0F20003 		movt	r3, #:upper16:max
 225 00cc 1B68     		ldr	r3, [r3, #0]
 226 00ce 4FEA5303 		lsr	r3, r3, #1
 227 00d2 9BB2     		uxth	r3, r3
 228 00d4 1846     		mov	r0, r3
 229 00d6 FFF7FEFF 		bl	LCD_PrintInt16
 167:.\main.c      ****             LCD_MIN_DUTY;
 230              		.loc 1 167 0
 231 00da 4FF00100 		mov	r0, #1
 232 00de 4FF00801 		mov	r1, #8
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 8


 233 00e2 FFF7FEFF 		bl	LCD_Position
 168:.\main.c      ****             LCD_PrintInt16(min_duty);
 234              		.loc 1 168 0
 235 00e6 FB89     		ldrh	r3, [r7, #14]
 236 00e8 1846     		mov	r0, r3
 237 00ea FFF7FEFF 		bl	LCD_PrintInt16
 238              	.L4:
 169:.\main.c      ****         }
 170:.\main.c      ****         
 171:.\main.c      ****         // Check if min rpm should be updated
 172:.\main.c      ****         if (echo<min){
 239              		.loc 1 172 0
 240 00ee 40F20003 		movw	r3, #:lower16:echo
 241 00f2 C0F20003 		movt	r3, #:upper16:echo
 242 00f6 1A68     		ldr	r2, [r3, #0]
 243 00f8 40F20003 		movw	r3, #:lower16:min
 244 00fc C0F20003 		movt	r3, #:upper16:min
 245 0100 1B68     		ldr	r3, [r3, #0]
 246 0102 9A42     		cmp	r2, r3
 247 0104 2AD2     		bcs	.L5
 173:.\main.c      ****             min = echo;
 248              		.loc 1 173 0
 249 0106 40F20003 		movw	r3, #:lower16:echo
 250 010a C0F20003 		movt	r3, #:upper16:echo
 251 010e 1A68     		ldr	r2, [r3, #0]
 252 0110 40F20003 		movw	r3, #:lower16:min
 253 0114 C0F20003 		movt	r3, #:upper16:min
 254 0118 1A60     		str	r2, [r3, #0]
 174:.\main.c      ****             max_duty = currentDuty;
 255              		.loc 1 174 0
 256 011a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 257 011c BB81     		strh	r3, [r7, #12]	@ movhi
 175:.\main.c      ****             min_record_counter = 0;
 258              		.loc 1 175 0
 259 011e 4FF00003 		mov	r3, #0
 260 0122 7B75     		strb	r3, [r7, #21]
 176:.\main.c      ****             LCD_MIN_ECHO;
 261              		.loc 1 176 0
 262 0124 4FF00000 		mov	r0, #0
 263 0128 4FF00001 		mov	r1, #0
 264 012c FFF7FEFF 		bl	LCD_Position
 177:.\main.c      ****             LCD_PrintInt16(min/2u);
 265              		.loc 1 177 0
 266 0130 40F20003 		movw	r3, #:lower16:min
 267 0134 C0F20003 		movt	r3, #:upper16:min
 268 0138 1B68     		ldr	r3, [r3, #0]
 269 013a 4FEA5303 		lsr	r3, r3, #1
 270 013e 9BB2     		uxth	r3, r3
 271 0140 1846     		mov	r0, r3
 272 0142 FFF7FEFF 		bl	LCD_PrintInt16
 178:.\main.c      ****             LCD_MAX_DUTY;
 273              		.loc 1 178 0
 274 0146 4FF00100 		mov	r0, #1
 275 014a 4FF00001 		mov	r1, #0
 276 014e FFF7FEFF 		bl	LCD_Position
 179:.\main.c      ****             LCD_PrintInt16(max_duty);
 277              		.loc 1 179 0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 9


 278 0152 BB89     		ldrh	r3, [r7, #12]
 279 0154 1846     		mov	r0, r3
 280 0156 FFF7FEFF 		bl	LCD_PrintInt16
 281 015a 06E0     		b	.L6
 282              	.L5:
 180:.\main.c      ****         }  else {
 181:.\main.c      ****             min_record_counter++;
 283              		.loc 1 181 0
 284 015c 7B7D     		ldrb	r3, [r7, #21]
 285 015e 03F10103 		add	r3, r3, #1
 286 0162 7B75     		strb	r3, [r7, #21]
 182:.\main.c      ****             if (min_record_counter >= 200) {
 287              		.loc 1 182 0
 288 0164 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 289 0166 C72B     		cmp	r3, #199
 290 0168 0ED8     		bhi	.L10
 291              	.L6:
 183:.\main.c      ****                 break;
 184:.\main.c      ****             }
 185:.\main.c      ****         }
 186:.\main.c      ****         
 187:.\main.c      ****         currentDuty += DUTY_STEP_COARSE;
 292              		.loc 1 187 0
 293 016a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 294 016c 03F16403 		add	r3, r3, #100
 295 0170 FB82     		strh	r3, [r7, #22]	@ movhi
 188:.\main.c      ****         FanController_SetDutyCycle(FAN, currentDuty);
 296              		.loc 1 188 0
 297 0172 FB8A     		ldrh	r3, [r7, #22]
 298 0174 4FF00100 		mov	r0, #1
 299 0178 1946     		mov	r1, r3
 300 017a FFF7FEFF 		bl	FanController_SetDutyCycle
 189:.\main.c      **** 		CyDelay(100u);
 301              		.loc 1 189 0
 302 017e 4FF06400 		mov	r0, #100
 303 0182 FFF7FEFF 		bl	CyDelay
 190:.\main.c      ****     }
 304              		.loc 1 190 0
 305 0186 7FE7     		b	.L8
 306              	.L10:
 183:.\main.c      ****                 break;
 307              		.loc 1 183 0
 308 0188 00BF     		nop
 309              	.L9:
 191:.\main.c      ****     FanController_SetDutyCycle(FAN, MIN_DUTY);
 310              		.loc 1 191 0
 311 018a 4FF00100 		mov	r0, #1
 312 018e 4FF03201 		mov	r1, #50
 313 0192 FFF7FEFF 		bl	FanController_SetDutyCycle
 192:.\main.c      ****     
 193:.\main.c      ****     //while(1u) {
 194:.\main.c      ****         
 195:.\main.c      ****         /* Update fan speed */
 196:.\main.c      ****         
 197:.\main.c      ****         /* Synchronize firmware to end-of-cycle pulse from FanController */
 198:.\main.c      ****         //if(EOC_SR_Read())
 199:.\main.c      ****         //{
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 10


 200:.\main.c      ****         
 201:.\main.c      ****             /* Display Fan Actual Speeds */
 202:.\main.c      ****             /*LCD_Position(0,5u);
 203:.\main.c      ****             LCD_PrintDecUint16(FanController_GetActualSpeed(FAN));
 204:.\main.c      ****             LCD_PrintString("   ");*/
 205:.\main.c      **** 
 206:.\main.c      ****             /* Display Current Duty Cycle Settings (in 100ths of a percent) */
 207:.\main.c      ****            /* LCD_Position(0,10u);
 208:.\main.c      ****             sprintf(displayString, "%5.2f", (((float)dutyCycle)/100));
 209:.\main.c      ****             LCD_PrintString(displayString);
 210:.\main.c      ****             LCD_PrintString("%    ");*/
 211:.\main.c      ****             
 212:.\main.c      ****             
 213:.\main.c      ****             // Check for potentiometer reading to change speed
 214:.\main.c      ****             //if(ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS))
 215:.\main.c      ****             //{
 216:.\main.c      ****                 //uint16 output = ADC_DelSig_1_GetResult16() + 1; // Add one to overflow int at min
 217:.\main.c      ****                 //LCD_Position(1u, 8u);
 218:.\main.c      ****                 //LCD_PrintInt16(output);
 219:.\main.c      ****                 //float speed = (((float) output)/(float)256 * (((float)MAX_RPM) - ((float)MIN_RPM)
 220:.\main.c      ****                 //float duty = (((float) output)/(float)256 * (((float)MAX_DUTY) - ((float)MIN_DUTY
 221:.\main.c      ****                // dutyCycle = (uint16) duty;
 222:.\main.c      ****                // desiredSpeed = (uint16) speed;
 223:.\main.c      ****                 /* Display Updated Desired Speed */
 224:.\main.c      ****                 //LCD_Position(1u, 0u);
 225:.\main.c      ****                 //LCD_PrintDecUint16(desiredSpeed);
 226:.\main.c      ****                 //FanController_SetDesiredSpeed(FAN, desiredSpeed);
 227:.\main.c      ****                 //FanController_SetDutyCycle(FAN, dutyCycle);
 228:.\main.c      ****                 
 229:.\main.c      ****             //}
 230:.\main.c      ****         //}
 231:.\main.c      ****     //}
 232:.\main.c      **** }
 314              		.loc 1 232 0
 315 0196 07F11807 		add	r7, r7, #24
 316 019a BD46     		mov	sp, r7
 317 019c 80BD     		pop	{r7, pc}
 318              		.cfi_endproc
 319              	.LFE58:
 320              		.size	main, .-main
 321 019e 00BF     		.text
 322              	.Letext0:
 323              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 324              		.file 3 "./Generated_Source/PSoC5/cytypes.h"
 325              		.file 4 "./Generated_Source/PSoC5/core_cm3.h"
 326              		.section	.debug_info,"",%progbits
 327              	.Ldebug_info0:
 328 0000 C7010000 		.4byte	0x1c7
 329 0004 0200     		.2byte	0x2
 330 0006 00000000 		.4byte	.Ldebug_abbrev0
 331 000a 04       		.byte	0x4
 332 000b 01       		.uleb128 0x1
 333 000c BA010000 		.4byte	.LASF29
 334 0010 01       		.byte	0x1
 335 0011 C8000000 		.4byte	.LASF30
 336 0015 09000000 		.4byte	.LASF31
 337 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 11


 338 001d 00000000 		.4byte	0
 339 0021 00000000 		.4byte	0
 340 0025 00000000 		.4byte	.Ldebug_line0
 341 0029 02       		.uleb128 0x2
 342 002a 01       		.byte	0x1
 343 002b 06       		.byte	0x6
 344 002c 0C020000 		.4byte	.LASF0
 345 0030 02       		.uleb128 0x2
 346 0031 01       		.byte	0x1
 347 0032 08       		.byte	0x8
 348 0033 BA000000 		.4byte	.LASF1
 349 0037 02       		.uleb128 0x2
 350 0038 02       		.byte	0x2
 351 0039 05       		.byte	0x5
 352 003a AA010000 		.4byte	.LASF2
 353 003e 02       		.uleb128 0x2
 354 003f 02       		.byte	0x2
 355 0040 07       		.byte	0x7
 356 0041 D1000000 		.4byte	.LASF3
 357 0045 03       		.uleb128 0x3
 358 0046 73010000 		.4byte	.LASF9
 359 004a 02       		.byte	0x2
 360 004b 4F       		.byte	0x4f
 361 004c 50000000 		.4byte	0x50
 362 0050 02       		.uleb128 0x2
 363 0051 04       		.byte	0x4
 364 0052 05       		.byte	0x5
 365 0053 03020000 		.4byte	.LASF4
 366 0057 02       		.uleb128 0x2
 367 0058 04       		.byte	0x4
 368 0059 07       		.byte	0x7
 369 005a 0A010000 		.4byte	.LASF5
 370 005e 02       		.uleb128 0x2
 371 005f 08       		.byte	0x8
 372 0060 05       		.byte	0x5
 373 0061 84010000 		.4byte	.LASF6
 374 0065 02       		.uleb128 0x2
 375 0066 08       		.byte	0x8
 376 0067 07       		.byte	0x7
 377 0068 5C010000 		.4byte	.LASF7
 378 006c 04       		.uleb128 0x4
 379 006d 04       		.byte	0x4
 380 006e 05       		.byte	0x5
 381 006f 696E7400 		.ascii	"int\000"
 382 0073 02       		.uleb128 0x2
 383 0074 04       		.byte	0x4
 384 0075 07       		.byte	0x7
 385 0076 4F010000 		.4byte	.LASF8
 386 007a 03       		.uleb128 0x3
 387 007b B4010000 		.4byte	.LASF10
 388 007f 03       		.byte	0x3
 389 0080 5B       		.byte	0x5b
 390 0081 30000000 		.4byte	0x30
 391 0085 03       		.uleb128 0x3
 392 0086 38010000 		.4byte	.LASF11
 393 008a 03       		.byte	0x3
 394 008b 5C       		.byte	0x5c
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 12


 395 008c 3E000000 		.4byte	0x3e
 396 0090 03       		.uleb128 0x3
 397 0091 48010000 		.4byte	.LASF12
 398 0095 03       		.byte	0x3
 399 0096 5D       		.byte	0x5d
 400 0097 57000000 		.4byte	0x57
 401 009b 02       		.uleb128 0x2
 402 009c 04       		.byte	0x4
 403 009d 04       		.byte	0x4
 404 009e A7000000 		.4byte	.LASF13
 405 00a2 02       		.uleb128 0x2
 406 00a3 08       		.byte	0x8
 407 00a4 04       		.byte	0x4
 408 00a5 87000000 		.4byte	.LASF14
 409 00a9 02       		.uleb128 0x2
 410 00aa 01       		.byte	0x1
 411 00ab 08       		.byte	0x8
 412 00ac 92010000 		.4byte	.LASF15
 413 00b0 02       		.uleb128 0x2
 414 00b1 04       		.byte	0x4
 415 00b2 07       		.byte	0x7
 416 00b3 7B010000 		.4byte	.LASF16
 417 00b7 05       		.uleb128 0x5
 418 00b8 01       		.byte	0x1
 419 00b9 E4000000 		.4byte	.LASF17
 420 00bd 01       		.byte	0x1
 421 00be 51       		.byte	0x51
 422 00bf 01       		.byte	0x1
 423 00c0 00000000 		.4byte	.LFB56
 424 00c4 16000000 		.4byte	.LFE56
 425 00c8 00000000 		.4byte	.LLST0
 426 00cc 01       		.byte	0x1
 427 00cd 05       		.uleb128 0x5
 428 00ce 01       		.byte	0x1
 429 00cf 21010000 		.4byte	.LASF18
 430 00d3 01       		.byte	0x1
 431 00d4 5B       		.byte	0x5b
 432 00d5 01       		.byte	0x1
 433 00d6 00000000 		.4byte	.LFB57
 434 00da 1E000000 		.4byte	.LFE57
 435 00de 2C000000 		.4byte	.LLST1
 436 00e2 01       		.byte	0x1
 437 00e3 06       		.uleb128 0x6
 438 00e4 01       		.byte	0x1
 439 00e5 1C010000 		.4byte	.LASF32
 440 00e9 01       		.byte	0x1
 441 00ea 64       		.byte	0x64
 442 00eb 00000000 		.4byte	.LFB58
 443 00ef 9E010000 		.4byte	.LFE58
 444 00f3 58000000 		.4byte	.LLST2
 445 00f7 01       		.byte	0x1
 446 00f8 5F010000 		.4byte	0x15f
 447 00fc 07       		.uleb128 0x7
 448 00fd AD000000 		.4byte	.LASF19
 449 0101 01       		.byte	0x1
 450 0102 7D       		.byte	0x7d
 451 0103 85000000 		.4byte	0x85
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 13


 452 0107 02       		.byte	0x2
 453 0108 91       		.byte	0x91
 454 0109 72       		.sleb128 -14
 455 010a 07       		.uleb128 0x7
 456 010b 6F000000 		.4byte	.LASF20
 457 010f 01       		.byte	0x1
 458 0110 7E       		.byte	0x7e
 459 0111 85000000 		.4byte	0x85
 460 0115 02       		.byte	0x2
 461 0116 91       		.byte	0x91
 462 0117 70       		.sleb128 -16
 463 0118 07       		.uleb128 0x7
 464 0119 79000000 		.4byte	.LASF21
 465 011d 01       		.byte	0x1
 466 011e 7F       		.byte	0x7f
 467 011f 5F010000 		.4byte	0x15f
 468 0123 02       		.byte	0x2
 469 0124 91       		.byte	0x91
 470 0125 64       		.sleb128 -28
 471 0126 07       		.uleb128 0x7
 472 0127 8E000000 		.4byte	.LASF22
 473 012b 01       		.byte	0x1
 474 012c 95       		.byte	0x95
 475 012d 85000000 		.4byte	0x85
 476 0131 02       		.byte	0x2
 477 0132 91       		.byte	0x91
 478 0133 76       		.sleb128 -10
 479 0134 07       		.uleb128 0x7
 480 0135 00000000 		.4byte	.LASF23
 481 0139 01       		.byte	0x1
 482 013a 98       		.byte	0x98
 483 013b 85000000 		.4byte	0x85
 484 013f 02       		.byte	0x2
 485 0140 91       		.byte	0x91
 486 0141 6E       		.sleb128 -18
 487 0142 07       		.uleb128 0x7
 488 0143 3F010000 		.4byte	.LASF24
 489 0147 01       		.byte	0x1
 490 0148 99       		.byte	0x99
 491 0149 85000000 		.4byte	0x85
 492 014d 02       		.byte	0x2
 493 014e 91       		.byte	0x91
 494 014f 6C       		.sleb128 -20
 495 0150 07       		.uleb128 0x7
 496 0151 97010000 		.4byte	.LASF25
 497 0155 01       		.byte	0x1
 498 0156 9A       		.byte	0x9a
 499 0157 7A000000 		.4byte	0x7a
 500 015b 02       		.byte	0x2
 501 015c 91       		.byte	0x91
 502 015d 75       		.sleb128 -11
 503 015e 00       		.byte	0
 504 015f 08       		.uleb128 0x8
 505 0160 A9000000 		.4byte	0xa9
 506 0164 6F010000 		.4byte	0x16f
 507 0168 09       		.uleb128 0x9
 508 0169 B0000000 		.4byte	0xb0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 14


 509 016d 05       		.byte	0x5
 510 016e 00       		.byte	0
 511 016f 0A       		.uleb128 0xa
 512 0170 FD000000 		.4byte	.LASF26
 513 0174 04       		.byte	0x4
 514 0175 1606     		.2byte	0x616
 515 0177 7D010000 		.4byte	0x17d
 516 017b 01       		.byte	0x1
 517 017c 01       		.byte	0x1
 518 017d 0B       		.uleb128 0xb
 519 017e 45000000 		.4byte	0x45
 520 0182 0C       		.uleb128 0xc
 521 0183 9A000000 		.4byte	.LASF27
 522 0187 01       		.byte	0x1
 523 0188 4C       		.byte	0x4c
 524 0189 7A000000 		.4byte	0x7a
 525 018d 01       		.byte	0x1
 526 018e 05       		.byte	0x5
 527 018f 03       		.byte	0x3
 528 0190 00000000 		.4byte	InterruptCnt
 529 0194 0C       		.uleb128 0xc
 530 0195 18020000 		.4byte	.LASF28
 531 0199 01       		.byte	0x1
 532 019a 4D       		.byte	0x4d
 533 019b 90000000 		.4byte	0x90
 534 019f 01       		.byte	0x1
 535 01a0 05       		.byte	0x5
 536 01a1 03       		.byte	0x3
 537 01a2 00000000 		.4byte	echo
 538 01a6 0D       		.uleb128 0xd
 539 01a7 6D696E00 		.ascii	"min\000"
 540 01ab 01       		.byte	0x1
 541 01ac 4E       		.byte	0x4e
 542 01ad 90000000 		.4byte	0x90
 543 01b1 01       		.byte	0x1
 544 01b2 05       		.byte	0x5
 545 01b3 03       		.byte	0x3
 546 01b4 00000000 		.4byte	min
 547 01b8 0D       		.uleb128 0xd
 548 01b9 6D617800 		.ascii	"max\000"
 549 01bd 01       		.byte	0x1
 550 01be 4F       		.byte	0x4f
 551 01bf 90000000 		.4byte	0x90
 552 01c3 01       		.byte	0x1
 553 01c4 05       		.byte	0x5
 554 01c5 03       		.byte	0x3
 555 01c6 00000000 		.4byte	max
 556 01ca 00       		.byte	0
 557              		.section	.debug_abbrev,"",%progbits
 558              	.Ldebug_abbrev0:
 559 0000 01       		.uleb128 0x1
 560 0001 11       		.uleb128 0x11
 561 0002 01       		.byte	0x1
 562 0003 25       		.uleb128 0x25
 563 0004 0E       		.uleb128 0xe
 564 0005 13       		.uleb128 0x13
 565 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 15


 566 0007 03       		.uleb128 0x3
 567 0008 0E       		.uleb128 0xe
 568 0009 1B       		.uleb128 0x1b
 569 000a 0E       		.uleb128 0xe
 570 000b 55       		.uleb128 0x55
 571 000c 06       		.uleb128 0x6
 572 000d 11       		.uleb128 0x11
 573 000e 01       		.uleb128 0x1
 574 000f 52       		.uleb128 0x52
 575 0010 01       		.uleb128 0x1
 576 0011 10       		.uleb128 0x10
 577 0012 06       		.uleb128 0x6
 578 0013 00       		.byte	0
 579 0014 00       		.byte	0
 580 0015 02       		.uleb128 0x2
 581 0016 24       		.uleb128 0x24
 582 0017 00       		.byte	0
 583 0018 0B       		.uleb128 0xb
 584 0019 0B       		.uleb128 0xb
 585 001a 3E       		.uleb128 0x3e
 586 001b 0B       		.uleb128 0xb
 587 001c 03       		.uleb128 0x3
 588 001d 0E       		.uleb128 0xe
 589 001e 00       		.byte	0
 590 001f 00       		.byte	0
 591 0020 03       		.uleb128 0x3
 592 0021 16       		.uleb128 0x16
 593 0022 00       		.byte	0
 594 0023 03       		.uleb128 0x3
 595 0024 0E       		.uleb128 0xe
 596 0025 3A       		.uleb128 0x3a
 597 0026 0B       		.uleb128 0xb
 598 0027 3B       		.uleb128 0x3b
 599 0028 0B       		.uleb128 0xb
 600 0029 49       		.uleb128 0x49
 601 002a 13       		.uleb128 0x13
 602 002b 00       		.byte	0
 603 002c 00       		.byte	0
 604 002d 04       		.uleb128 0x4
 605 002e 24       		.uleb128 0x24
 606 002f 00       		.byte	0
 607 0030 0B       		.uleb128 0xb
 608 0031 0B       		.uleb128 0xb
 609 0032 3E       		.uleb128 0x3e
 610 0033 0B       		.uleb128 0xb
 611 0034 03       		.uleb128 0x3
 612 0035 08       		.uleb128 0x8
 613 0036 00       		.byte	0
 614 0037 00       		.byte	0
 615 0038 05       		.uleb128 0x5
 616 0039 2E       		.uleb128 0x2e
 617 003a 00       		.byte	0
 618 003b 3F       		.uleb128 0x3f
 619 003c 0C       		.uleb128 0xc
 620 003d 03       		.uleb128 0x3
 621 003e 0E       		.uleb128 0xe
 622 003f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 16


 623 0040 0B       		.uleb128 0xb
 624 0041 3B       		.uleb128 0x3b
 625 0042 0B       		.uleb128 0xb
 626 0043 27       		.uleb128 0x27
 627 0044 0C       		.uleb128 0xc
 628 0045 11       		.uleb128 0x11
 629 0046 01       		.uleb128 0x1
 630 0047 12       		.uleb128 0x12
 631 0048 01       		.uleb128 0x1
 632 0049 40       		.uleb128 0x40
 633 004a 06       		.uleb128 0x6
 634 004b 9642     		.uleb128 0x2116
 635 004d 0C       		.uleb128 0xc
 636 004e 00       		.byte	0
 637 004f 00       		.byte	0
 638 0050 06       		.uleb128 0x6
 639 0051 2E       		.uleb128 0x2e
 640 0052 01       		.byte	0x1
 641 0053 3F       		.uleb128 0x3f
 642 0054 0C       		.uleb128 0xc
 643 0055 03       		.uleb128 0x3
 644 0056 0E       		.uleb128 0xe
 645 0057 3A       		.uleb128 0x3a
 646 0058 0B       		.uleb128 0xb
 647 0059 3B       		.uleb128 0x3b
 648 005a 0B       		.uleb128 0xb
 649 005b 11       		.uleb128 0x11
 650 005c 01       		.uleb128 0x1
 651 005d 12       		.uleb128 0x12
 652 005e 01       		.uleb128 0x1
 653 005f 40       		.uleb128 0x40
 654 0060 06       		.uleb128 0x6
 655 0061 9642     		.uleb128 0x2116
 656 0063 0C       		.uleb128 0xc
 657 0064 01       		.uleb128 0x1
 658 0065 13       		.uleb128 0x13
 659 0066 00       		.byte	0
 660 0067 00       		.byte	0
 661 0068 07       		.uleb128 0x7
 662 0069 34       		.uleb128 0x34
 663 006a 00       		.byte	0
 664 006b 03       		.uleb128 0x3
 665 006c 0E       		.uleb128 0xe
 666 006d 3A       		.uleb128 0x3a
 667 006e 0B       		.uleb128 0xb
 668 006f 3B       		.uleb128 0x3b
 669 0070 0B       		.uleb128 0xb
 670 0071 49       		.uleb128 0x49
 671 0072 13       		.uleb128 0x13
 672 0073 02       		.uleb128 0x2
 673 0074 0A       		.uleb128 0xa
 674 0075 00       		.byte	0
 675 0076 00       		.byte	0
 676 0077 08       		.uleb128 0x8
 677 0078 01       		.uleb128 0x1
 678 0079 01       		.byte	0x1
 679 007a 49       		.uleb128 0x49
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 17


 680 007b 13       		.uleb128 0x13
 681 007c 01       		.uleb128 0x1
 682 007d 13       		.uleb128 0x13
 683 007e 00       		.byte	0
 684 007f 00       		.byte	0
 685 0080 09       		.uleb128 0x9
 686 0081 21       		.uleb128 0x21
 687 0082 00       		.byte	0
 688 0083 49       		.uleb128 0x49
 689 0084 13       		.uleb128 0x13
 690 0085 2F       		.uleb128 0x2f
 691 0086 0B       		.uleb128 0xb
 692 0087 00       		.byte	0
 693 0088 00       		.byte	0
 694 0089 0A       		.uleb128 0xa
 695 008a 34       		.uleb128 0x34
 696 008b 00       		.byte	0
 697 008c 03       		.uleb128 0x3
 698 008d 0E       		.uleb128 0xe
 699 008e 3A       		.uleb128 0x3a
 700 008f 0B       		.uleb128 0xb
 701 0090 3B       		.uleb128 0x3b
 702 0091 05       		.uleb128 0x5
 703 0092 49       		.uleb128 0x49
 704 0093 13       		.uleb128 0x13
 705 0094 3F       		.uleb128 0x3f
 706 0095 0C       		.uleb128 0xc
 707 0096 3C       		.uleb128 0x3c
 708 0097 0C       		.uleb128 0xc
 709 0098 00       		.byte	0
 710 0099 00       		.byte	0
 711 009a 0B       		.uleb128 0xb
 712 009b 35       		.uleb128 0x35
 713 009c 00       		.byte	0
 714 009d 49       		.uleb128 0x49
 715 009e 13       		.uleb128 0x13
 716 009f 00       		.byte	0
 717 00a0 00       		.byte	0
 718 00a1 0C       		.uleb128 0xc
 719 00a2 34       		.uleb128 0x34
 720 00a3 00       		.byte	0
 721 00a4 03       		.uleb128 0x3
 722 00a5 0E       		.uleb128 0xe
 723 00a6 3A       		.uleb128 0x3a
 724 00a7 0B       		.uleb128 0xb
 725 00a8 3B       		.uleb128 0x3b
 726 00a9 0B       		.uleb128 0xb
 727 00aa 49       		.uleb128 0x49
 728 00ab 13       		.uleb128 0x13
 729 00ac 3F       		.uleb128 0x3f
 730 00ad 0C       		.uleb128 0xc
 731 00ae 02       		.uleb128 0x2
 732 00af 0A       		.uleb128 0xa
 733 00b0 00       		.byte	0
 734 00b1 00       		.byte	0
 735 00b2 0D       		.uleb128 0xd
 736 00b3 34       		.uleb128 0x34
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 18


 737 00b4 00       		.byte	0
 738 00b5 03       		.uleb128 0x3
 739 00b6 08       		.uleb128 0x8
 740 00b7 3A       		.uleb128 0x3a
 741 00b8 0B       		.uleb128 0xb
 742 00b9 3B       		.uleb128 0x3b
 743 00ba 0B       		.uleb128 0xb
 744 00bb 49       		.uleb128 0x49
 745 00bc 13       		.uleb128 0x13
 746 00bd 3F       		.uleb128 0x3f
 747 00be 0C       		.uleb128 0xc
 748 00bf 02       		.uleb128 0x2
 749 00c0 0A       		.uleb128 0xa
 750 00c1 00       		.byte	0
 751 00c2 00       		.byte	0
 752 00c3 00       		.byte	0
 753              		.section	.debug_loc,"",%progbits
 754              	.Ldebug_loc0:
 755              	.LLST0:
 756 0000 00000000 		.4byte	.LFB56
 757 0004 02000000 		.4byte	.LCFI0
 758 0008 0200     		.2byte	0x2
 759 000a 7D       		.byte	0x7d
 760 000b 00       		.sleb128 0
 761 000c 02000000 		.4byte	.LCFI0
 762 0010 04000000 		.4byte	.LCFI1
 763 0014 0200     		.2byte	0x2
 764 0016 7D       		.byte	0x7d
 765 0017 08       		.sleb128 8
 766 0018 04000000 		.4byte	.LCFI1
 767 001c 16000000 		.4byte	.LFE56
 768 0020 0200     		.2byte	0x2
 769 0022 77       		.byte	0x77
 770 0023 08       		.sleb128 8
 771 0024 00000000 		.4byte	0
 772 0028 00000000 		.4byte	0
 773              	.LLST1:
 774 002c 00000000 		.4byte	.LFB57
 775 0030 02000000 		.4byte	.LCFI2
 776 0034 0200     		.2byte	0x2
 777 0036 7D       		.byte	0x7d
 778 0037 00       		.sleb128 0
 779 0038 02000000 		.4byte	.LCFI2
 780 003c 04000000 		.4byte	.LCFI3
 781 0040 0200     		.2byte	0x2
 782 0042 7D       		.byte	0x7d
 783 0043 08       		.sleb128 8
 784 0044 04000000 		.4byte	.LCFI3
 785 0048 1E000000 		.4byte	.LFE57
 786 004c 0200     		.2byte	0x2
 787 004e 77       		.byte	0x77
 788 004f 08       		.sleb128 8
 789 0050 00000000 		.4byte	0
 790 0054 00000000 		.4byte	0
 791              	.LLST2:
 792 0058 00000000 		.4byte	.LFB58
 793 005c 02000000 		.4byte	.LCFI4
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 19


 794 0060 0200     		.2byte	0x2
 795 0062 7D       		.byte	0x7d
 796 0063 00       		.sleb128 0
 797 0064 02000000 		.4byte	.LCFI4
 798 0068 04000000 		.4byte	.LCFI5
 799 006c 0200     		.2byte	0x2
 800 006e 7D       		.byte	0x7d
 801 006f 08       		.sleb128 8
 802 0070 04000000 		.4byte	.LCFI5
 803 0074 06000000 		.4byte	.LCFI6
 804 0078 0200     		.2byte	0x2
 805 007a 7D       		.byte	0x7d
 806 007b 20       		.sleb128 32
 807 007c 06000000 		.4byte	.LCFI6
 808 0080 9E010000 		.4byte	.LFE58
 809 0084 0200     		.2byte	0x2
 810 0086 77       		.byte	0x77
 811 0087 20       		.sleb128 32
 812 0088 00000000 		.4byte	0
 813 008c 00000000 		.4byte	0
 814              		.section	.debug_aranges,"",%progbits
 815 0000 2C000000 		.4byte	0x2c
 816 0004 0200     		.2byte	0x2
 817 0006 00000000 		.4byte	.Ldebug_info0
 818 000a 04       		.byte	0x4
 819 000b 00       		.byte	0
 820 000c 0000     		.2byte	0
 821 000e 0000     		.2byte	0
 822 0010 00000000 		.4byte	.LFB56
 823 0014 16000000 		.4byte	.LFE56-.LFB56
 824 0018 00000000 		.4byte	.LFB57
 825 001c 1E000000 		.4byte	.LFE57-.LFB57
 826 0020 00000000 		.4byte	.LFB58
 827 0024 9E010000 		.4byte	.LFE58-.LFB58
 828 0028 00000000 		.4byte	0
 829 002c 00000000 		.4byte	0
 830              		.section	.debug_ranges,"",%progbits
 831              	.Ldebug_ranges0:
 832 0000 00000000 		.4byte	.LFB56
 833 0004 16000000 		.4byte	.LFE56
 834 0008 00000000 		.4byte	.LFB57
 835 000c 1E000000 		.4byte	.LFE57
 836 0010 00000000 		.4byte	.LFB58
 837 0014 9E010000 		.4byte	.LFE58
 838 0018 00000000 		.4byte	0
 839 001c 00000000 		.4byte	0
 840              		.section	.debug_line,"",%progbits
 841              	.Ldebug_line0:
 842 0000 69010000 		.section	.debug_str,"MS",%progbits,1
 842      0200F900 
 842      00000201 
 842      FB0E0D00 
 842      01010101 
 843              	.LASF23:
 844 0000 6D696E5F 		.ascii	"min_duty\000"
 844      64757479 
 844      00
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 20


 845              	.LASF31:
 846 0009 5C5C6D69 		.ascii	"\\\\mightor\\home\\spring2013\\gmh5970\\Documents\\"
 846      6768746F 
 846      725C686F 
 846      6D655C73 
 846      7072696E 
 847 0035 50536F43 		.ascii	"PSoC Creator\\Fan_And_Potentiometer\\FW_Fan_Control"
 847      20437265 
 847      61746F72 
 847      5C46616E 
 847      5F416E64 
 848 0066 30312E63 		.ascii	"01.cydsn\000"
 848      7964736E 
 848      00
 849              	.LASF20:
 850 006f 64757479 		.ascii	"dutyCycle\000"
 850      4379636C 
 850      6500
 851              	.LASF21:
 852 0079 64697370 		.ascii	"displayString\000"
 852      6C617953 
 852      7472696E 
 852      6700
 853              	.LASF14:
 854 0087 646F7562 		.ascii	"double\000"
 854      6C6500
 855              	.LASF22:
 856 008e 63757272 		.ascii	"currentDuty\000"
 856      656E7444 
 856      75747900 
 857              	.LASF27:
 858 009a 496E7465 		.ascii	"InterruptCnt\000"
 858      72727570 
 858      74436E74 
 858      00
 859              	.LASF13:
 860 00a7 666C6F61 		.ascii	"float\000"
 860      7400
 861              	.LASF19:
 862 00ad 64657369 		.ascii	"desiredSpeed\000"
 862      72656453 
 862      70656564 
 862      00
 863              	.LASF1:
 864 00ba 756E7369 		.ascii	"unsigned char\000"
 864      676E6564 
 864      20636861 
 864      7200
 865              	.LASF30:
 866 00c8 2E5C6D61 		.ascii	".\\main.c\000"
 866      696E2E63 
 866      00
 867              	.LASF3:
 868 00d1 73686F72 		.ascii	"short unsigned int\000"
 868      7420756E 
 868      7369676E 
 868      65642069 
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 21


 868      6E7400
 869              	.LASF17:
 870 00e4 73746172 		.ascii	"start_echo_IRR_Interrupt\000"
 870      745F6563 
 870      686F5F49 
 870      52525F49 
 870      6E746572 
 871              	.LASF26:
 872 00fd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 872      52784275 
 872      66666572 
 872      00
 873              	.LASF5:
 874 010a 6C6F6E67 		.ascii	"long unsigned int\000"
 874      20756E73 
 874      69676E65 
 874      6420696E 
 874      7400
 875              	.LASF32:
 876 011c 6D61696E 		.ascii	"main\000"
 876      00
 877              	.LASF18:
 878 0121 656E645F 		.ascii	"end_echo_IRR_Interrupt\000"
 878      6563686F 
 878      5F495252 
 878      5F496E74 
 878      65727275 
 879              	.LASF11:
 880 0138 75696E74 		.ascii	"uint16\000"
 880      313600
 881              	.LASF24:
 882 013f 6D61785F 		.ascii	"max_duty\000"
 882      64757479 
 882      00
 883              	.LASF12:
 884 0148 75696E74 		.ascii	"uint32\000"
 884      333200
 885              	.LASF8:
 886 014f 756E7369 		.ascii	"unsigned int\000"
 886      676E6564 
 886      20696E74 
 886      00
 887              	.LASF7:
 888 015c 6C6F6E67 		.ascii	"long long unsigned int\000"
 888      206C6F6E 
 888      6720756E 
 888      7369676E 
 888      65642069 
 889              	.LASF9:
 890 0173 696E7433 		.ascii	"int32_t\000"
 890      325F7400 
 891              	.LASF16:
 892 017b 73697A65 		.ascii	"sizetype\000"
 892      74797065 
 892      00
 893              	.LASF6:
 894 0184 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\cc61Vcp5.s 			page 22


 894      206C6F6E 
 894      6720696E 
 894      7400
 895              	.LASF15:
 896 0192 63686172 		.ascii	"char\000"
 896      00
 897              	.LASF25:
 898 0197 6D696E5F 		.ascii	"min_record_counter\000"
 898      7265636F 
 898      72645F63 
 898      6F756E74 
 898      657200
 899              	.LASF2:
 900 01aa 73686F72 		.ascii	"short int\000"
 900      7420696E 
 900      7400
 901              	.LASF10:
 902 01b4 75696E74 		.ascii	"uint8\000"
 902      3800
 903              	.LASF29:
 904 01ba 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 904      4320342E 
 904      372E3320 
 904      32303133 
 904      30333132 
 905 01ed 616E6368 		.ascii	"anch revision 196615]\000"
 905      20726576 
 905      6973696F 
 905      6E203139 
 905      36363135 
 906              	.LASF4:
 907 0203 6C6F6E67 		.ascii	"long int\000"
 907      20696E74 
 907      00
 908              	.LASF0:
 909 020c 7369676E 		.ascii	"signed char\000"
 909      65642063 
 909      68617200 
 910              	.LASF28:
 911 0218 6563686F 		.ascii	"echo\000"
 911      00
 912              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
