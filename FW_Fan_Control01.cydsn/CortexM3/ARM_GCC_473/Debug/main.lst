ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global _printf_float
  19              		.thumb
  20              		.comm	InterruptCnt,1,1
  21              		.global	echo
  22              		.bss
  23              		.align	2
  24              		.type	echo, %object
  25              		.size	echo, 4
  26              	echo:
  27 0000 00000000 		.space	4
  28              		.global	max_echo
  29              		.align	2
  30              		.type	max_echo, %object
  31              		.size	max_echo, 4
  32              	max_echo:
  33 0004 00000000 		.space	4
  34              		.section	.text.start_echo_IRR_Interrupt,"ax",%progbits
  35              		.align	2
  36              		.global	start_echo_IRR_Interrupt
  37              		.thumb
  38              		.thumb_func
  39              		.type	start_echo_IRR_Interrupt, %function
  40              	start_echo_IRR_Interrupt:
  41              	.LFB56:
  42              		.file 1 ".\\main.c"
   1:.\main.c      **** /*********************************************************************************
   2:.\main.c      **** * Project Name:      Firmware Fan Control 
   3:.\main.c      **** * Version:           1.20
   4:.\main.c      **** *
   5:.\main.c      **** * Device Used:       PSoC 3 CY8C3866AXI-040 or PSoC 5 CY8C5588AXI-060ES1
   6:.\main.c      **** * Software Used:     PSoC Creator v2.1
   7:.\main.c      **** * Compiler Used:     Keil(C51), ARM GNU CC
   8:.\main.c      **** * Related Hardware:  CY8CKIT-001 PSoC DVK
   9:.\main.c      **** *********************************************************************************
  10:.\main.c      **** * Theory of Operation:
  11:.\main.c      **** *
  12:.\main.c      **** *  The Fan Controller is configured into the firmware (CPU) fan control mode
  13:.\main.c      **** *  The speed control algorithm is implemented in the firmware
  14:.\main.c      **** *  The firmware synchornizes to hardware using the end-of-cycle (eoc) pulse
  15:.\main.c      **** *  2 Fans are supported (individual PWMs - no banks)
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 2


  16:.\main.c      **** *
  17:.\main.c      **** *  1st line of LCD displays Desired Speed and Actual Speed and PWM Duty Cycle of Fan 1
  18:.\main.c      **** *  2nd line of LCD displays Actual Speed and PWM Duty Cycle of Fan 2
  19:.\main.c      **** *  SW1 decreases desired speed in RPM
  20:.\main.c      **** *  SW2 increases desired speed in RPM
  21:.\main.c      **** *
  22:.\main.c      **** ********************************************************************************
  23:.\main.c      **** * Copyright 2013, Cypress Semiconductor Corporation. All rights reserved.
  24:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  25:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  26:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  27:.\main.c      **** * accompanying the software package from which you obtained this software.
  28:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  29:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  30:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:.\main.c      **** *******************************************************************************/
  32:.\main.c      **** 
  33:.\main.c      **** #define LCD_MAX_ECHO (LCD_Position(0u, 8u))
  34:.\main.c      **** #define LCD_MIN_ECHO (LCD_Position(0u, 0u))
  35:.\main.c      **** #define LCD_MIN_DUTY (LCD_Position(1u, 8u))
  36:.\main.c      **** #define LCD_MAX_DUTY (LCD_Position(1u, 0u))
  37:.\main.c      **** 
  38:.\main.c      **** #include <device.h>
  39:.\main.c      **** #include <stdio.h>
  40:.\main.c      **** 
  41:.\main.c      **** #if defined (__GNUC__)
  42:.\main.c      ****     /* Add an explicit reference to the floating point printf library */
  43:.\main.c      ****     /* to allow the usage of floating point conversion specifiers. */
  44:.\main.c      ****     /* This is not linked in by default with the newlib-nano library. */
  45:.\main.c      ****     asm (".global _printf_float");
  46:.\main.c      **** #endif
  47:.\main.c      **** 
  48:.\main.c      **** 
  49:.\main.c      **** /* PWM duty cycle controls - units are hundredths of a percent */
  50:.\main.c      **** #define MIN_DUTY            (50u)
  51:.\main.c      **** #define MAX_DUTY            (9950u)
  52:.\main.c      **** #define DUTY_STEP_COARSE    (100u)
  53:.\main.c      **** #define DUTY_STEP_FINE      (2u)
  54:.\main.c      **** 
  55:.\main.c      **** /* Speed controls - units are RPM */
  56:.\main.c      **** #define MIN_RPM             (2500u)
  57:.\main.c      **** #define MAX_RPM             (9500u)
  58:.\main.c      **** #define INIT_RPM            (4500u)
  59:.\main.c      **** #define RPM_STEP            (500u)
  60:.\main.c      **** #define RPM_DELTA_LARGE     (500u)
  61:.\main.c      **** #define RPM_TOLERANCE       (100u)
  62:.\main.c      **** 
  63:.\main.c      **** #define FAN                 (1u)
  64:.\main.c      **** 
  65:.\main.c      **** #include <device.h>
  66:.\main.c      **** #include <end_echo_IRR.h>
  67:.\main.c      **** #include <Echo_Timer.h>
  68:.\main.c      **** #include <start_echo_IRR.h>
  69:.\main.c      **** #include <stdio.h>
  70:.\main.c      **** #include <time.h>
  71:.\main.c      **** 
  72:.\main.c      **** 
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 3


  73:.\main.c      **** uint8 InterruptCnt;
  74:.\main.c      **** uint32 echo=0;
  75:.\main.c      **** uint32 max_echo = 0;
  76:.\main.c      **** 
  77:.\main.c      **** CY_ISR(start_echo_IRR_Interrupt)
  78:.\main.c      **** {
  43              		.loc 1 78 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              	.LCFI1:
  54              		.cfi_def_cfa_register 7
  79:.\main.c      ****     start_echo_IRR_ClearPending(); 
  55              		.loc 1 79 0
  56 0004 FFF7FEFF 		bl	start_echo_IRR_ClearPending
  80:.\main.c      ****     
  81:.\main.c      ****     Echo_Timer_Stop();
  57              		.loc 1 81 0
  58 0008 FFF7FEFF 		bl	Echo_Timer_Stop
  82:.\main.c      ****     Echo_Timer_Init();
  59              		.loc 1 82 0
  60 000c FFF7FEFF 		bl	Echo_Timer_Init
  83:.\main.c      ****     Echo_Timer_Start();
  61              		.loc 1 83 0
  62 0010 FFF7FEFF 		bl	Echo_Timer_Start
  84:.\main.c      **** }
  63              		.loc 1 84 0
  64 0014 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE56:
  67              		.size	start_echo_IRR_Interrupt, .-start_echo_IRR_Interrupt
  68 0016 00BF     		.section	.text.end_echo_IRR_Interrupt,"ax",%progbits
  69              		.align	2
  70              		.global	end_echo_IRR_Interrupt
  71              		.thumb
  72              		.thumb_func
  73              		.type	end_echo_IRR_Interrupt, %function
  74              	end_echo_IRR_Interrupt:
  75              	.LFB57:
  85:.\main.c      **** 
  86:.\main.c      **** 
  87:.\main.c      **** CY_ISR(end_echo_IRR_Interrupt)
  88:.\main.c      **** {
  76              		.loc 1 88 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 4


  84              		.cfi_offset 14, -4
  85 0002 00AF     		add	r7, sp, #0
  86              	.LCFI3:
  87              		.cfi_def_cfa_register 7
  89:.\main.c      **** 
  90:.\main.c      ****     end_echo_IRR_ClearPending();    
  88              		.loc 1 90 0
  89 0004 FFF7FEFF 		bl	end_echo_IRR_ClearPending
  91:.\main.c      ****     echo = Echo_Timer_ReadCounter();
  90              		.loc 1 91 0
  91 0008 FFF7FEFF 		bl	Echo_Timer_ReadCounter
  92 000c 0246     		mov	r2, r0
  93 000e 40F20003 		movw	r3, #:lower16:echo
  94 0012 C0F20003 		movt	r3, #:upper16:echo
  95 0016 1A60     		str	r2, [r3, #0]
  92:.\main.c      ****     
  93:.\main.c      ****     Echo_Timer_Stop();
  96              		.loc 1 93 0
  97 0018 FFF7FEFF 		bl	Echo_Timer_Stop
  94:.\main.c      **** }
  98              		.loc 1 94 0
  99 001c 80BD     		pop	{r7, pc}
 100              		.cfi_endproc
 101              	.LFE57:
 102              		.size	end_echo_IRR_Interrupt, .-end_echo_IRR_Interrupt
 103 001e 00BF     		.section	.text.main,"ax",%progbits
 104              		.align	2
 105              		.global	main
 106              		.thumb
 107              		.thumb_func
 108              		.type	main, %function
 109              	main:
 110              	.LFB58:
  95:.\main.c      **** 
  96:.\main.c      **** void main()
  97:.\main.c      **** {
 111              		.loc 1 97 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 82B0     		sub	sp, sp, #8
 121              	.LCFI5:
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI6:
 125              		.cfi_def_cfa_register 7
  98:.\main.c      ****     
  99:.\main.c      ****     /* Enable the global interrupt */
 100:.\main.c      ****     CyGlobalIntEnable;
 126              		.loc 1 100 0
 127              	@ 100 ".\main.c" 1
 128 0006 62B6     		CPSIE   i
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 5


 129              	@ 0 "" 2
 101:.\main.c      ****     
 102:.\main.c      ****     /* 1 - Enable the Interrupt component connected to Timer interrupt */
 103:.\main.c      ****     /* 2 - Start the components */
 104:.\main.c      **** 
 105:.\main.c      ****     Trigger_Timer_Start();
 130              		.loc 1 105 0
 131              		.thumb
 132 0008 FFF7FEFF 		bl	Trigger_Timer_Start
 106:.\main.c      ****     
 107:.\main.c      ****     start_echo_IRR_StartEx(start_echo_IRR_Interrupt);
 133              		.loc 1 107 0
 134 000c 40F20000 		movw	r0, #:lower16:start_echo_IRR_Interrupt
 135 0010 C0F20000 		movt	r0, #:upper16:start_echo_IRR_Interrupt
 136 0014 FFF7FEFF 		bl	start_echo_IRR_StartEx
 108:.\main.c      ****     start_echo_IRR_Start();
 137              		.loc 1 108 0
 138 0018 FFF7FEFF 		bl	start_echo_IRR_Start
 109:.\main.c      ****     
 110:.\main.c      ****     end_echo_IRR_StartEx(end_echo_IRR_Interrupt);
 139              		.loc 1 110 0
 140 001c 40F20000 		movw	r0, #:lower16:end_echo_IRR_Interrupt
 141 0020 C0F20000 		movt	r0, #:upper16:end_echo_IRR_Interrupt
 142 0024 FFF7FEFF 		bl	end_echo_IRR_StartEx
 111:.\main.c      ****     end_echo_IRR_Start();
 143              		.loc 1 111 0
 144 0028 FFF7FEFF 		bl	end_echo_IRR_Start
 112:.\main.c      ****     
 113:.\main.c      ****     /* Start LCD */
 114:.\main.c      ****     LCD_Start();
 145              		.loc 1 114 0
 146 002c FFF7FEFF 		bl	LCD_Start
 115:.\main.c      ****     
 116:.\main.c      ****     uint16  desiredSpeed = INIT_RPM;
 147              		.loc 1 116 0
 148 0030 41F29413 		movw	r3, #4500
 149 0034 FB80     		strh	r3, [r7, #6]	@ movhi
 117:.\main.c      ****     
 118:.\main.c      ****     
 119:.\main.c      ****     /* Globally Enable Interrupts to the CPU Core */
 120:.\main.c      ****     CyGlobalIntEnable;
 150              		.loc 1 120 0
 151              	@ 120 ".\main.c" 1
 152 0036 62B6     		CPSIE   i
 153              	@ 0 "" 2
 121:.\main.c      ****     FanController_Start();
 154              		.loc 1 121 0
 155              		.thumb
 156 0038 FFF7FEFF 		bl	FanController_Start
 122:.\main.c      ****     FanController_SetDesiredSpeed(FAN, desiredSpeed);
 157              		.loc 1 122 0
 158 003c FB88     		ldrh	r3, [r7, #6]
 159 003e 4FF00100 		mov	r0, #1
 160 0042 1946     		mov	r1, r3
 161 0044 FFF7FEFF 		bl	FanController_SetDesiredSpeed
 123:.\main.c      ****     
 124:.\main.c      ****     ADC_DelSig_1_Start();
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 6


 162              		.loc 1 124 0
 163 0048 FFF7FEFF 		bl	ADC_DelSig_1_Start
 125:.\main.c      **** 
 126:.\main.c      ****     /* Start the ADC conversion */
 127:.\main.c      ****     ADC_DelSig_1_StartConvert();
 164              		.loc 1 127 0
 165 004c FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 128:.\main.c      ****     
 129:.\main.c      ****     
 130:.\main.c      ****     // Determine minimum and maximum fan speed and min & max. distance readings
 131:.\main.c      ****     //FanController_SetDesiredSpeed(FAN, desiredSpeed);
 132:.\main.c      ****     
 133:.\main.c      ****     
 134:.\main.c      ****     // Figure out min. duty cycle by increasing fan speed from 0 until the ball begins to move
 135:.\main.c      ****     // Start low for the min. and capture the value at which the ball starts to move.
 136:.\main.c      ****     uint16 currentDuty = MIN_DUTY;
 166              		.loc 1 136 0
 167 0050 4FF03203 		mov	r3, #50
 168 0054 BB80     		strh	r3, [r7, #4]	@ movhi
 137:.\main.c      ****     FanController_SetDesiredSpeed(FAN, MAX_RPM);
 169              		.loc 1 137 0
 170 0056 4FF00100 		mov	r0, #1
 171 005a 42F21C51 		movw	r1, #9500
 172 005e FFF7FEFF 		bl	FanController_SetDesiredSpeed
 138:.\main.c      ****     // Set the fan to min (not spinning)
 139:.\main.c      ****     FanController_SetDutyCycle(FAN, currentDuty);
 173              		.loc 1 139 0
 174 0062 BB88     		ldrh	r3, [r7, #4]
 175 0064 4FF00100 		mov	r0, #1
 176 0068 1946     		mov	r1, r3
 177 006a FFF7FEFF 		bl	FanController_SetDutyCycle
 140:.\main.c      ****     // Wait for the ball to reach the bottom of the tube, and store the distance measured by the se
 141:.\main.c      ****     
 142:.\main.c      ****     LCD_Position(0u, 0u); 
 178              		.loc 1 142 0
 179 006e 4FF00000 		mov	r0, #0
 180 0072 4FF00001 		mov	r1, #0
 181 0076 FFF7FEFF 		bl	LCD_Position
 143:.\main.c      ****     LCD_PrintInt16(max_echo/2);
 182              		.loc 1 143 0
 183 007a 40F20003 		movw	r3, #:lower16:max_echo
 184 007e C0F20003 		movt	r3, #:upper16:max_echo
 185 0082 1B68     		ldr	r3, [r3, #0]
 186 0084 4FEA5303 		lsr	r3, r3, #1
 187 0088 9BB2     		uxth	r3, r3
 188 008a 1846     		mov	r0, r3
 189 008c FFF7FEFF 		bl	LCD_PrintInt16
 190              	.L5:
 144:.\main.c      ****     while (1u) {
 145:.\main.c      ****         // Check current distance compared to current max distance
 146:.\main.c      ****         if (echo > max_echo) {
 191              		.loc 1 146 0
 192 0090 40F20003 		movw	r3, #:lower16:echo
 193 0094 C0F20003 		movt	r3, #:upper16:echo
 194 0098 1A68     		ldr	r2, [r3, #0]
 195 009a 40F20003 		movw	r3, #:lower16:max_echo
 196 009e C0F20003 		movt	r3, #:upper16:max_echo
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 7


 197 00a2 1B68     		ldr	r3, [r3, #0]
 198 00a4 9A42     		cmp	r2, r3
 199 00a6 1FD9     		bls	.L9
 147:.\main.c      ****             max_echo = echo;
 200              		.loc 1 147 0
 201 00a8 40F20003 		movw	r3, #:lower16:echo
 202 00ac C0F20003 		movt	r3, #:upper16:echo
 203 00b0 1A68     		ldr	r2, [r3, #0]
 204 00b2 40F20003 		movw	r3, #:lower16:max_echo
 205 00b6 C0F20003 		movt	r3, #:upper16:max_echo
 206 00ba 1A60     		str	r2, [r3, #0]
 148:.\main.c      ****             LCD_Position(0u, 0u); 
 207              		.loc 1 148 0
 208 00bc 4FF00000 		mov	r0, #0
 209 00c0 4FF00001 		mov	r1, #0
 210 00c4 FFF7FEFF 		bl	LCD_Position
 149:.\main.c      ****             LCD_PrintInt16(max_echo/2);
 211              		.loc 1 149 0
 212 00c8 40F20003 		movw	r3, #:lower16:max_echo
 213 00cc C0F20003 		movt	r3, #:upper16:max_echo
 214 00d0 1B68     		ldr	r3, [r3, #0]
 215 00d2 4FEA5303 		lsr	r3, r3, #1
 216 00d6 9BB2     		uxth	r3, r3
 217 00d8 1846     		mov	r0, r3
 218 00da FFF7FEFF 		bl	LCD_PrintInt16
 150:.\main.c      ****         } else {
 151:.\main.c      ****             break;
 152:.\main.c      ****         }
 153:.\main.c      ****         CyDelay(1000u);
 219              		.loc 1 153 0
 220 00de 4FF47A70 		mov	r0, #1000
 221 00e2 FFF7FEFF 		bl	CyDelay
 154:.\main.c      ****     }
 222              		.loc 1 154 0
 223 00e6 D3E7     		b	.L5
 224              	.L9:
 151:.\main.c      ****             break;
 225              		.loc 1 151 0
 226 00e8 00BF     		nop
 227              	.L8:
 155:.\main.c      ****     
 156:.\main.c      ****     while(1u) {
 157:.\main.c      ****         LCD_Position(1u, 0u);
 228              		.loc 1 157 0
 229 00ea 4FF00100 		mov	r0, #1
 230 00ee 4FF00001 		mov	r1, #0
 231 00f2 FFF7FEFF 		bl	LCD_Position
 158:.\main.c      ****         if (echo > max_echo ) {
 232              		.loc 1 158 0
 233 00f6 40F20003 		movw	r3, #:lower16:echo
 234 00fa C0F20003 		movt	r3, #:upper16:echo
 235 00fe 1A68     		ldr	r2, [r3, #0]
 236 0100 40F20003 		movw	r3, #:lower16:max_echo
 237 0104 C0F20003 		movt	r3, #:upper16:max_echo
 238 0108 1B68     		ldr	r3, [r3, #0]
 239 010a 9A42     		cmp	r2, r3
 240 010c 04D9     		bls	.L6
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 8


 159:.\main.c      ****             LCD_PrintInt8(1u);
 241              		.loc 1 159 0
 242 010e 4FF00100 		mov	r0, #1
 243 0112 FFF7FEFF 		bl	LCD_PrintInt8
 160:.\main.c      ****         } else {
 161:.\main.c      ****             LCD_PrintInt8(0u);
 162:.\main.c      ****         }
 163:.\main.c      ****     }
 244              		.loc 1 163 0
 245 0116 E8E7     		b	.L8
 246              	.L6:
 161:.\main.c      ****             LCD_PrintInt8(0u);
 247              		.loc 1 161 0
 248 0118 4FF00000 		mov	r0, #0
 249 011c FFF7FEFF 		bl	LCD_PrintInt8
 250              		.loc 1 163 0
 251 0120 E3E7     		b	.L8
 252              		.cfi_endproc
 253              	.LFE58:
 254              		.size	main, .-main
 255 0122 00BF     		.text
 256              	.Letext0:
 257              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 258              		.file 3 "./Generated_Source/PSoC5/cytypes.h"
 259              		.file 4 "./Generated_Source/PSoC5/core_cm3.h"
 260              		.section	.debug_info,"",%progbits
 261              	.Ldebug_info0:
 262 0000 6A010000 		.4byte	0x16a
 263 0004 0200     		.2byte	0x2
 264 0006 00000000 		.4byte	.Ldebug_abbrev0
 265 000a 04       		.byte	0x4
 266 000b 01       		.uleb128 0x1
 267 000c 8F010000 		.4byte	.LASF25
 268 0010 01       		.byte	0x1
 269 0011 B2000000 		.4byte	.LASF26
 270 0015 09000000 		.4byte	.LASF27
 271 0019 00000000 		.4byte	.Ldebug_ranges0+0
 272 001d 00000000 		.4byte	0
 273 0021 00000000 		.4byte	0
 274 0025 00000000 		.4byte	.Ldebug_line0
 275 0029 02       		.uleb128 0x2
 276 002a 01       		.byte	0x1
 277 002b 06       		.byte	0x6
 278 002c E1010000 		.4byte	.LASF0
 279 0030 02       		.uleb128 0x2
 280 0031 01       		.byte	0x1
 281 0032 08       		.byte	0x8
 282 0033 A4000000 		.4byte	.LASF1
 283 0037 02       		.uleb128 0x2
 284 0038 02       		.byte	0x2
 285 0039 05       		.byte	0x5
 286 003a 7F010000 		.4byte	.LASF2
 287 003e 02       		.uleb128 0x2
 288 003f 02       		.byte	0x2
 289 0040 07       		.byte	0x7
 290 0041 CD000000 		.4byte	.LASF3
 291 0045 03       		.uleb128 0x3
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 9


 292 0046 5B010000 		.4byte	.LASF9
 293 004a 02       		.byte	0x2
 294 004b 4F       		.byte	0x4f
 295 004c 50000000 		.4byte	0x50
 296 0050 02       		.uleb128 0x2
 297 0051 04       		.byte	0x4
 298 0052 05       		.byte	0x5
 299 0053 D8010000 		.4byte	.LASF4
 300 0057 02       		.uleb128 0x2
 301 0058 04       		.byte	0x4
 302 0059 07       		.byte	0x7
 303 005a BB000000 		.4byte	.LASF5
 304 005e 02       		.uleb128 0x2
 305 005f 08       		.byte	0x8
 306 0060 05       		.byte	0x5
 307 0061 6C010000 		.4byte	.LASF6
 308 0065 02       		.uleb128 0x2
 309 0066 08       		.byte	0x8
 310 0067 07       		.byte	0x7
 311 0068 44010000 		.4byte	.LASF7
 312 006c 04       		.uleb128 0x4
 313 006d 04       		.byte	0x4
 314 006e 05       		.byte	0x5
 315 006f 696E7400 		.ascii	"int\000"
 316 0073 02       		.uleb128 0x2
 317 0074 04       		.byte	0x4
 318 0075 07       		.byte	0x7
 319 0076 37010000 		.4byte	.LASF8
 320 007a 03       		.uleb128 0x3
 321 007b 89010000 		.4byte	.LASF10
 322 007f 03       		.byte	0x3
 323 0080 5B       		.byte	0x5b
 324 0081 30000000 		.4byte	0x30
 325 0085 03       		.uleb128 0x3
 326 0086 29010000 		.4byte	.LASF11
 327 008a 03       		.byte	0x3
 328 008b 5C       		.byte	0x5c
 329 008c 3E000000 		.4byte	0x3e
 330 0090 03       		.uleb128 0x3
 331 0091 30010000 		.4byte	.LASF12
 332 0095 03       		.byte	0x3
 333 0096 5D       		.byte	0x5d
 334 0097 57000000 		.4byte	0x57
 335 009b 02       		.uleb128 0x2
 336 009c 04       		.byte	0x4
 337 009d 04       		.byte	0x4
 338 009e 91000000 		.4byte	.LASF13
 339 00a2 02       		.uleb128 0x2
 340 00a3 08       		.byte	0x8
 341 00a4 04       		.byte	0x4
 342 00a5 06010000 		.4byte	.LASF14
 343 00a9 02       		.uleb128 0x2
 344 00aa 01       		.byte	0x1
 345 00ab 08       		.byte	0x8
 346 00ac 7A010000 		.4byte	.LASF15
 347 00b0 02       		.uleb128 0x2
 348 00b1 04       		.byte	0x4
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 10


 349 00b2 07       		.byte	0x7
 350 00b3 63010000 		.4byte	.LASF16
 351 00b7 05       		.uleb128 0x5
 352 00b8 01       		.byte	0x1
 353 00b9 E0000000 		.4byte	.LASF17
 354 00bd 01       		.byte	0x1
 355 00be 4D       		.byte	0x4d
 356 00bf 01       		.byte	0x1
 357 00c0 00000000 		.4byte	.LFB56
 358 00c4 16000000 		.4byte	.LFE56
 359 00c8 00000000 		.4byte	.LLST0
 360 00cc 01       		.byte	0x1
 361 00cd 05       		.uleb128 0x5
 362 00ce 01       		.byte	0x1
 363 00cf 12010000 		.4byte	.LASF18
 364 00d3 01       		.byte	0x1
 365 00d4 57       		.byte	0x57
 366 00d5 01       		.byte	0x1
 367 00d6 00000000 		.4byte	.LFB57
 368 00da 1E000000 		.4byte	.LFE57
 369 00de 2C000000 		.4byte	.LLST1
 370 00e2 01       		.byte	0x1
 371 00e3 06       		.uleb128 0x6
 372 00e4 01       		.byte	0x1
 373 00e5 0D010000 		.4byte	.LASF28
 374 00e9 01       		.byte	0x1
 375 00ea 60       		.byte	0x60
 376 00eb 00000000 		.4byte	.LFB58
 377 00ef 22010000 		.4byte	.LFE58
 378 00f3 58000000 		.4byte	.LLST2
 379 00f7 01       		.byte	0x1
 380 00f8 24010000 		.4byte	0x124
 381 00fc 07       		.uleb128 0x7
 382 00fd 97000000 		.4byte	.LASF19
 383 0101 01       		.byte	0x1
 384 0102 74       		.byte	0x74
 385 0103 85000000 		.4byte	0x85
 386 0107 02       		.byte	0x2
 387 0108 91       		.byte	0x91
 388 0109 76       		.sleb128 -10
 389 010a 07       		.uleb128 0x7
 390 010b 78000000 		.4byte	.LASF20
 391 010f 01       		.byte	0x1
 392 0110 88       		.byte	0x88
 393 0111 85000000 		.4byte	0x85
 394 0115 02       		.byte	0x2
 395 0116 91       		.byte	0x91
 396 0117 74       		.sleb128 -12
 397 0118 08       		.uleb128 0x8
 398 0119 00000000 		.4byte	.LASF29
 399 011d 01       		.byte	0x1
 400 011e A6       		.byte	0xa6
 401 011f 85000000 		.4byte	0x85
 402 0123 00       		.byte	0
 403 0124 09       		.uleb128 0x9
 404 0125 F9000000 		.4byte	.LASF21
 405 0129 04       		.byte	0x4
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 11


 406 012a 1606     		.2byte	0x616
 407 012c 32010000 		.4byte	0x132
 408 0130 01       		.byte	0x1
 409 0131 01       		.byte	0x1
 410 0132 0A       		.uleb128 0xa
 411 0133 45000000 		.4byte	0x45
 412 0137 0B       		.uleb128 0xb
 413 0138 84000000 		.4byte	.LASF22
 414 013c 01       		.byte	0x1
 415 013d 49       		.byte	0x49
 416 013e 7A000000 		.4byte	0x7a
 417 0142 01       		.byte	0x1
 418 0143 05       		.byte	0x5
 419 0144 03       		.byte	0x3
 420 0145 00000000 		.4byte	InterruptCnt
 421 0149 0B       		.uleb128 0xb
 422 014a ED010000 		.4byte	.LASF23
 423 014e 01       		.byte	0x1
 424 014f 4A       		.byte	0x4a
 425 0150 90000000 		.4byte	0x90
 426 0154 01       		.byte	0x1
 427 0155 05       		.byte	0x5
 428 0156 03       		.byte	0x3
 429 0157 00000000 		.4byte	echo
 430 015b 0B       		.uleb128 0xb
 431 015c 6F000000 		.4byte	.LASF24
 432 0160 01       		.byte	0x1
 433 0161 4B       		.byte	0x4b
 434 0162 90000000 		.4byte	0x90
 435 0166 01       		.byte	0x1
 436 0167 05       		.byte	0x5
 437 0168 03       		.byte	0x3
 438 0169 00000000 		.4byte	max_echo
 439 016d 00       		.byte	0
 440              		.section	.debug_abbrev,"",%progbits
 441              	.Ldebug_abbrev0:
 442 0000 01       		.uleb128 0x1
 443 0001 11       		.uleb128 0x11
 444 0002 01       		.byte	0x1
 445 0003 25       		.uleb128 0x25
 446 0004 0E       		.uleb128 0xe
 447 0005 13       		.uleb128 0x13
 448 0006 0B       		.uleb128 0xb
 449 0007 03       		.uleb128 0x3
 450 0008 0E       		.uleb128 0xe
 451 0009 1B       		.uleb128 0x1b
 452 000a 0E       		.uleb128 0xe
 453 000b 55       		.uleb128 0x55
 454 000c 06       		.uleb128 0x6
 455 000d 11       		.uleb128 0x11
 456 000e 01       		.uleb128 0x1
 457 000f 52       		.uleb128 0x52
 458 0010 01       		.uleb128 0x1
 459 0011 10       		.uleb128 0x10
 460 0012 06       		.uleb128 0x6
 461 0013 00       		.byte	0
 462 0014 00       		.byte	0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 12


 463 0015 02       		.uleb128 0x2
 464 0016 24       		.uleb128 0x24
 465 0017 00       		.byte	0
 466 0018 0B       		.uleb128 0xb
 467 0019 0B       		.uleb128 0xb
 468 001a 3E       		.uleb128 0x3e
 469 001b 0B       		.uleb128 0xb
 470 001c 03       		.uleb128 0x3
 471 001d 0E       		.uleb128 0xe
 472 001e 00       		.byte	0
 473 001f 00       		.byte	0
 474 0020 03       		.uleb128 0x3
 475 0021 16       		.uleb128 0x16
 476 0022 00       		.byte	0
 477 0023 03       		.uleb128 0x3
 478 0024 0E       		.uleb128 0xe
 479 0025 3A       		.uleb128 0x3a
 480 0026 0B       		.uleb128 0xb
 481 0027 3B       		.uleb128 0x3b
 482 0028 0B       		.uleb128 0xb
 483 0029 49       		.uleb128 0x49
 484 002a 13       		.uleb128 0x13
 485 002b 00       		.byte	0
 486 002c 00       		.byte	0
 487 002d 04       		.uleb128 0x4
 488 002e 24       		.uleb128 0x24
 489 002f 00       		.byte	0
 490 0030 0B       		.uleb128 0xb
 491 0031 0B       		.uleb128 0xb
 492 0032 3E       		.uleb128 0x3e
 493 0033 0B       		.uleb128 0xb
 494 0034 03       		.uleb128 0x3
 495 0035 08       		.uleb128 0x8
 496 0036 00       		.byte	0
 497 0037 00       		.byte	0
 498 0038 05       		.uleb128 0x5
 499 0039 2E       		.uleb128 0x2e
 500 003a 00       		.byte	0
 501 003b 3F       		.uleb128 0x3f
 502 003c 0C       		.uleb128 0xc
 503 003d 03       		.uleb128 0x3
 504 003e 0E       		.uleb128 0xe
 505 003f 3A       		.uleb128 0x3a
 506 0040 0B       		.uleb128 0xb
 507 0041 3B       		.uleb128 0x3b
 508 0042 0B       		.uleb128 0xb
 509 0043 27       		.uleb128 0x27
 510 0044 0C       		.uleb128 0xc
 511 0045 11       		.uleb128 0x11
 512 0046 01       		.uleb128 0x1
 513 0047 12       		.uleb128 0x12
 514 0048 01       		.uleb128 0x1
 515 0049 40       		.uleb128 0x40
 516 004a 06       		.uleb128 0x6
 517 004b 9642     		.uleb128 0x2116
 518 004d 0C       		.uleb128 0xc
 519 004e 00       		.byte	0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 13


 520 004f 00       		.byte	0
 521 0050 06       		.uleb128 0x6
 522 0051 2E       		.uleb128 0x2e
 523 0052 01       		.byte	0x1
 524 0053 3F       		.uleb128 0x3f
 525 0054 0C       		.uleb128 0xc
 526 0055 03       		.uleb128 0x3
 527 0056 0E       		.uleb128 0xe
 528 0057 3A       		.uleb128 0x3a
 529 0058 0B       		.uleb128 0xb
 530 0059 3B       		.uleb128 0x3b
 531 005a 0B       		.uleb128 0xb
 532 005b 11       		.uleb128 0x11
 533 005c 01       		.uleb128 0x1
 534 005d 12       		.uleb128 0x12
 535 005e 01       		.uleb128 0x1
 536 005f 40       		.uleb128 0x40
 537 0060 06       		.uleb128 0x6
 538 0061 9642     		.uleb128 0x2116
 539 0063 0C       		.uleb128 0xc
 540 0064 01       		.uleb128 0x1
 541 0065 13       		.uleb128 0x13
 542 0066 00       		.byte	0
 543 0067 00       		.byte	0
 544 0068 07       		.uleb128 0x7
 545 0069 34       		.uleb128 0x34
 546 006a 00       		.byte	0
 547 006b 03       		.uleb128 0x3
 548 006c 0E       		.uleb128 0xe
 549 006d 3A       		.uleb128 0x3a
 550 006e 0B       		.uleb128 0xb
 551 006f 3B       		.uleb128 0x3b
 552 0070 0B       		.uleb128 0xb
 553 0071 49       		.uleb128 0x49
 554 0072 13       		.uleb128 0x13
 555 0073 02       		.uleb128 0x2
 556 0074 0A       		.uleb128 0xa
 557 0075 00       		.byte	0
 558 0076 00       		.byte	0
 559 0077 08       		.uleb128 0x8
 560 0078 34       		.uleb128 0x34
 561 0079 00       		.byte	0
 562 007a 03       		.uleb128 0x3
 563 007b 0E       		.uleb128 0xe
 564 007c 3A       		.uleb128 0x3a
 565 007d 0B       		.uleb128 0xb
 566 007e 3B       		.uleb128 0x3b
 567 007f 0B       		.uleb128 0xb
 568 0080 49       		.uleb128 0x49
 569 0081 13       		.uleb128 0x13
 570 0082 00       		.byte	0
 571 0083 00       		.byte	0
 572 0084 09       		.uleb128 0x9
 573 0085 34       		.uleb128 0x34
 574 0086 00       		.byte	0
 575 0087 03       		.uleb128 0x3
 576 0088 0E       		.uleb128 0xe
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 14


 577 0089 3A       		.uleb128 0x3a
 578 008a 0B       		.uleb128 0xb
 579 008b 3B       		.uleb128 0x3b
 580 008c 05       		.uleb128 0x5
 581 008d 49       		.uleb128 0x49
 582 008e 13       		.uleb128 0x13
 583 008f 3F       		.uleb128 0x3f
 584 0090 0C       		.uleb128 0xc
 585 0091 3C       		.uleb128 0x3c
 586 0092 0C       		.uleb128 0xc
 587 0093 00       		.byte	0
 588 0094 00       		.byte	0
 589 0095 0A       		.uleb128 0xa
 590 0096 35       		.uleb128 0x35
 591 0097 00       		.byte	0
 592 0098 49       		.uleb128 0x49
 593 0099 13       		.uleb128 0x13
 594 009a 00       		.byte	0
 595 009b 00       		.byte	0
 596 009c 0B       		.uleb128 0xb
 597 009d 34       		.uleb128 0x34
 598 009e 00       		.byte	0
 599 009f 03       		.uleb128 0x3
 600 00a0 0E       		.uleb128 0xe
 601 00a1 3A       		.uleb128 0x3a
 602 00a2 0B       		.uleb128 0xb
 603 00a3 3B       		.uleb128 0x3b
 604 00a4 0B       		.uleb128 0xb
 605 00a5 49       		.uleb128 0x49
 606 00a6 13       		.uleb128 0x13
 607 00a7 3F       		.uleb128 0x3f
 608 00a8 0C       		.uleb128 0xc
 609 00a9 02       		.uleb128 0x2
 610 00aa 0A       		.uleb128 0xa
 611 00ab 00       		.byte	0
 612 00ac 00       		.byte	0
 613 00ad 00       		.byte	0
 614              		.section	.debug_loc,"",%progbits
 615              	.Ldebug_loc0:
 616              	.LLST0:
 617 0000 00000000 		.4byte	.LFB56
 618 0004 02000000 		.4byte	.LCFI0
 619 0008 0200     		.2byte	0x2
 620 000a 7D       		.byte	0x7d
 621 000b 00       		.sleb128 0
 622 000c 02000000 		.4byte	.LCFI0
 623 0010 04000000 		.4byte	.LCFI1
 624 0014 0200     		.2byte	0x2
 625 0016 7D       		.byte	0x7d
 626 0017 08       		.sleb128 8
 627 0018 04000000 		.4byte	.LCFI1
 628 001c 16000000 		.4byte	.LFE56
 629 0020 0200     		.2byte	0x2
 630 0022 77       		.byte	0x77
 631 0023 08       		.sleb128 8
 632 0024 00000000 		.4byte	0
 633 0028 00000000 		.4byte	0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 15


 634              	.LLST1:
 635 002c 00000000 		.4byte	.LFB57
 636 0030 02000000 		.4byte	.LCFI2
 637 0034 0200     		.2byte	0x2
 638 0036 7D       		.byte	0x7d
 639 0037 00       		.sleb128 0
 640 0038 02000000 		.4byte	.LCFI2
 641 003c 04000000 		.4byte	.LCFI3
 642 0040 0200     		.2byte	0x2
 643 0042 7D       		.byte	0x7d
 644 0043 08       		.sleb128 8
 645 0044 04000000 		.4byte	.LCFI3
 646 0048 1E000000 		.4byte	.LFE57
 647 004c 0200     		.2byte	0x2
 648 004e 77       		.byte	0x77
 649 004f 08       		.sleb128 8
 650 0050 00000000 		.4byte	0
 651 0054 00000000 		.4byte	0
 652              	.LLST2:
 653 0058 00000000 		.4byte	.LFB58
 654 005c 02000000 		.4byte	.LCFI4
 655 0060 0200     		.2byte	0x2
 656 0062 7D       		.byte	0x7d
 657 0063 00       		.sleb128 0
 658 0064 02000000 		.4byte	.LCFI4
 659 0068 04000000 		.4byte	.LCFI5
 660 006c 0200     		.2byte	0x2
 661 006e 7D       		.byte	0x7d
 662 006f 08       		.sleb128 8
 663 0070 04000000 		.4byte	.LCFI5
 664 0074 06000000 		.4byte	.LCFI6
 665 0078 0200     		.2byte	0x2
 666 007a 7D       		.byte	0x7d
 667 007b 10       		.sleb128 16
 668 007c 06000000 		.4byte	.LCFI6
 669 0080 22010000 		.4byte	.LFE58
 670 0084 0200     		.2byte	0x2
 671 0086 77       		.byte	0x77
 672 0087 10       		.sleb128 16
 673 0088 00000000 		.4byte	0
 674 008c 00000000 		.4byte	0
 675              		.section	.debug_aranges,"",%progbits
 676 0000 2C000000 		.4byte	0x2c
 677 0004 0200     		.2byte	0x2
 678 0006 00000000 		.4byte	.Ldebug_info0
 679 000a 04       		.byte	0x4
 680 000b 00       		.byte	0
 681 000c 0000     		.2byte	0
 682 000e 0000     		.2byte	0
 683 0010 00000000 		.4byte	.LFB56
 684 0014 16000000 		.4byte	.LFE56-.LFB56
 685 0018 00000000 		.4byte	.LFB57
 686 001c 1E000000 		.4byte	.LFE57-.LFB57
 687 0020 00000000 		.4byte	.LFB58
 688 0024 22010000 		.4byte	.LFE58-.LFB58
 689 0028 00000000 		.4byte	0
 690 002c 00000000 		.4byte	0
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 16


 691              		.section	.debug_ranges,"",%progbits
 692              	.Ldebug_ranges0:
 693 0000 00000000 		.4byte	.LFB56
 694 0004 16000000 		.4byte	.LFE56
 695 0008 00000000 		.4byte	.LFB57
 696 000c 1E000000 		.4byte	.LFE57
 697 0010 00000000 		.4byte	.LFB58
 698 0014 22010000 		.4byte	.LFE58
 699 0018 00000000 		.4byte	0
 700 001c 00000000 		.4byte	0
 701              		.section	.debug_line,"",%progbits
 702              	.Ldebug_line0:
 703 0000 59010000 		.section	.debug_str,"MS",%progbits,1
 703      0200F900 
 703      00000201 
 703      FB0E0D00 
 703      01010101 
 704              	.LASF29:
 705 0000 6D696E5F 		.ascii	"min_duty\000"
 705      64757479 
 705      00
 706              	.LASF27:
 707 0009 5C5C6D69 		.ascii	"\\\\mightor\\home\\spring2013\\gmh5970\\Documents\\"
 707      6768746F 
 707      725C686F 
 707      6D655C73 
 707      7072696E 
 708 0035 50536F43 		.ascii	"PSoC Creator\\Fan_And_Potentiometer\\FW_Fan_Control"
 708      20437265 
 708      61746F72 
 708      5C46616E 
 708      5F416E64 
 709 0066 30312E63 		.ascii	"01.cydsn\000"
 709      7964736E 
 709      00
 710              	.LASF24:
 711 006f 6D61785F 		.ascii	"max_echo\000"
 711      6563686F 
 711      00
 712              	.LASF20:
 713 0078 63757272 		.ascii	"currentDuty\000"
 713      656E7444 
 713      75747900 
 714              	.LASF22:
 715 0084 496E7465 		.ascii	"InterruptCnt\000"
 715      72727570 
 715      74436E74 
 715      00
 716              	.LASF13:
 717 0091 666C6F61 		.ascii	"float\000"
 717      7400
 718              	.LASF19:
 719 0097 64657369 		.ascii	"desiredSpeed\000"
 719      72656453 
 719      70656564 
 719      00
 720              	.LASF1:
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 17


 721 00a4 756E7369 		.ascii	"unsigned char\000"
 721      676E6564 
 721      20636861 
 721      7200
 722              	.LASF26:
 723 00b2 2E5C6D61 		.ascii	".\\main.c\000"
 723      696E2E63 
 723      00
 724              	.LASF5:
 725 00bb 6C6F6E67 		.ascii	"long unsigned int\000"
 725      20756E73 
 725      69676E65 
 725      6420696E 
 725      7400
 726              	.LASF3:
 727 00cd 73686F72 		.ascii	"short unsigned int\000"
 727      7420756E 
 727      7369676E 
 727      65642069 
 727      6E7400
 728              	.LASF17:
 729 00e0 73746172 		.ascii	"start_echo_IRR_Interrupt\000"
 729      745F6563 
 729      686F5F49 
 729      52525F49 
 729      6E746572 
 730              	.LASF21:
 731 00f9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 731      52784275 
 731      66666572 
 731      00
 732              	.LASF14:
 733 0106 646F7562 		.ascii	"double\000"
 733      6C6500
 734              	.LASF28:
 735 010d 6D61696E 		.ascii	"main\000"
 735      00
 736              	.LASF18:
 737 0112 656E645F 		.ascii	"end_echo_IRR_Interrupt\000"
 737      6563686F 
 737      5F495252 
 737      5F496E74 
 737      65727275 
 738              	.LASF11:
 739 0129 75696E74 		.ascii	"uint16\000"
 739      313600
 740              	.LASF12:
 741 0130 75696E74 		.ascii	"uint32\000"
 741      333200
 742              	.LASF8:
 743 0137 756E7369 		.ascii	"unsigned int\000"
 743      676E6564 
 743      20696E74 
 743      00
 744              	.LASF7:
 745 0144 6C6F6E67 		.ascii	"long long unsigned int\000"
 745      206C6F6E 
ARM GAS  C:\Users\gmh5970\AppData\Local\Temp\ccDXzp5I.s 			page 18


 745      6720756E 
 745      7369676E 
 745      65642069 
 746              	.LASF9:
 747 015b 696E7433 		.ascii	"int32_t\000"
 747      325F7400 
 748              	.LASF16:
 749 0163 73697A65 		.ascii	"sizetype\000"
 749      74797065 
 749      00
 750              	.LASF6:
 751 016c 6C6F6E67 		.ascii	"long long int\000"
 751      206C6F6E 
 751      6720696E 
 751      7400
 752              	.LASF15:
 753 017a 63686172 		.ascii	"char\000"
 753      00
 754              	.LASF2:
 755 017f 73686F72 		.ascii	"short int\000"
 755      7420696E 
 755      7400
 756              	.LASF10:
 757 0189 75696E74 		.ascii	"uint8\000"
 757      3800
 758              	.LASF25:
 759 018f 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 759      4320342E 
 759      372E3320 
 759      32303133 
 759      30333132 
 760 01c2 616E6368 		.ascii	"anch revision 196615]\000"
 760      20726576 
 760      6973696F 
 760      6E203139 
 760      36363135 
 761              	.LASF4:
 762 01d8 6C6F6E67 		.ascii	"long int\000"
 762      20696E74 
 762      00
 763              	.LASF0:
 764 01e1 7369676E 		.ascii	"signed char\000"
 764      65642063 
 764      68617200 
 765              	.LASF23:
 766 01ed 6563686F 		.ascii	"echo\000"
 766      00
 767              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
