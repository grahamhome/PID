ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"end_echo_IRR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.end_echo_IRR_Start,"ax",%progbits
  19              		.align	2
  20              		.global	end_echo_IRR_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	end_echo_IRR_Start, %function
  24              	end_echo_IRR_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\end_echo_IRR.c"
   1:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/end_echo_IRR.c **** * File Name: end_echo_IRR.c  
   3:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Version 1.70
   4:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
   5:.\Generated_Source\PSoC5/end_echo_IRR.c **** *  Description:
   6:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   API for controlling the state of an interrupt.
   7:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
   8:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
   9:.\Generated_Source\PSoC5/end_echo_IRR.c **** *  Note:
  10:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  11:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/end_echo_IRR.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:.\Generated_Source\PSoC5/end_echo_IRR.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:.\Generated_Source\PSoC5/end_echo_IRR.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  18:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  19:.\Generated_Source\PSoC5/end_echo_IRR.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC5/end_echo_IRR.c **** #include <CyLib.h>
  21:.\Generated_Source\PSoC5/end_echo_IRR.c **** #include <end_echo_IRR.h>
  22:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  23:.\Generated_Source\PSoC5/end_echo_IRR.c **** #if !defined(end_echo_IRR__REMOVED) /* Check for removal by optimization */
  24:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  25:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC5/end_echo_IRR.c **** *  Place your includes, defines and code here 
  27:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************/
  28:.\Generated_Source\PSoC5/end_echo_IRR.c **** /* `#START end_echo_IRR_intc` */
  29:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  30:.\Generated_Source\PSoC5/end_echo_IRR.c **** /* `#END` */
  31:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 2


  32:.\Generated_Source\PSoC5/end_echo_IRR.c **** #ifndef CYINT_IRQ_BASE
  33:.\Generated_Source\PSoC5/end_echo_IRR.c **** #define CYINT_IRQ_BASE      16
  34:.\Generated_Source\PSoC5/end_echo_IRR.c **** #endif /* CYINT_IRQ_BASE */
  35:.\Generated_Source\PSoC5/end_echo_IRR.c **** #ifndef CYINT_VECT_TABLE
  36:.\Generated_Source\PSoC5/end_echo_IRR.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  37:.\Generated_Source\PSoC5/end_echo_IRR.c **** #endif /* CYINT_VECT_TABLE */
  38:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  39:.\Generated_Source\PSoC5/end_echo_IRR.c **** /* Declared in startup, used to set unused interrupts to. */
  40:.\Generated_Source\PSoC5/end_echo_IRR.c **** CY_ISR_PROTO(IntDefaultHandler);
  41:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  42:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  43:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_Start
  45:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
  46:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  47:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
  48:.\Generated_Source\PSoC5/end_echo_IRR.c **** *  Set up the interrupt and enable it.
  49:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  50:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:  
  51:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
  52:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  53:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
  54:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
  55:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  56:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
  57:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_Start(void)
  58:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
  27              		.loc 1 58 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  59:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* For all we know the interrupt is active. */
  60:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_Disable();
  39              		.loc 1 60 0
  40 0004 FFF7FEFF 		bl	end_echo_IRR_Disable
  61:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  62:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Set the ISR to point to the end_echo_IRR Interrupt. */
  63:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_SetVector(&end_echo_IRR_Interrupt);
  41              		.loc 1 63 0
  42 0008 40F20000 		movw	r0, #:lower16:end_echo_IRR_Interrupt
  43 000c C0F20000 		movt	r0, #:upper16:end_echo_IRR_Interrupt
  44 0010 FFF7FEFF 		bl	end_echo_IRR_SetVector
  64:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  65:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Set the priority. */
  66:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_SetPriority((uint8)end_echo_IRR_INTC_PRIOR_NUMBER);
  45              		.loc 1 66 0
  46 0014 4FF00700 		mov	r0, #7
  47 0018 FFF7FEFF 		bl	end_echo_IRR_SetPriority
  67:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 3


  68:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Enable it. */
  69:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_Enable();
  48              		.loc 1 69 0
  49 001c FFF7FEFF 		bl	end_echo_IRR_Enable
  70:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
  50              		.loc 1 70 0
  51 0020 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	end_echo_IRR_Start, .-end_echo_IRR_Start
  55 0022 00BF     		.section	.text.end_echo_IRR_StartEx,"ax",%progbits
  56              		.align	2
  57              		.global	end_echo_IRR_StartEx
  58              		.thumb
  59              		.thumb_func
  60              		.type	end_echo_IRR_StartEx, %function
  61              	end_echo_IRR_StartEx:
  62              	.LFB1:
  71:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  72:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  73:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_StartEx
  75:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
  76:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  77:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
  78:.\Generated_Source\PSoC5/end_echo_IRR.c **** *  Set up the interrupt and enable it.
  79:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  80:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:  
  81:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   address: Address of the ISR to set in the interrupt vector table.
  82:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  83:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
  84:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
  85:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
  86:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
  87:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_StartEx(cyisraddress address)
  88:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
  63              		.loc 1 88 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 80B5     		push	{r7, lr}
  68              	.LCFI2:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 16
  75 0004 00AF     		add	r7, sp, #0
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
  89:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* For all we know the interrupt is active. */
  90:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_Disable();
  79              		.loc 1 90 0
  80 0008 FFF7FEFF 		bl	end_echo_IRR_Disable
  91:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 4


  92:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Set the ISR to point to the end_echo_IRR Interrupt. */
  93:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_SetVector(address);
  81              		.loc 1 93 0
  82 000c 7868     		ldr	r0, [r7, #4]
  83 000e FFF7FEFF 		bl	end_echo_IRR_SetVector
  94:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  95:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Set the priority. */
  96:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_SetPriority((uint8)end_echo_IRR_INTC_PRIOR_NUMBER);
  84              		.loc 1 96 0
  85 0012 4FF00700 		mov	r0, #7
  86 0016 FFF7FEFF 		bl	end_echo_IRR_SetPriority
  97:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
  98:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Enable it. */
  99:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_Enable();
  87              		.loc 1 99 0
  88 001a FFF7FEFF 		bl	end_echo_IRR_Enable
 100:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
  89              		.loc 1 100 0
  90 001e 07F10807 		add	r7, r7, #8
  91 0022 BD46     		mov	sp, r7
  92 0024 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	end_echo_IRR_StartEx, .-end_echo_IRR_StartEx
  96 0026 00BF     		.section	.text.end_echo_IRR_Stop,"ax",%progbits
  97              		.align	2
  98              		.global	end_echo_IRR_Stop
  99              		.thumb
 100              		.thumb_func
 101              		.type	end_echo_IRR_Stop, %function
 102              	end_echo_IRR_Stop:
 103              	.LFB2:
 101:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 102:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 103:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_Stop
 105:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 106:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 107:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 108:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Disables and removes the interrupt.
 109:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 110:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:  
 111:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 112:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 113:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 114:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 115:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 116:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_Stop(void)
 117:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 104              		.loc 1 117 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              	.LCFI5:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 5


 112              		.cfi_offset 14, -4
 113 0002 00AF     		add	r7, sp, #0
 114              	.LCFI6:
 115              		.cfi_def_cfa_register 7
 118:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Disable this interrupt. */
 119:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_Disable();
 116              		.loc 1 119 0
 117 0004 FFF7FEFF 		bl	end_echo_IRR_Disable
 120:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 121:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Set the ISR to point to the passive one. */
 122:.\Generated_Source\PSoC5/end_echo_IRR.c ****     end_echo_IRR_SetVector(&IntDefaultHandler);
 118              		.loc 1 122 0
 119 0008 40F20000 		movw	r0, #:lower16:IntDefaultHandler
 120 000c C0F20000 		movt	r0, #:upper16:IntDefaultHandler
 121 0010 FFF7FEFF 		bl	end_echo_IRR_SetVector
 123:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 122              		.loc 1 123 0
 123 0014 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	end_echo_IRR_Stop, .-end_echo_IRR_Stop
 127 0016 00BF     		.section	.text.end_echo_IRR_SetVector,"ax",%progbits
 128              		.align	2
 129              		.global	end_echo_IRR_SetVector
 130              		.thumb
 131              		.thumb_func
 132              		.type	end_echo_IRR_SetVector, %function
 133              	end_echo_IRR_SetVector:
 134              	.LFB3:
 124:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 125:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 126:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_Interrupt
 128:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 129:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 130:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 131:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   The default Interrupt Service Routine for end_echo_IRR.
 132:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 133:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Add custom code between the coments to keep the next version of this file
 134:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   from over writting your code.
 135:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 136:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:  
 137:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 138:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 139:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 140:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 141:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 143:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 144:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 145:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_SetVector
 146:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 147:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 148:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 149:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Change the ISR vector for the Interrupt. Note calling end_echo_IRR_Start
 150:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   will override any effect this method would have had. To set the vector 
 151:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   before the component has been started use end_echo_IRR_StartEx instead.
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 6


 152:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 153:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 154:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 155:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 156:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 157:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 158:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 159:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 160:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_SetVector(cyisraddress address)
 161:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 135              		.loc 1 161 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140 0000 80B4     		push	{r7}
 141              	.LCFI7:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 0002 85B0     		sub	sp, sp, #20
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 24
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI9:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
 162:.\Generated_Source\PSoC5/end_echo_IRR.c ****     cyisraddress * ramVectorTable;
 163:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 164:.\Generated_Source\PSoC5/end_echo_IRR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 151              		.loc 1 164 0
 152 0008 4EF60853 		movw	r3, #60680
 153 000c CEF20003 		movt	r3, 57344
 154 0010 1B68     		ldr	r3, [r3, #0]
 155 0012 FB60     		str	r3, [r7, #12]
 165:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 166:.\Generated_Source\PSoC5/end_echo_IRR.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)end_echo_IRR__INTC_NUMBER] = address;
 156              		.loc 1 166 0
 157 0014 FB68     		ldr	r3, [r7, #12]
 158 0016 03F14003 		add	r3, r3, #64
 159 001a 7A68     		ldr	r2, [r7, #4]
 160 001c 1A60     		str	r2, [r3, #0]
 167:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 161              		.loc 1 167 0
 162 001e 07F11407 		add	r7, r7, #20
 163 0022 BD46     		mov	sp, r7
 164 0024 80BC     		pop	{r7}
 165 0026 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE3:
 168              		.size	end_echo_IRR_SetVector, .-end_echo_IRR_SetVector
 169              		.section	.text.end_echo_IRR_GetVector,"ax",%progbits
 170              		.align	2
 171              		.global	end_echo_IRR_GetVector
 172              		.thumb
 173              		.thumb_func
 174              		.type	end_echo_IRR_GetVector, %function
 175              	end_echo_IRR_GetVector:
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 7


 176              	.LFB4:
 168:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 169:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 170:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_GetVector
 172:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 174:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 175:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 176:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 177:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 178:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 179:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 180:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 181:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Address of the ISR in the interrupt vector table.
 182:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 183:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 184:.\Generated_Source\PSoC5/end_echo_IRR.c **** cyisraddress end_echo_IRR_GetVector(void)
 185:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 177              		.loc 1 185 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              	.LCFI10:
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 7, -4
 186 0002 83B0     		sub	sp, sp, #12
 187              	.LCFI11:
 188              		.cfi_def_cfa_offset 16
 189 0004 00AF     		add	r7, sp, #0
 190              	.LCFI12:
 191              		.cfi_def_cfa_register 7
 186:.\Generated_Source\PSoC5/end_echo_IRR.c ****     cyisraddress * ramVectorTable;
 187:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 188:.\Generated_Source\PSoC5/end_echo_IRR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 192              		.loc 1 188 0
 193 0006 4EF60853 		movw	r3, #60680
 194 000a CEF20003 		movt	r3, 57344
 195 000e 1B68     		ldr	r3, [r3, #0]
 196 0010 7B60     		str	r3, [r7, #4]
 189:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 190:.\Generated_Source\PSoC5/end_echo_IRR.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)end_echo_IRR__INTC_NUMBER];
 197              		.loc 1 190 0
 198 0012 7B68     		ldr	r3, [r7, #4]
 199 0014 1B6C     		ldr	r3, [r3, #64]
 191:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 200              		.loc 1 191 0
 201 0016 1846     		mov	r0, r3
 202 0018 07F10C07 		add	r7, r7, #12
 203 001c BD46     		mov	sp, r7
 204 001e 80BC     		pop	{r7}
 205 0020 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE4:
 208              		.size	end_echo_IRR_GetVector, .-end_echo_IRR_GetVector
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 8


 209 0022 00BF     		.section	.text.end_echo_IRR_SetPriority,"ax",%progbits
 210              		.align	2
 211              		.global	end_echo_IRR_SetPriority
 212              		.thumb
 213              		.thumb_func
 214              		.type	end_echo_IRR_SetPriority, %function
 215              	end_echo_IRR_SetPriority:
 216              	.LFB5:
 192:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 193:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 194:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_SetPriority
 196:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 197:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 198:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 199:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Sets the Priority of the Interrupt. Note calling end_echo_IRR_Start
 200:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   or end_echo_IRR_StartEx will override any effect this method 
 201:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   would have had. This method should only be called after 
 202:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   end_echo_IRR_Start or end_echo_IRR_StartEx has been called. To set 
 203:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   the initial priority for the component use the cydwr file in the tool.
 204:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 205:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 206:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 207:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 208:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 209:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 210:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 211:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_SetPriority(uint8 priority)
 213:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 217              		.loc 1 213 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              	.LCFI13:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              	.LCFI14:
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI15:
 231              		.cfi_def_cfa_register 7
 232 0006 0346     		mov	r3, r0
 233 0008 FB71     		strb	r3, [r7, #7]
 214:.\Generated_Source\PSoC5/end_echo_IRR.c ****     *end_echo_IRR_INTC_PRIOR = priority << 5;
 234              		.loc 1 214 0
 235 000a 4FF46443 		mov	r3, #58368
 236 000e CEF20003 		movt	r3, 57344
 237 0012 FA79     		ldrb	r2, [r7, #7]
 238 0014 4FEA4212 		lsl	r2, r2, #5
 239 0018 D2B2     		uxtb	r2, r2
 240 001a 1A70     		strb	r2, [r3, #0]
 215:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 241              		.loc 1 215 0
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 9


 242 001c 07F10C07 		add	r7, r7, #12
 243 0020 BD46     		mov	sp, r7
 244 0022 80BC     		pop	{r7}
 245 0024 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE5:
 248              		.size	end_echo_IRR_SetPriority, .-end_echo_IRR_SetPriority
 249 0026 00BF     		.section	.text.end_echo_IRR_GetPriority,"ax",%progbits
 250              		.align	2
 251              		.global	end_echo_IRR_GetPriority
 252              		.thumb
 253              		.thumb_func
 254              		.type	end_echo_IRR_GetPriority, %function
 255              	end_echo_IRR_GetPriority:
 256              	.LFB6:
 216:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 217:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 218:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 219:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_GetPriority
 220:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 221:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 222:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 223:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Gets the Priority of the Interrupt.
 224:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 225:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 226:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 227:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 228:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 229:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Priority of the interrupt. 0 - 7, 0 being the highest.
 230:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 231:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 232:.\Generated_Source\PSoC5/end_echo_IRR.c **** uint8 end_echo_IRR_GetPriority(void)
 233:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 257              		.loc 1 233 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              	.LCFI16:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              	.LCFI17:
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI18:
 271              		.cfi_def_cfa_register 7
 234:.\Generated_Source\PSoC5/end_echo_IRR.c ****     uint8 priority;
 235:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 236:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 237:.\Generated_Source\PSoC5/end_echo_IRR.c ****     priority = *end_echo_IRR_INTC_PRIOR >> 5;
 272              		.loc 1 237 0
 273 0006 4FF46443 		mov	r3, #58368
 274 000a CEF20003 		movt	r3, 57344
 275 000e 1B78     		ldrb	r3, [r3, #0]
 276 0010 DBB2     		uxtb	r3, r3
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 10


 277 0012 4FEA5313 		lsr	r3, r3, #5
 278 0016 FB71     		strb	r3, [r7, #7]
 238:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 239:.\Generated_Source\PSoC5/end_echo_IRR.c ****     return priority;
 279              		.loc 1 239 0
 280 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 281              		.loc 1 240 0
 282 001a 1846     		mov	r0, r3
 283 001c 07F10C07 		add	r7, r7, #12
 284 0020 BD46     		mov	sp, r7
 285 0022 80BC     		pop	{r7}
 286 0024 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE6:
 289              		.size	end_echo_IRR_GetPriority, .-end_echo_IRR_GetPriority
 290 0026 00BF     		.section	.text.end_echo_IRR_Enable,"ax",%progbits
 291              		.align	2
 292              		.global	end_echo_IRR_Enable
 293              		.thumb
 294              		.thumb_func
 295              		.type	end_echo_IRR_Enable, %function
 296              	end_echo_IRR_Enable:
 297              	.LFB7:
 241:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 242:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 243:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_Enable
 245:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 247:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 248:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Enables the interrupt.
 249:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 250:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 251:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 252:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 253:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 254:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 255:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 256:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 257:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_Enable(void)
 258:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 298              		.loc 1 258 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI19:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 00AF     		add	r7, sp, #0
 308              	.LCFI20:
 309              		.cfi_def_cfa_register 7
 259:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Enable the general interrupt. */
 260:.\Generated_Source\PSoC5/end_echo_IRR.c ****     *end_echo_IRR_INTC_SET_EN = end_echo_IRR__INTC_MASK;
 310              		.loc 1 260 0
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 11


 311 0004 4FF46143 		mov	r3, #57600
 312 0008 CEF20003 		movt	r3, 57344
 313 000c 4FF00102 		mov	r2, #1
 314 0010 1A60     		str	r2, [r3, #0]
 261:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 315              		.loc 1 261 0
 316 0012 BD46     		mov	sp, r7
 317 0014 80BC     		pop	{r7}
 318 0016 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE7:
 321              		.size	end_echo_IRR_Enable, .-end_echo_IRR_Enable
 322              		.section	.text.end_echo_IRR_GetState,"ax",%progbits
 323              		.align	2
 324              		.global	end_echo_IRR_GetState
 325              		.thumb
 326              		.thumb_func
 327              		.type	end_echo_IRR_GetState, %function
 328              	end_echo_IRR_GetState:
 329              	.LFB8:
 262:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 263:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 264:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 265:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_GetState
 266:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 267:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 268:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 269:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 270:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 271:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 272:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 273:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 274:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 275:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   1 if enabled, 0 if disabled.
 276:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 277:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC5/end_echo_IRR.c **** uint8 end_echo_IRR_GetState(void)
 279:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 330              		.loc 1 279 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI21:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 00AF     		add	r7, sp, #0
 340              	.LCFI22:
 341              		.cfi_def_cfa_register 7
 280:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Get the state of the general interrupt. */
 281:.\Generated_Source\PSoC5/end_echo_IRR.c ****     return ((*end_echo_IRR_INTC_SET_EN & (uint32)end_echo_IRR__INTC_MASK) != 0u) ? 1u:0u;
 342              		.loc 1 281 0
 343 0004 4FF46143 		mov	r3, #57600
 344 0008 CEF20003 		movt	r3, 57344
 345 000c 1B68     		ldr	r3, [r3, #0]
 346 000e DBB2     		uxtb	r3, r3
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 12


 347 0010 03F00103 		and	r3, r3, #1
 348 0014 DBB2     		uxtb	r3, r3
 282:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 349              		.loc 1 282 0
 350 0016 1846     		mov	r0, r3
 351 0018 BD46     		mov	sp, r7
 352 001a 80BC     		pop	{r7}
 353 001c 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE8:
 356              		.size	end_echo_IRR_GetState, .-end_echo_IRR_GetState
 357 001e 00BF     		.section	.text.end_echo_IRR_Disable,"ax",%progbits
 358              		.align	2
 359              		.global	end_echo_IRR_Disable
 360              		.thumb
 361              		.thumb_func
 362              		.type	end_echo_IRR_Disable, %function
 363              	end_echo_IRR_Disable:
 364              	.LFB9:
 283:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 284:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 285:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_Disable
 287:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 289:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 290:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Disables the Interrupt.
 291:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 292:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 293:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 294:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 295:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 296:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 297:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 298:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 299:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_Disable(void)
 300:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 365              		.loc 1 300 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              	.LCFI23:
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              	.LCFI24:
 376              		.cfi_def_cfa_register 7
 301:.\Generated_Source\PSoC5/end_echo_IRR.c ****     /* Disable the general interrupt. */
 302:.\Generated_Source\PSoC5/end_echo_IRR.c ****     *end_echo_IRR_INTC_CLR_EN = end_echo_IRR__INTC_MASK;
 377              		.loc 1 302 0
 378 0004 4EF28013 		movw	r3, #57728
 379 0008 CEF20003 		movt	r3, 57344
 380 000c 4FF00102 		mov	r2, #1
 381 0010 1A60     		str	r2, [r3, #0]
 303:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 13


 382              		.loc 1 303 0
 383 0012 BD46     		mov	sp, r7
 384 0014 80BC     		pop	{r7}
 385 0016 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE9:
 388              		.size	end_echo_IRR_Disable, .-end_echo_IRR_Disable
 389              		.section	.text.end_echo_IRR_SetPending,"ax",%progbits
 390              		.align	2
 391              		.global	end_echo_IRR_SetPending
 392              		.thumb
 393              		.thumb_func
 394              		.type	end_echo_IRR_SetPending, %function
 395              	end_echo_IRR_SetPending:
 396              	.LFB10:
 304:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 305:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 306:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_SetPending
 308:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 309:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 310:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 311:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Causes the Interrupt to enter the pending state, a software method of
 312:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   generating the interrupt.
 313:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 314:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 315:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 316:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 317:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 318:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 319:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 320:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 321:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_SetPending(void)
 322:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 397              		.loc 1 322 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              	.LCFI25:
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 00AF     		add	r7, sp, #0
 407              	.LCFI26:
 408              		.cfi_def_cfa_register 7
 323:.\Generated_Source\PSoC5/end_echo_IRR.c ****     *end_echo_IRR_INTC_SET_PD = end_echo_IRR__INTC_MASK;
 409              		.loc 1 323 0
 410 0004 4FF46243 		mov	r3, #57856
 411 0008 CEF20003 		movt	r3, 57344
 412 000c 4FF00102 		mov	r2, #1
 413 0010 1A60     		str	r2, [r3, #0]
 324:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 414              		.loc 1 324 0
 415 0012 BD46     		mov	sp, r7
 416 0014 80BC     		pop	{r7}
 417 0016 7047     		bx	lr
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 14


 418              		.cfi_endproc
 419              	.LFE10:
 420              		.size	end_echo_IRR_SetPending, .-end_echo_IRR_SetPending
 421              		.section	.text.end_echo_IRR_ClearPending,"ax",%progbits
 422              		.align	2
 423              		.global	end_echo_IRR_ClearPending
 424              		.thumb
 425              		.thumb_func
 426              		.type	end_echo_IRR_ClearPending, %function
 427              	end_echo_IRR_ClearPending:
 428              	.LFB11:
 325:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 326:.\Generated_Source\PSoC5/end_echo_IRR.c **** 
 327:.\Generated_Source\PSoC5/end_echo_IRR.c **** /*******************************************************************************
 328:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Function Name: end_echo_IRR_ClearPending
 329:.\Generated_Source\PSoC5/end_echo_IRR.c **** ********************************************************************************
 330:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 331:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Summary:
 332:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   Clears a pending interrupt.
 333:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 334:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Parameters:
 335:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 336:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 337:.\Generated_Source\PSoC5/end_echo_IRR.c **** * Return:
 338:.\Generated_Source\PSoC5/end_echo_IRR.c **** *   None
 339:.\Generated_Source\PSoC5/end_echo_IRR.c **** *
 340:.\Generated_Source\PSoC5/end_echo_IRR.c **** *******************************************************************************/
 341:.\Generated_Source\PSoC5/end_echo_IRR.c **** void end_echo_IRR_ClearPending(void)
 342:.\Generated_Source\PSoC5/end_echo_IRR.c **** {
 429              		.loc 1 342 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              	.LCFI27:
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              	.LCFI28:
 440              		.cfi_def_cfa_register 7
 343:.\Generated_Source\PSoC5/end_echo_IRR.c ****     *end_echo_IRR_INTC_CLR_PD = end_echo_IRR__INTC_MASK;
 441              		.loc 1 343 0
 442 0004 4EF28023 		movw	r3, #57984
 443 0008 CEF20003 		movt	r3, 57344
 444 000c 4FF00102 		mov	r2, #1
 445 0010 1A60     		str	r2, [r3, #0]
 344:.\Generated_Source\PSoC5/end_echo_IRR.c **** }
 446              		.loc 1 344 0
 447 0012 BD46     		mov	sp, r7
 448 0014 80BC     		pop	{r7}
 449 0016 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE11:
 452              		.size	end_echo_IRR_ClearPending, .-end_echo_IRR_ClearPending
 453              		.text
 454              	.Letext0:
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 15


 455              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 456              		.section	.debug_info,"",%progbits
 457              	.Ldebug_info0:
 458 0000 5E020000 		.4byte	0x25e
 459 0004 0200     		.2byte	0x2
 460 0006 00000000 		.4byte	.Ldebug_abbrev0
 461 000a 04       		.byte	0x4
 462 000b 01       		.uleb128 0x1
 463 000c 08020000 		.4byte	.LASF32
 464 0010 01       		.byte	0x1
 465 0011 ED000000 		.4byte	.LASF33
 466 0015 85010000 		.4byte	.LASF34
 467 0019 00000000 		.4byte	.Ldebug_ranges0+0
 468 001d 00000000 		.4byte	0
 469 0021 00000000 		.4byte	0
 470 0025 00000000 		.4byte	.Ldebug_line0
 471 0029 02       		.uleb128 0x2
 472 002a 01       		.byte	0x1
 473 002b 06       		.byte	0x6
 474 002c 60020000 		.4byte	.LASF0
 475 0030 02       		.uleb128 0x2
 476 0031 01       		.byte	0x1
 477 0032 08       		.byte	0x8
 478 0033 A0000000 		.4byte	.LASF1
 479 0037 02       		.uleb128 0x2
 480 0038 02       		.byte	0x2
 481 0039 05       		.byte	0x5
 482 003a FE010000 		.4byte	.LASF2
 483 003e 02       		.uleb128 0x2
 484 003f 02       		.byte	0x2
 485 0040 07       		.byte	0x7
 486 0041 49000000 		.4byte	.LASF3
 487 0045 03       		.uleb128 0x3
 488 0046 04       		.byte	0x4
 489 0047 05       		.byte	0x5
 490 0048 696E7400 		.ascii	"int\000"
 491 004c 02       		.uleb128 0x2
 492 004d 04       		.byte	0x4
 493 004e 07       		.byte	0x7
 494 004f 1C010000 		.4byte	.LASF4
 495 0053 02       		.uleb128 0x2
 496 0054 08       		.byte	0x8
 497 0055 05       		.byte	0x5
 498 0056 77010000 		.4byte	.LASF5
 499 005a 02       		.uleb128 0x2
 500 005b 08       		.byte	0x8
 501 005c 07       		.byte	0x7
 502 005d 31010000 		.4byte	.LASF6
 503 0061 02       		.uleb128 0x2
 504 0062 04       		.byte	0x4
 505 0063 05       		.byte	0x5
 506 0064 51020000 		.4byte	.LASF7
 507 0068 02       		.uleb128 0x2
 508 0069 04       		.byte	0x4
 509 006a 07       		.byte	0x7
 510 006b 6E010000 		.4byte	.LASF8
 511 006f 02       		.uleb128 0x2
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 16


 512 0070 04       		.byte	0x4
 513 0071 07       		.byte	0x7
 514 0072 B3000000 		.4byte	.LASF9
 515 0076 04       		.uleb128 0x4
 516 0077 01       		.byte	0x1
 517 0078 05       		.uleb128 0x5
 518 0079 04       		.byte	0x4
 519 007a 76000000 		.4byte	0x76
 520 007e 02       		.uleb128 0x2
 521 007f 01       		.byte	0x1
 522 0080 08       		.byte	0x8
 523 0081 BD010000 		.4byte	.LASF10
 524 0085 06       		.uleb128 0x6
 525 0086 C5000000 		.4byte	.LASF11
 526 008a 02       		.byte	0x2
 527 008b 5B       		.byte	0x5b
 528 008c 30000000 		.4byte	0x30
 529 0090 06       		.uleb128 0x6
 530 0091 15010000 		.4byte	.LASF12
 531 0095 02       		.byte	0x2
 532 0096 5D       		.byte	0x5d
 533 0097 6F000000 		.4byte	0x6f
 534 009b 02       		.uleb128 0x2
 535 009c 04       		.byte	0x4
 536 009d 04       		.byte	0x4
 537 009e 5A020000 		.4byte	.LASF13
 538 00a2 02       		.uleb128 0x2
 539 00a3 08       		.byte	0x8
 540 00a4 04       		.byte	0x4
 541 00a5 E6000000 		.4byte	.LASF14
 542 00a9 06       		.uleb128 0x6
 543 00aa AE000000 		.4byte	.LASF15
 544 00ae 02       		.byte	0x2
 545 00af F0       		.byte	0xf0
 546 00b0 B4000000 		.4byte	0xb4
 547 00b4 07       		.uleb128 0x7
 548 00b5 85000000 		.4byte	0x85
 549 00b9 06       		.uleb128 0x6
 550 00ba 14000000 		.4byte	.LASF16
 551 00be 02       		.byte	0x2
 552 00bf F2       		.byte	0xf2
 553 00c0 C4000000 		.4byte	0xc4
 554 00c4 07       		.uleb128 0x7
 555 00c5 90000000 		.4byte	0x90
 556 00c9 08       		.uleb128 0x8
 557 00ca 48010000 		.4byte	.LASF17
 558 00ce 02       		.byte	0x2
 559 00cf 0201     		.2byte	0x102
 560 00d1 78000000 		.4byte	0x78
 561 00d5 09       		.uleb128 0x9
 562 00d6 01       		.byte	0x1
 563 00d7 5C000000 		.4byte	.LASF18
 564 00db 01       		.byte	0x1
 565 00dc 39       		.byte	0x39
 566 00dd 01       		.byte	0x1
 567 00de 00000000 		.4byte	.LFB0
 568 00e2 22000000 		.4byte	.LFE0
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 17


 569 00e6 00000000 		.4byte	.LLST0
 570 00ea 01       		.byte	0x1
 571 00eb 0A       		.uleb128 0xa
 572 00ec 01       		.byte	0x1
 573 00ed 6C020000 		.4byte	.LASF20
 574 00f1 01       		.byte	0x1
 575 00f2 57       		.byte	0x57
 576 00f3 01       		.byte	0x1
 577 00f4 00000000 		.4byte	.LFB1
 578 00f8 26000000 		.4byte	.LFE1
 579 00fc 2C000000 		.4byte	.LLST1
 580 0100 01       		.byte	0x1
 581 0101 14010000 		.4byte	0x114
 582 0105 0B       		.uleb128 0xb
 583 0106 29010000 		.4byte	.LASF22
 584 010a 01       		.byte	0x1
 585 010b 57       		.byte	0x57
 586 010c C9000000 		.4byte	0xc9
 587 0110 02       		.byte	0x2
 588 0111 91       		.byte	0x91
 589 0112 74       		.sleb128 -12
 590 0113 00       		.byte	0
 591 0114 09       		.uleb128 0x9
 592 0115 01       		.byte	0x1
 593 0116 CB000000 		.4byte	.LASF19
 594 011a 01       		.byte	0x1
 595 011b 74       		.byte	0x74
 596 011c 01       		.byte	0x1
 597 011d 00000000 		.4byte	.LFB2
 598 0121 16000000 		.4byte	.LFE2
 599 0125 64000000 		.4byte	.LLST2
 600 0129 01       		.byte	0x1
 601 012a 0C       		.uleb128 0xc
 602 012b 01       		.byte	0x1
 603 012c 81020000 		.4byte	.LASF21
 604 0130 01       		.byte	0x1
 605 0131 A0       		.byte	0xa0
 606 0132 01       		.byte	0x1
 607 0133 00000000 		.4byte	.LFB3
 608 0137 28000000 		.4byte	.LFE3
 609 013b 90000000 		.4byte	.LLST3
 610 013f 01       		.byte	0x1
 611 0140 61010000 		.4byte	0x161
 612 0144 0B       		.uleb128 0xb
 613 0145 29010000 		.4byte	.LASF22
 614 0149 01       		.byte	0x1
 615 014a A0       		.byte	0xa0
 616 014b C9000000 		.4byte	0xc9
 617 014f 02       		.byte	0x2
 618 0150 91       		.byte	0x91
 619 0151 6C       		.sleb128 -20
 620 0152 0D       		.uleb128 0xd
 621 0153 C2010000 		.4byte	.LASF23
 622 0157 01       		.byte	0x1
 623 0158 A2       		.byte	0xa2
 624 0159 61010000 		.4byte	0x161
 625 015d 02       		.byte	0x2
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 18


 626 015e 91       		.byte	0x91
 627 015f 74       		.sleb128 -12
 628 0160 00       		.byte	0
 629 0161 05       		.uleb128 0x5
 630 0162 04       		.byte	0x4
 631 0163 C9000000 		.4byte	0xc9
 632 0167 0E       		.uleb128 0xe
 633 0168 01       		.byte	0x1
 634 0169 E7010000 		.4byte	.LASF26
 635 016d 01       		.byte	0x1
 636 016e B8       		.byte	0xb8
 637 016f 01       		.byte	0x1
 638 0170 C9000000 		.4byte	0xc9
 639 0174 00000000 		.4byte	.LFB4
 640 0178 22000000 		.4byte	.LFE4
 641 017c C8000000 		.4byte	.LLST4
 642 0180 01       		.byte	0x1
 643 0181 94010000 		.4byte	0x194
 644 0185 0D       		.uleb128 0xd
 645 0186 C2010000 		.4byte	.LASF23
 646 018a 01       		.byte	0x1
 647 018b BA       		.byte	0xba
 648 018c 61010000 		.4byte	0x161
 649 0190 02       		.byte	0x2
 650 0191 91       		.byte	0x91
 651 0192 74       		.sleb128 -12
 652 0193 00       		.byte	0
 653 0194 0C       		.uleb128 0xc
 654 0195 01       		.byte	0x1
 655 0196 55010000 		.4byte	.LASF24
 656 019a 01       		.byte	0x1
 657 019b D4       		.byte	0xd4
 658 019c 01       		.byte	0x1
 659 019d 00000000 		.4byte	.LFB5
 660 01a1 26000000 		.4byte	.LFE5
 661 01a5 00010000 		.4byte	.LLST5
 662 01a9 01       		.byte	0x1
 663 01aa BD010000 		.4byte	0x1bd
 664 01ae 0B       		.uleb128 0xb
 665 01af DD000000 		.4byte	.LASF25
 666 01b3 01       		.byte	0x1
 667 01b4 D4       		.byte	0xd4
 668 01b5 85000000 		.4byte	0x85
 669 01b9 02       		.byte	0x2
 670 01ba 91       		.byte	0x91
 671 01bb 77       		.sleb128 -9
 672 01bc 00       		.byte	0
 673 01bd 0E       		.uleb128 0xe
 674 01be 01       		.byte	0x1
 675 01bf 6F000000 		.4byte	.LASF27
 676 01c3 01       		.byte	0x1
 677 01c4 E8       		.byte	0xe8
 678 01c5 01       		.byte	0x1
 679 01c6 85000000 		.4byte	0x85
 680 01ca 00000000 		.4byte	.LFB6
 681 01ce 26000000 		.4byte	.LFE6
 682 01d2 38010000 		.4byte	.LLST6
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 19


 683 01d6 01       		.byte	0x1
 684 01d7 EA010000 		.4byte	0x1ea
 685 01db 0D       		.uleb128 0xd
 686 01dc DD000000 		.4byte	.LASF25
 687 01e0 01       		.byte	0x1
 688 01e1 EA       		.byte	0xea
 689 01e2 85000000 		.4byte	0x85
 690 01e6 02       		.byte	0x2
 691 01e7 91       		.byte	0x91
 692 01e8 77       		.sleb128 -9
 693 01e9 00       		.byte	0
 694 01ea 0F       		.uleb128 0xf
 695 01eb 01       		.byte	0x1
 696 01ec 00000000 		.4byte	.LASF28
 697 01f0 01       		.byte	0x1
 698 01f1 0101     		.2byte	0x101
 699 01f3 01       		.byte	0x1
 700 01f4 00000000 		.4byte	.LFB7
 701 01f8 18000000 		.4byte	.LFE7
 702 01fc 70010000 		.4byte	.LLST7
 703 0200 01       		.byte	0x1
 704 0201 10       		.uleb128 0x10
 705 0202 01       		.byte	0x1
 706 0203 D1010000 		.4byte	.LASF35
 707 0207 01       		.byte	0x1
 708 0208 1601     		.2byte	0x116
 709 020a 01       		.byte	0x1
 710 020b 85000000 		.4byte	0x85
 711 020f 00000000 		.4byte	.LFB8
 712 0213 1E000000 		.4byte	.LFE8
 713 0217 9C010000 		.4byte	.LLST8
 714 021b 01       		.byte	0x1
 715 021c 0F       		.uleb128 0xf
 716 021d 01       		.byte	0x1
 717 021e 1A000000 		.4byte	.LASF29
 718 0222 01       		.byte	0x1
 719 0223 2B01     		.2byte	0x12b
 720 0225 01       		.byte	0x1
 721 0226 00000000 		.4byte	.LFB9
 722 022a 18000000 		.4byte	.LFE9
 723 022e C8010000 		.4byte	.LLST9
 724 0232 01       		.byte	0x1
 725 0233 0F       		.uleb128 0xf
 726 0234 01       		.byte	0x1
 727 0235 88000000 		.4byte	.LASF30
 728 0239 01       		.byte	0x1
 729 023a 4101     		.2byte	0x141
 730 023c 01       		.byte	0x1
 731 023d 00000000 		.4byte	.LFB10
 732 0241 18000000 		.4byte	.LFE10
 733 0245 F4010000 		.4byte	.LLST10
 734 0249 01       		.byte	0x1
 735 024a 0F       		.uleb128 0xf
 736 024b 01       		.byte	0x1
 737 024c 2F000000 		.4byte	.LASF31
 738 0250 01       		.byte	0x1
 739 0251 5501     		.2byte	0x155
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 20


 740 0253 01       		.byte	0x1
 741 0254 00000000 		.4byte	.LFB11
 742 0258 18000000 		.4byte	.LFE11
 743 025c 20020000 		.4byte	.LLST11
 744 0260 01       		.byte	0x1
 745 0261 00       		.byte	0
 746              		.section	.debug_abbrev,"",%progbits
 747              	.Ldebug_abbrev0:
 748 0000 01       		.uleb128 0x1
 749 0001 11       		.uleb128 0x11
 750 0002 01       		.byte	0x1
 751 0003 25       		.uleb128 0x25
 752 0004 0E       		.uleb128 0xe
 753 0005 13       		.uleb128 0x13
 754 0006 0B       		.uleb128 0xb
 755 0007 03       		.uleb128 0x3
 756 0008 0E       		.uleb128 0xe
 757 0009 1B       		.uleb128 0x1b
 758 000a 0E       		.uleb128 0xe
 759 000b 55       		.uleb128 0x55
 760 000c 06       		.uleb128 0x6
 761 000d 11       		.uleb128 0x11
 762 000e 01       		.uleb128 0x1
 763 000f 52       		.uleb128 0x52
 764 0010 01       		.uleb128 0x1
 765 0011 10       		.uleb128 0x10
 766 0012 06       		.uleb128 0x6
 767 0013 00       		.byte	0
 768 0014 00       		.byte	0
 769 0015 02       		.uleb128 0x2
 770 0016 24       		.uleb128 0x24
 771 0017 00       		.byte	0
 772 0018 0B       		.uleb128 0xb
 773 0019 0B       		.uleb128 0xb
 774 001a 3E       		.uleb128 0x3e
 775 001b 0B       		.uleb128 0xb
 776 001c 03       		.uleb128 0x3
 777 001d 0E       		.uleb128 0xe
 778 001e 00       		.byte	0
 779 001f 00       		.byte	0
 780 0020 03       		.uleb128 0x3
 781 0021 24       		.uleb128 0x24
 782 0022 00       		.byte	0
 783 0023 0B       		.uleb128 0xb
 784 0024 0B       		.uleb128 0xb
 785 0025 3E       		.uleb128 0x3e
 786 0026 0B       		.uleb128 0xb
 787 0027 03       		.uleb128 0x3
 788 0028 08       		.uleb128 0x8
 789 0029 00       		.byte	0
 790 002a 00       		.byte	0
 791 002b 04       		.uleb128 0x4
 792 002c 15       		.uleb128 0x15
 793 002d 00       		.byte	0
 794 002e 27       		.uleb128 0x27
 795 002f 0C       		.uleb128 0xc
 796 0030 00       		.byte	0
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 21


 797 0031 00       		.byte	0
 798 0032 05       		.uleb128 0x5
 799 0033 0F       		.uleb128 0xf
 800 0034 00       		.byte	0
 801 0035 0B       		.uleb128 0xb
 802 0036 0B       		.uleb128 0xb
 803 0037 49       		.uleb128 0x49
 804 0038 13       		.uleb128 0x13
 805 0039 00       		.byte	0
 806 003a 00       		.byte	0
 807 003b 06       		.uleb128 0x6
 808 003c 16       		.uleb128 0x16
 809 003d 00       		.byte	0
 810 003e 03       		.uleb128 0x3
 811 003f 0E       		.uleb128 0xe
 812 0040 3A       		.uleb128 0x3a
 813 0041 0B       		.uleb128 0xb
 814 0042 3B       		.uleb128 0x3b
 815 0043 0B       		.uleb128 0xb
 816 0044 49       		.uleb128 0x49
 817 0045 13       		.uleb128 0x13
 818 0046 00       		.byte	0
 819 0047 00       		.byte	0
 820 0048 07       		.uleb128 0x7
 821 0049 35       		.uleb128 0x35
 822 004a 00       		.byte	0
 823 004b 49       		.uleb128 0x49
 824 004c 13       		.uleb128 0x13
 825 004d 00       		.byte	0
 826 004e 00       		.byte	0
 827 004f 08       		.uleb128 0x8
 828 0050 16       		.uleb128 0x16
 829 0051 00       		.byte	0
 830 0052 03       		.uleb128 0x3
 831 0053 0E       		.uleb128 0xe
 832 0054 3A       		.uleb128 0x3a
 833 0055 0B       		.uleb128 0xb
 834 0056 3B       		.uleb128 0x3b
 835 0057 05       		.uleb128 0x5
 836 0058 49       		.uleb128 0x49
 837 0059 13       		.uleb128 0x13
 838 005a 00       		.byte	0
 839 005b 00       		.byte	0
 840 005c 09       		.uleb128 0x9
 841 005d 2E       		.uleb128 0x2e
 842 005e 00       		.byte	0
 843 005f 3F       		.uleb128 0x3f
 844 0060 0C       		.uleb128 0xc
 845 0061 03       		.uleb128 0x3
 846 0062 0E       		.uleb128 0xe
 847 0063 3A       		.uleb128 0x3a
 848 0064 0B       		.uleb128 0xb
 849 0065 3B       		.uleb128 0x3b
 850 0066 0B       		.uleb128 0xb
 851 0067 27       		.uleb128 0x27
 852 0068 0C       		.uleb128 0xc
 853 0069 11       		.uleb128 0x11
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 22


 854 006a 01       		.uleb128 0x1
 855 006b 12       		.uleb128 0x12
 856 006c 01       		.uleb128 0x1
 857 006d 40       		.uleb128 0x40
 858 006e 06       		.uleb128 0x6
 859 006f 9642     		.uleb128 0x2116
 860 0071 0C       		.uleb128 0xc
 861 0072 00       		.byte	0
 862 0073 00       		.byte	0
 863 0074 0A       		.uleb128 0xa
 864 0075 2E       		.uleb128 0x2e
 865 0076 01       		.byte	0x1
 866 0077 3F       		.uleb128 0x3f
 867 0078 0C       		.uleb128 0xc
 868 0079 03       		.uleb128 0x3
 869 007a 0E       		.uleb128 0xe
 870 007b 3A       		.uleb128 0x3a
 871 007c 0B       		.uleb128 0xb
 872 007d 3B       		.uleb128 0x3b
 873 007e 0B       		.uleb128 0xb
 874 007f 27       		.uleb128 0x27
 875 0080 0C       		.uleb128 0xc
 876 0081 11       		.uleb128 0x11
 877 0082 01       		.uleb128 0x1
 878 0083 12       		.uleb128 0x12
 879 0084 01       		.uleb128 0x1
 880 0085 40       		.uleb128 0x40
 881 0086 06       		.uleb128 0x6
 882 0087 9642     		.uleb128 0x2116
 883 0089 0C       		.uleb128 0xc
 884 008a 01       		.uleb128 0x1
 885 008b 13       		.uleb128 0x13
 886 008c 00       		.byte	0
 887 008d 00       		.byte	0
 888 008e 0B       		.uleb128 0xb
 889 008f 05       		.uleb128 0x5
 890 0090 00       		.byte	0
 891 0091 03       		.uleb128 0x3
 892 0092 0E       		.uleb128 0xe
 893 0093 3A       		.uleb128 0x3a
 894 0094 0B       		.uleb128 0xb
 895 0095 3B       		.uleb128 0x3b
 896 0096 0B       		.uleb128 0xb
 897 0097 49       		.uleb128 0x49
 898 0098 13       		.uleb128 0x13
 899 0099 02       		.uleb128 0x2
 900 009a 0A       		.uleb128 0xa
 901 009b 00       		.byte	0
 902 009c 00       		.byte	0
 903 009d 0C       		.uleb128 0xc
 904 009e 2E       		.uleb128 0x2e
 905 009f 01       		.byte	0x1
 906 00a0 3F       		.uleb128 0x3f
 907 00a1 0C       		.uleb128 0xc
 908 00a2 03       		.uleb128 0x3
 909 00a3 0E       		.uleb128 0xe
 910 00a4 3A       		.uleb128 0x3a
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 23


 911 00a5 0B       		.uleb128 0xb
 912 00a6 3B       		.uleb128 0x3b
 913 00a7 0B       		.uleb128 0xb
 914 00a8 27       		.uleb128 0x27
 915 00a9 0C       		.uleb128 0xc
 916 00aa 11       		.uleb128 0x11
 917 00ab 01       		.uleb128 0x1
 918 00ac 12       		.uleb128 0x12
 919 00ad 01       		.uleb128 0x1
 920 00ae 40       		.uleb128 0x40
 921 00af 06       		.uleb128 0x6
 922 00b0 9742     		.uleb128 0x2117
 923 00b2 0C       		.uleb128 0xc
 924 00b3 01       		.uleb128 0x1
 925 00b4 13       		.uleb128 0x13
 926 00b5 00       		.byte	0
 927 00b6 00       		.byte	0
 928 00b7 0D       		.uleb128 0xd
 929 00b8 34       		.uleb128 0x34
 930 00b9 00       		.byte	0
 931 00ba 03       		.uleb128 0x3
 932 00bb 0E       		.uleb128 0xe
 933 00bc 3A       		.uleb128 0x3a
 934 00bd 0B       		.uleb128 0xb
 935 00be 3B       		.uleb128 0x3b
 936 00bf 0B       		.uleb128 0xb
 937 00c0 49       		.uleb128 0x49
 938 00c1 13       		.uleb128 0x13
 939 00c2 02       		.uleb128 0x2
 940 00c3 0A       		.uleb128 0xa
 941 00c4 00       		.byte	0
 942 00c5 00       		.byte	0
 943 00c6 0E       		.uleb128 0xe
 944 00c7 2E       		.uleb128 0x2e
 945 00c8 01       		.byte	0x1
 946 00c9 3F       		.uleb128 0x3f
 947 00ca 0C       		.uleb128 0xc
 948 00cb 03       		.uleb128 0x3
 949 00cc 0E       		.uleb128 0xe
 950 00cd 3A       		.uleb128 0x3a
 951 00ce 0B       		.uleb128 0xb
 952 00cf 3B       		.uleb128 0x3b
 953 00d0 0B       		.uleb128 0xb
 954 00d1 27       		.uleb128 0x27
 955 00d2 0C       		.uleb128 0xc
 956 00d3 49       		.uleb128 0x49
 957 00d4 13       		.uleb128 0x13
 958 00d5 11       		.uleb128 0x11
 959 00d6 01       		.uleb128 0x1
 960 00d7 12       		.uleb128 0x12
 961 00d8 01       		.uleb128 0x1
 962 00d9 40       		.uleb128 0x40
 963 00da 06       		.uleb128 0x6
 964 00db 9742     		.uleb128 0x2117
 965 00dd 0C       		.uleb128 0xc
 966 00de 01       		.uleb128 0x1
 967 00df 13       		.uleb128 0x13
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 24


 968 00e0 00       		.byte	0
 969 00e1 00       		.byte	0
 970 00e2 0F       		.uleb128 0xf
 971 00e3 2E       		.uleb128 0x2e
 972 00e4 00       		.byte	0
 973 00e5 3F       		.uleb128 0x3f
 974 00e6 0C       		.uleb128 0xc
 975 00e7 03       		.uleb128 0x3
 976 00e8 0E       		.uleb128 0xe
 977 00e9 3A       		.uleb128 0x3a
 978 00ea 0B       		.uleb128 0xb
 979 00eb 3B       		.uleb128 0x3b
 980 00ec 05       		.uleb128 0x5
 981 00ed 27       		.uleb128 0x27
 982 00ee 0C       		.uleb128 0xc
 983 00ef 11       		.uleb128 0x11
 984 00f0 01       		.uleb128 0x1
 985 00f1 12       		.uleb128 0x12
 986 00f2 01       		.uleb128 0x1
 987 00f3 40       		.uleb128 0x40
 988 00f4 06       		.uleb128 0x6
 989 00f5 9742     		.uleb128 0x2117
 990 00f7 0C       		.uleb128 0xc
 991 00f8 00       		.byte	0
 992 00f9 00       		.byte	0
 993 00fa 10       		.uleb128 0x10
 994 00fb 2E       		.uleb128 0x2e
 995 00fc 00       		.byte	0
 996 00fd 3F       		.uleb128 0x3f
 997 00fe 0C       		.uleb128 0xc
 998 00ff 03       		.uleb128 0x3
 999 0100 0E       		.uleb128 0xe
 1000 0101 3A       		.uleb128 0x3a
 1001 0102 0B       		.uleb128 0xb
 1002 0103 3B       		.uleb128 0x3b
 1003 0104 05       		.uleb128 0x5
 1004 0105 27       		.uleb128 0x27
 1005 0106 0C       		.uleb128 0xc
 1006 0107 49       		.uleb128 0x49
 1007 0108 13       		.uleb128 0x13
 1008 0109 11       		.uleb128 0x11
 1009 010a 01       		.uleb128 0x1
 1010 010b 12       		.uleb128 0x12
 1011 010c 01       		.uleb128 0x1
 1012 010d 40       		.uleb128 0x40
 1013 010e 06       		.uleb128 0x6
 1014 010f 9742     		.uleb128 0x2117
 1015 0111 0C       		.uleb128 0xc
 1016 0112 00       		.byte	0
 1017 0113 00       		.byte	0
 1018 0114 00       		.byte	0
 1019              		.section	.debug_loc,"",%progbits
 1020              	.Ldebug_loc0:
 1021              	.LLST0:
 1022 0000 00000000 		.4byte	.LFB0
 1023 0004 02000000 		.4byte	.LCFI0
 1024 0008 0200     		.2byte	0x2
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 25


 1025 000a 7D       		.byte	0x7d
 1026 000b 00       		.sleb128 0
 1027 000c 02000000 		.4byte	.LCFI0
 1028 0010 04000000 		.4byte	.LCFI1
 1029 0014 0200     		.2byte	0x2
 1030 0016 7D       		.byte	0x7d
 1031 0017 08       		.sleb128 8
 1032 0018 04000000 		.4byte	.LCFI1
 1033 001c 22000000 		.4byte	.LFE0
 1034 0020 0200     		.2byte	0x2
 1035 0022 77       		.byte	0x77
 1036 0023 08       		.sleb128 8
 1037 0024 00000000 		.4byte	0
 1038 0028 00000000 		.4byte	0
 1039              	.LLST1:
 1040 002c 00000000 		.4byte	.LFB1
 1041 0030 02000000 		.4byte	.LCFI2
 1042 0034 0200     		.2byte	0x2
 1043 0036 7D       		.byte	0x7d
 1044 0037 00       		.sleb128 0
 1045 0038 02000000 		.4byte	.LCFI2
 1046 003c 04000000 		.4byte	.LCFI3
 1047 0040 0200     		.2byte	0x2
 1048 0042 7D       		.byte	0x7d
 1049 0043 08       		.sleb128 8
 1050 0044 04000000 		.4byte	.LCFI3
 1051 0048 06000000 		.4byte	.LCFI4
 1052 004c 0200     		.2byte	0x2
 1053 004e 7D       		.byte	0x7d
 1054 004f 10       		.sleb128 16
 1055 0050 06000000 		.4byte	.LCFI4
 1056 0054 26000000 		.4byte	.LFE1
 1057 0058 0200     		.2byte	0x2
 1058 005a 77       		.byte	0x77
 1059 005b 10       		.sleb128 16
 1060 005c 00000000 		.4byte	0
 1061 0060 00000000 		.4byte	0
 1062              	.LLST2:
 1063 0064 00000000 		.4byte	.LFB2
 1064 0068 02000000 		.4byte	.LCFI5
 1065 006c 0200     		.2byte	0x2
 1066 006e 7D       		.byte	0x7d
 1067 006f 00       		.sleb128 0
 1068 0070 02000000 		.4byte	.LCFI5
 1069 0074 04000000 		.4byte	.LCFI6
 1070 0078 0200     		.2byte	0x2
 1071 007a 7D       		.byte	0x7d
 1072 007b 08       		.sleb128 8
 1073 007c 04000000 		.4byte	.LCFI6
 1074 0080 16000000 		.4byte	.LFE2
 1075 0084 0200     		.2byte	0x2
 1076 0086 77       		.byte	0x77
 1077 0087 08       		.sleb128 8
 1078 0088 00000000 		.4byte	0
 1079 008c 00000000 		.4byte	0
 1080              	.LLST3:
 1081 0090 00000000 		.4byte	.LFB3
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 26


 1082 0094 02000000 		.4byte	.LCFI7
 1083 0098 0200     		.2byte	0x2
 1084 009a 7D       		.byte	0x7d
 1085 009b 00       		.sleb128 0
 1086 009c 02000000 		.4byte	.LCFI7
 1087 00a0 04000000 		.4byte	.LCFI8
 1088 00a4 0200     		.2byte	0x2
 1089 00a6 7D       		.byte	0x7d
 1090 00a7 04       		.sleb128 4
 1091 00a8 04000000 		.4byte	.LCFI8
 1092 00ac 06000000 		.4byte	.LCFI9
 1093 00b0 0200     		.2byte	0x2
 1094 00b2 7D       		.byte	0x7d
 1095 00b3 18       		.sleb128 24
 1096 00b4 06000000 		.4byte	.LCFI9
 1097 00b8 28000000 		.4byte	.LFE3
 1098 00bc 0200     		.2byte	0x2
 1099 00be 77       		.byte	0x77
 1100 00bf 18       		.sleb128 24
 1101 00c0 00000000 		.4byte	0
 1102 00c4 00000000 		.4byte	0
 1103              	.LLST4:
 1104 00c8 00000000 		.4byte	.LFB4
 1105 00cc 02000000 		.4byte	.LCFI10
 1106 00d0 0200     		.2byte	0x2
 1107 00d2 7D       		.byte	0x7d
 1108 00d3 00       		.sleb128 0
 1109 00d4 02000000 		.4byte	.LCFI10
 1110 00d8 04000000 		.4byte	.LCFI11
 1111 00dc 0200     		.2byte	0x2
 1112 00de 7D       		.byte	0x7d
 1113 00df 04       		.sleb128 4
 1114 00e0 04000000 		.4byte	.LCFI11
 1115 00e4 06000000 		.4byte	.LCFI12
 1116 00e8 0200     		.2byte	0x2
 1117 00ea 7D       		.byte	0x7d
 1118 00eb 10       		.sleb128 16
 1119 00ec 06000000 		.4byte	.LCFI12
 1120 00f0 22000000 		.4byte	.LFE4
 1121 00f4 0200     		.2byte	0x2
 1122 00f6 77       		.byte	0x77
 1123 00f7 10       		.sleb128 16
 1124 00f8 00000000 		.4byte	0
 1125 00fc 00000000 		.4byte	0
 1126              	.LLST5:
 1127 0100 00000000 		.4byte	.LFB5
 1128 0104 02000000 		.4byte	.LCFI13
 1129 0108 0200     		.2byte	0x2
 1130 010a 7D       		.byte	0x7d
 1131 010b 00       		.sleb128 0
 1132 010c 02000000 		.4byte	.LCFI13
 1133 0110 04000000 		.4byte	.LCFI14
 1134 0114 0200     		.2byte	0x2
 1135 0116 7D       		.byte	0x7d
 1136 0117 04       		.sleb128 4
 1137 0118 04000000 		.4byte	.LCFI14
 1138 011c 06000000 		.4byte	.LCFI15
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 27


 1139 0120 0200     		.2byte	0x2
 1140 0122 7D       		.byte	0x7d
 1141 0123 10       		.sleb128 16
 1142 0124 06000000 		.4byte	.LCFI15
 1143 0128 26000000 		.4byte	.LFE5
 1144 012c 0200     		.2byte	0x2
 1145 012e 77       		.byte	0x77
 1146 012f 10       		.sleb128 16
 1147 0130 00000000 		.4byte	0
 1148 0134 00000000 		.4byte	0
 1149              	.LLST6:
 1150 0138 00000000 		.4byte	.LFB6
 1151 013c 02000000 		.4byte	.LCFI16
 1152 0140 0200     		.2byte	0x2
 1153 0142 7D       		.byte	0x7d
 1154 0143 00       		.sleb128 0
 1155 0144 02000000 		.4byte	.LCFI16
 1156 0148 04000000 		.4byte	.LCFI17
 1157 014c 0200     		.2byte	0x2
 1158 014e 7D       		.byte	0x7d
 1159 014f 04       		.sleb128 4
 1160 0150 04000000 		.4byte	.LCFI17
 1161 0154 06000000 		.4byte	.LCFI18
 1162 0158 0200     		.2byte	0x2
 1163 015a 7D       		.byte	0x7d
 1164 015b 10       		.sleb128 16
 1165 015c 06000000 		.4byte	.LCFI18
 1166 0160 26000000 		.4byte	.LFE6
 1167 0164 0200     		.2byte	0x2
 1168 0166 77       		.byte	0x77
 1169 0167 10       		.sleb128 16
 1170 0168 00000000 		.4byte	0
 1171 016c 00000000 		.4byte	0
 1172              	.LLST7:
 1173 0170 00000000 		.4byte	.LFB7
 1174 0174 02000000 		.4byte	.LCFI19
 1175 0178 0200     		.2byte	0x2
 1176 017a 7D       		.byte	0x7d
 1177 017b 00       		.sleb128 0
 1178 017c 02000000 		.4byte	.LCFI19
 1179 0180 04000000 		.4byte	.LCFI20
 1180 0184 0200     		.2byte	0x2
 1181 0186 7D       		.byte	0x7d
 1182 0187 04       		.sleb128 4
 1183 0188 04000000 		.4byte	.LCFI20
 1184 018c 18000000 		.4byte	.LFE7
 1185 0190 0200     		.2byte	0x2
 1186 0192 77       		.byte	0x77
 1187 0193 04       		.sleb128 4
 1188 0194 00000000 		.4byte	0
 1189 0198 00000000 		.4byte	0
 1190              	.LLST8:
 1191 019c 00000000 		.4byte	.LFB8
 1192 01a0 02000000 		.4byte	.LCFI21
 1193 01a4 0200     		.2byte	0x2
 1194 01a6 7D       		.byte	0x7d
 1195 01a7 00       		.sleb128 0
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 28


 1196 01a8 02000000 		.4byte	.LCFI21
 1197 01ac 04000000 		.4byte	.LCFI22
 1198 01b0 0200     		.2byte	0x2
 1199 01b2 7D       		.byte	0x7d
 1200 01b3 04       		.sleb128 4
 1201 01b4 04000000 		.4byte	.LCFI22
 1202 01b8 1E000000 		.4byte	.LFE8
 1203 01bc 0200     		.2byte	0x2
 1204 01be 77       		.byte	0x77
 1205 01bf 04       		.sleb128 4
 1206 01c0 00000000 		.4byte	0
 1207 01c4 00000000 		.4byte	0
 1208              	.LLST9:
 1209 01c8 00000000 		.4byte	.LFB9
 1210 01cc 02000000 		.4byte	.LCFI23
 1211 01d0 0200     		.2byte	0x2
 1212 01d2 7D       		.byte	0x7d
 1213 01d3 00       		.sleb128 0
 1214 01d4 02000000 		.4byte	.LCFI23
 1215 01d8 04000000 		.4byte	.LCFI24
 1216 01dc 0200     		.2byte	0x2
 1217 01de 7D       		.byte	0x7d
 1218 01df 04       		.sleb128 4
 1219 01e0 04000000 		.4byte	.LCFI24
 1220 01e4 18000000 		.4byte	.LFE9
 1221 01e8 0200     		.2byte	0x2
 1222 01ea 77       		.byte	0x77
 1223 01eb 04       		.sleb128 4
 1224 01ec 00000000 		.4byte	0
 1225 01f0 00000000 		.4byte	0
 1226              	.LLST10:
 1227 01f4 00000000 		.4byte	.LFB10
 1228 01f8 02000000 		.4byte	.LCFI25
 1229 01fc 0200     		.2byte	0x2
 1230 01fe 7D       		.byte	0x7d
 1231 01ff 00       		.sleb128 0
 1232 0200 02000000 		.4byte	.LCFI25
 1233 0204 04000000 		.4byte	.LCFI26
 1234 0208 0200     		.2byte	0x2
 1235 020a 7D       		.byte	0x7d
 1236 020b 04       		.sleb128 4
 1237 020c 04000000 		.4byte	.LCFI26
 1238 0210 18000000 		.4byte	.LFE10
 1239 0214 0200     		.2byte	0x2
 1240 0216 77       		.byte	0x77
 1241 0217 04       		.sleb128 4
 1242 0218 00000000 		.4byte	0
 1243 021c 00000000 		.4byte	0
 1244              	.LLST11:
 1245 0220 00000000 		.4byte	.LFB11
 1246 0224 02000000 		.4byte	.LCFI27
 1247 0228 0200     		.2byte	0x2
 1248 022a 7D       		.byte	0x7d
 1249 022b 00       		.sleb128 0
 1250 022c 02000000 		.4byte	.LCFI27
 1251 0230 04000000 		.4byte	.LCFI28
 1252 0234 0200     		.2byte	0x2
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 29


 1253 0236 7D       		.byte	0x7d
 1254 0237 04       		.sleb128 4
 1255 0238 04000000 		.4byte	.LCFI28
 1256 023c 18000000 		.4byte	.LFE11
 1257 0240 0200     		.2byte	0x2
 1258 0242 77       		.byte	0x77
 1259 0243 04       		.sleb128 4
 1260 0244 00000000 		.4byte	0
 1261 0248 00000000 		.4byte	0
 1262              		.section	.debug_aranges,"",%progbits
 1263 0000 74000000 		.4byte	0x74
 1264 0004 0200     		.2byte	0x2
 1265 0006 00000000 		.4byte	.Ldebug_info0
 1266 000a 04       		.byte	0x4
 1267 000b 00       		.byte	0
 1268 000c 0000     		.2byte	0
 1269 000e 0000     		.2byte	0
 1270 0010 00000000 		.4byte	.LFB0
 1271 0014 22000000 		.4byte	.LFE0-.LFB0
 1272 0018 00000000 		.4byte	.LFB1
 1273 001c 26000000 		.4byte	.LFE1-.LFB1
 1274 0020 00000000 		.4byte	.LFB2
 1275 0024 16000000 		.4byte	.LFE2-.LFB2
 1276 0028 00000000 		.4byte	.LFB3
 1277 002c 28000000 		.4byte	.LFE3-.LFB3
 1278 0030 00000000 		.4byte	.LFB4
 1279 0034 22000000 		.4byte	.LFE4-.LFB4
 1280 0038 00000000 		.4byte	.LFB5
 1281 003c 26000000 		.4byte	.LFE5-.LFB5
 1282 0040 00000000 		.4byte	.LFB6
 1283 0044 26000000 		.4byte	.LFE6-.LFB6
 1284 0048 00000000 		.4byte	.LFB7
 1285 004c 18000000 		.4byte	.LFE7-.LFB7
 1286 0050 00000000 		.4byte	.LFB8
 1287 0054 1E000000 		.4byte	.LFE8-.LFB8
 1288 0058 00000000 		.4byte	.LFB9
 1289 005c 18000000 		.4byte	.LFE9-.LFB9
 1290 0060 00000000 		.4byte	.LFB10
 1291 0064 18000000 		.4byte	.LFE10-.LFB10
 1292 0068 00000000 		.4byte	.LFB11
 1293 006c 18000000 		.4byte	.LFE11-.LFB11
 1294 0070 00000000 		.4byte	0
 1295 0074 00000000 		.4byte	0
 1296              		.section	.debug_ranges,"",%progbits
 1297              	.Ldebug_ranges0:
 1298 0000 00000000 		.4byte	.LFB0
 1299 0004 22000000 		.4byte	.LFE0
 1300 0008 00000000 		.4byte	.LFB1
 1301 000c 26000000 		.4byte	.LFE1
 1302 0010 00000000 		.4byte	.LFB2
 1303 0014 16000000 		.4byte	.LFE2
 1304 0018 00000000 		.4byte	.LFB3
 1305 001c 28000000 		.4byte	.LFE3
 1306 0020 00000000 		.4byte	.LFB4
 1307 0024 22000000 		.4byte	.LFE4
 1308 0028 00000000 		.4byte	.LFB5
 1309 002c 26000000 		.4byte	.LFE5
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 30


 1310 0030 00000000 		.4byte	.LFB6
 1311 0034 26000000 		.4byte	.LFE6
 1312 0038 00000000 		.4byte	.LFB7
 1313 003c 18000000 		.4byte	.LFE7
 1314 0040 00000000 		.4byte	.LFB8
 1315 0044 1E000000 		.4byte	.LFE8
 1316 0048 00000000 		.4byte	.LFB9
 1317 004c 18000000 		.4byte	.LFE9
 1318 0050 00000000 		.4byte	.LFB10
 1319 0054 18000000 		.4byte	.LFE10
 1320 0058 00000000 		.4byte	.LFB11
 1321 005c 18000000 		.4byte	.LFE11
 1322 0060 00000000 		.4byte	0
 1323 0064 00000000 		.4byte	0
 1324              		.section	.debug_line,"",%progbits
 1325              	.Ldebug_line0:
 1326 0000 32010000 		.section	.debug_str,"MS",%progbits,1
 1326      02004B00 
 1326      00000201 
 1326      FB0E0D00 
 1326      01010101 
 1327              	.LASF28:
 1328 0000 656E645F 		.ascii	"end_echo_IRR_Enable\000"
 1328      6563686F 
 1328      5F495252 
 1328      5F456E61 
 1328      626C6500 
 1329              	.LASF16:
 1330 0014 72656733 		.ascii	"reg32\000"
 1330      3200
 1331              	.LASF29:
 1332 001a 656E645F 		.ascii	"end_echo_IRR_Disable\000"
 1332      6563686F 
 1332      5F495252 
 1332      5F446973 
 1332      61626C65 
 1333              	.LASF31:
 1334 002f 656E645F 		.ascii	"end_echo_IRR_ClearPending\000"
 1334      6563686F 
 1334      5F495252 
 1334      5F436C65 
 1334      61725065 
 1335              	.LASF3:
 1336 0049 73686F72 		.ascii	"short unsigned int\000"
 1336      7420756E 
 1336      7369676E 
 1336      65642069 
 1336      6E7400
 1337              	.LASF18:
 1338 005c 656E645F 		.ascii	"end_echo_IRR_Start\000"
 1338      6563686F 
 1338      5F495252 
 1338      5F537461 
 1338      727400
 1339              	.LASF27:
 1340 006f 656E645F 		.ascii	"end_echo_IRR_GetPriority\000"
 1340      6563686F 
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 31


 1340      5F495252 
 1340      5F476574 
 1340      5072696F 
 1341              	.LASF30:
 1342 0088 656E645F 		.ascii	"end_echo_IRR_SetPending\000"
 1342      6563686F 
 1342      5F495252 
 1342      5F536574 
 1342      50656E64 
 1343              	.LASF1:
 1344 00a0 756E7369 		.ascii	"unsigned char\000"
 1344      676E6564 
 1344      20636861 
 1344      7200
 1345              	.LASF15:
 1346 00ae 72656738 		.ascii	"reg8\000"
 1346      00
 1347              	.LASF9:
 1348 00b3 6C6F6E67 		.ascii	"long unsigned int\000"
 1348      20756E73 
 1348      69676E65 
 1348      6420696E 
 1348      7400
 1349              	.LASF11:
 1350 00c5 75696E74 		.ascii	"uint8\000"
 1350      3800
 1351              	.LASF19:
 1352 00cb 656E645F 		.ascii	"end_echo_IRR_Stop\000"
 1352      6563686F 
 1352      5F495252 
 1352      5F53746F 
 1352      7000
 1353              	.LASF25:
 1354 00dd 7072696F 		.ascii	"priority\000"
 1354      72697479 
 1354      00
 1355              	.LASF14:
 1356 00e6 646F7562 		.ascii	"double\000"
 1356      6C6500
 1357              	.LASF33:
 1358 00ed 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\end_echo_IRR.c\000"
 1358      6E657261 
 1358      7465645F 
 1358      536F7572 
 1358      63655C50 
 1359              	.LASF12:
 1360 0115 75696E74 		.ascii	"uint32\000"
 1360      333200
 1361              	.LASF4:
 1362 011c 756E7369 		.ascii	"unsigned int\000"
 1362      676E6564 
 1362      20696E74 
 1362      00
 1363              	.LASF22:
 1364 0129 61646472 		.ascii	"address\000"
 1364      65737300 
 1365              	.LASF6:
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 32


 1366 0131 6C6F6E67 		.ascii	"long long unsigned int\000"
 1366      206C6F6E 
 1366      6720756E 
 1366      7369676E 
 1366      65642069 
 1367              	.LASF17:
 1368 0148 63796973 		.ascii	"cyisraddress\000"
 1368      72616464 
 1368      72657373 
 1368      00
 1369              	.LASF24:
 1370 0155 656E645F 		.ascii	"end_echo_IRR_SetPriority\000"
 1370      6563686F 
 1370      5F495252 
 1370      5F536574 
 1370      5072696F 
 1371              	.LASF8:
 1372 016e 73697A65 		.ascii	"sizetype\000"
 1372      74797065 
 1372      00
 1373              	.LASF5:
 1374 0177 6C6F6E67 		.ascii	"long long int\000"
 1374      206C6F6E 
 1374      6720696E 
 1374      7400
 1375              	.LASF34:
 1376 0185 443A5C55 		.ascii	"D:\\Users\\BertoTech\\Documents\\PID\\FW_Fan_Contro"
 1376      73657273 
 1376      5C426572 
 1376      746F5465 
 1376      63685C44 
 1377 01b3 6C30312E 		.ascii	"l01.cydsn\000"
 1377      63796473 
 1377      6E00
 1378              	.LASF10:
 1379 01bd 63686172 		.ascii	"char\000"
 1379      00
 1380              	.LASF23:
 1381 01c2 72616D56 		.ascii	"ramVectorTable\000"
 1381      6563746F 
 1381      72546162 
 1381      6C6500
 1382              	.LASF35:
 1383 01d1 656E645F 		.ascii	"end_echo_IRR_GetState\000"
 1383      6563686F 
 1383      5F495252 
 1383      5F476574 
 1383      53746174 
 1384              	.LASF26:
 1385 01e7 656E645F 		.ascii	"end_echo_IRR_GetVector\000"
 1385      6563686F 
 1385      5F495252 
 1385      5F476574 
 1385      56656374 
 1386              	.LASF2:
 1387 01fe 73686F72 		.ascii	"short int\000"
 1387      7420696E 
ARM GAS  D:\Users\BertoTech\TEMP\ccNGJ7vI.s 			page 33


 1387      7400
 1388              	.LASF32:
 1389 0208 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1389      4320342E 
 1389      372E3320 
 1389      32303133 
 1389      30333132 
 1390 023b 616E6368 		.ascii	"anch revision 196615]\000"
 1390      20726576 
 1390      6973696F 
 1390      6E203139 
 1390      36363135 
 1391              	.LASF7:
 1392 0251 6C6F6E67 		.ascii	"long int\000"
 1392      20696E74 
 1392      00
 1393              	.LASF13:
 1394 025a 666C6F61 		.ascii	"float\000"
 1394      7400
 1395              	.LASF0:
 1396 0260 7369676E 		.ascii	"signed char\000"
 1396      65642063 
 1396      68617200 
 1397              	.LASF20:
 1398 026c 656E645F 		.ascii	"end_echo_IRR_StartEx\000"
 1398      6563686F 
 1398      5F495252 
 1398      5F537461 
 1398      72744578 
 1399              	.LASF21:
 1400 0281 656E645F 		.ascii	"end_echo_IRR_SetVector\000"
 1400      6563686F 
 1400      5F495252 
 1400      5F536574 
 1400      56656374 
 1401              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
